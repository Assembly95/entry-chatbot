## 엔트리 블록 중첩 시스템 정리

### 🎯 구현된 기능

#### 1. **블록 타입**
- **시작 블록** (초록색): 프로그램의 시작점
- **컨테이너 블록**: 다른 블록을 포함할 수 있음
  - 반복문 (하늘색): 계속/횟수/조건 반복
  - 조건문 (주황색): if문 역할
- **일반 블록**: 단순 명령 (움직이기, 말하기 등)

#### 2. **중첩 시스템**
- 컨테이너 블록 안에 무한 중첩 가능
- 블록 선택 → 추가 → 선택된 블록 내부에 삽입
- 자동 들여쓰기 (레벨당 14px)
- 컨테이너가 내용에 맞춰 자동 확장

#### 3. **상호작용**
- **클릭**: 블록 선택 (노란 테두리)
- **추가**: 선택된 블록 안에 새 블록 삽입
- **제거**: 선택된 블록 삭제
- **시각적 피드백**: 선택 상태, 투명도 변화

#### 4. **제약사항**
- 일반 블록에는 자식 추가 불가
- 시작 블록은 삭제 불가
- 컨테이너만 다른 블록 포함 가능

### 📝 사용 방법

1. **블록 추가하기**
   ```
   1) 부모 블록 클릭 (노란 테두리)
   2) 원하는 블록 타입 버튼 클릭
   3) 선택된 블록 내부에 자동 추가
   ```

2. **중첩 구조 만들기**
   ```
   시작 블록
   └── 반복문 (클릭)
       └── 조건문 추가
           └── 일반 블록 추가
           └── 또 다른 반복문 추가
               └── ...무한 중첩
   ```

3. **샘플 구조**
   ```
   시작하기 버튼을 클릭했을 때
   └── 계속 반복하기
       ├── 만일 마우스를 클릭했는가? 라면
       │   ├── 10 만큼 움직이기
       │   └── 10 번 반복하기
       │       └── 오른쪽으로 90도 돌기
       └── 1초 기다리기
   ```

### 🔧 핵심 코드 구조

```javascript
// 블록 객체 구조
block = {
    id: 'unique_id',
    type: 'start|loop|condition|simple',
    text: '블록에 표시될 텍스트',
    color: '#색상코드',
    stroke: '#테두리색',
    children: [] // 자식 블록들
}

// 높이 계산 (재귀)
function calculateInnerHeight(block) {
    // 자식들의 높이 + 패딩 계산
}

// 렌더링 (재귀)
function renderBlock(block, x, y, depth) {
    // 1. 현재 블록 그리기
    // 2. 자식 블록들 재귀적으로 그리기
}
```

### 💡 특징

- **실제 엔트리와 동일한 시각적 구조**
- **무한 중첩 가능한 재귀 시스템**
- **자동 크기 조절 및 배치**
- **직관적인 클릭 선택 방식**
- **트리 뷰어로 전체 구조 확인**

이제 실제 엔트리처럼 블록을 중첩하여 복잡한 프로그램 구조를 만들 수 있습니다!