{
  "id": "show",
  "category": "looks",
  "name": "모양 보이기",
  "description": "숨겨진 오브젝트의 모양을 화면에 다시 보이게 만듭니다. 오브젝트의 가시성을 제어하는 기본적인 블록입니다.",

  "visual_appearance": {
    "shape": "둥근 모서리를 가진 직사각형 블록",
    "color": "보라색 (#A855F7)",
    "text_color": "흰색",
    "icon": "눈 모양 아이콘",
    "block_type": "실행 블록 (위아래 연결 가능)"
  },

  "educational_context": {
    "learning_objectives": [
      "오브젝트의 가시성 개념 이해",
      "화면에 나타나는 것과 숨겨지는 것의 구분 학습",
      "게임이나 애니메이션에서 등장/퇴장 효과 구현",
      "조건 블록과 함께 사용하여 상황에 따른 표시/숨김 제어",
      "사용자 인터페이스 기본 요소 이해"
    ],
    "key_concepts": [
      {
        "concept": "가시성(Visibility)",
        "explanation": "오브젝트가 화면에 보이거나 보이지 않는 상태를 나타내며, 오브젝트는 보이지 않아도 여전히 존재하고 다른 기능은 작동함"
      },
      {
        "concept": "화면 표시 제어",
        "explanation": "프로그램에서 필요에 따라 요소를 보이거나 숨기는 것으로, 게임의 아이템, 메뉴, 캐릭터 등을 관리하는 기본 방법"
      },
      {
        "concept": "사용자 인터페이스",
        "explanation": "사용자가 보는 화면의 요소들을 적절히 배치하고 관리하여 보기 좋고 사용하기 쉬운 인터페이스 만들기"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["Entry 기본 인터페이스 사용법", "오브젝트의 개념 이해", "블록 연결 방법 숙지"]
  },

  "usage_examples": [
    {
      "title": "기본 모양 표시",
      "description": "시작 시 모양을 보이게 하기",
      "blocks": ["[시작] 버튼을 클릭했을 때", "모양 보이기"],
      "explanation": "프로그램이 시작될 때 오브젝트의 모양을 화면에 표시합니다."
    },
    {
      "title": "조건에 따른 표시",
      "description": "특정 조건에서만 모양 보이기",
      "blocks": ["[시작] 버튼을 클릭했을 때", "만약 <[스페이스] 키를 눌렀는가?> 이라면", "  모양 보이기"],
      "explanation": "스페이스 키를 눌렀을 때만 오브젝트가 화면에 나타납니다."
    },
    {
      "title": "깜빡이는 효과",
      "description": "모양을 보였다 숨겼다 반복",
      "blocks": [
        "[시작] 버튼을 클릭했을 때",
        "계속 반복하기",
        "  모양 보이기",
        "  1초 기다리기",
        "  모양 숨기기",
        "  1초 기다리기"
      ],
      "explanation": "1초마다 모양이 나타났다 사라지는 깜빡이는 효과를 만듭니다."
    },
    {
      "title": "순차적 등장",
      "description": "여러 오브젝트가 순서대로 나타나기",
      "blocks": [
        "[시작] 버튼을 클릭했을 때",
        "모든 [오브젝트] 기준으로 실행하기",
        "  모양 숨기기",
        "2초 기다리기",
        "[캐릭터1] 기준으로 실행하기",
        "  모양 보이기",
        "1초 기다리기",
        "[캐릭터2] 기준으로 실행하기",
        "  모양 보이기"
      ],
      "explanation": "모든 오브젝트를 숨긴 후 순서대로 하나씩 나타나게 만듭니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "모양 보이기 블록을 언제 사용하는지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "일상에서 불을 켜면 물건이 보이는 것처럼, 이 블록은 화면에 숨겨진 것을 보이게 해요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'생김새' 카테고리에서 보라색 '모양 보이기' 블록을 찾아보세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "먼저 '모양 숨기기'로 오브젝트를 숨긴 다음 '모양 보이기'를 사용해보세요"
        }
      ]
    },
    {
      "situation": "모양 보이기를 했는데도 화면에 안 보여요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "오브젝트가 화면 밖에 있거나 다른 오브젝트 뒤에 숨어있을 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "x:0, y:0 위치로 이동하기 블록으로 오브젝트를 화면 중앙으로 옮겨보세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "'생김새' 카테고리의 '순서를 맨 앞으로 바꾸기' 블록을 사용해보세요"
        }
      ]
    },
    {
      "situation": "게임에서 아이템이 나타났다 사라졌다 하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'흐름' 카테고리에서 '만약 ~라면' 블록을 먼저 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "concept",
          "content": "조건 블록 안에 '모양 보이기'를 넣으면 특정 상황에서만 나타나게 할 수 있어요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "타이머나 점수 조건을 사용해서 아이템 등장 시점을 조절해보세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "모양 보이기를 했는데 오브젝트가 안 보임",
      "why_it_happens": "오브젝트가 화면 밖에 있거나 투명도가 0이거나 다른 오브젝트에 가려짐",
      "consequence": "블록은 정상 작동하지만 사용자가 결과를 확인할 수 없음",
      "solution": "오브젝트 위치를 화면 안으로 옮기고, 투명도를 확인하고, 순서를 앞으로 바꾸기",
      "teaching_moment": "컴퓨터는 명령을 정확히 수행하지만, 우리가 원하는 결과를 보려면 모든 조건을 고려해야 해요"
    },
    {
      "mistake": "계속 모양 보이기만 사용해서 효과가 없음",
      "why_it_happens": "이미 보이는 오브젝트에 모양 보이기를 반복 사용",
      "consequence": "변화가 없어서 블록이 작동하지 않는 것처럼 보임",
      "solution": "'모양 숨기기'와 '모양 보이기'를 번갈아 사용하여 변화 만들기",
      "teaching_moment": "변화를 만들려면 시작점과 끝점이 달라야 해요. 이미 보이는 것을 보이게 하면 변화가 없어요"
    },
    {
      "mistake": "모든 오브젝트를 동시에 보이게/숨기게 함",
      "why_it_happens": "오브젝트별 개별 제어 방법을 모름",
      "consequence": "원하지 않는 오브젝트까지 함께 영향을 받음",
      "solution": "각 오브젝트에 따로 스크립트를 만들거나 '~기준으로 실행하기' 블록 사용",
      "teaching_moment": "각각을 개별적으로 제어할 수 있다는 것이 프로그래밍의 강력한 기능이에요"
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "생김새 카테고리 찾기",
      "instruction": "블록 팔레트에서 '생김새' 카테고리를 클릭하세요.",
      "visual_hint": "보라색 눈 모양의 아이콘을 찾아보세요."
    },
    {
      "step": 2,
      "title": "모양 보이기 블록 선택",
      "instruction": "'모양 보이기' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "보라색 배경에 흰색 글씨로 '모양 보이기'라고 적힌 블록이에요."
    },
    {
      "step": 3,
      "title": "시작 블록과 연결",
      "instruction": "시작 블록(노란색 모자 블록) 아래에 연결하세요.",
      "visual_hint": "블록 위쪽의 홈과 아래쪽의 돌기를 맞춰서 연결하세요."
    },
    {
      "step": 4,
      "title": "테스트하기",
      "instruction": "초록색 시작 버튼을 눌러서 오브젝트가 나타나는지 확인하세요.",
      "visual_hint": "오브젝트가 이미 보이는 상태라면 먼저 '모양 숨기기'를 실행해보세요."
    },
    {
      "step": 5,
      "title": "다양한 효과 추가",
      "instruction": "기다리기, 조건 블록 등과 조합해서 더 재미있는 효과를 만들어보세요.",
      "visual_hint": "'모양 숨기기'와 번갈아 사용하면 깜빡이는 효과를 만들 수 있어요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "hide",
      "relationship": "반대 기능",
      "explanation": "'모양 숨기기' 블록으로 오브젝트를 화면에서 사라지게 만들기"
    },
    {
      "block_id": "change_object_index",
      "relationship": "표시 순서 제어",
      "explanation": "오브젝트의 앞뒤 순서를 바꿔서 다른 오브젝트에 가려지지 않게 하기"
    },
    {
      "block_id": "change_effect_amount",
      "relationship": "투명도 조절",
      "explanation": "투명도 효과로 서서히 나타나거나 사라지는 효과 만들기"
    },
    {
      "block_id": "_if",
      "relationship": "조건부 표시",
      "explanation": "특정 조건이 만족될 때만 모양을 보이게 하기"
    },
    {
      "block_id": "locate_xy",
      "relationship": "위치와 함께 제어",
      "explanation": "특정 위치에서 모양을 보이게 하여 등장 효과 연출"
    }
  ],

  "debugging_tips": [
    {
      "problem": "모양 보이기를 실행했는데 화면에 아무것도 안 보여요",
      "possible_causes": [
        "오브젝트가 화면 밖에 위치함",
        "다른 오브젝트에 완전히 가려져 있음",
        "투명도가 100으로 설정되어 보이지 않음",
        "크기가 0으로 설정되어 있음"
      ],
      "solutions": [
        "x:0, y:0 위치로 이동하기로 화면 중앙으로 옮기기",
        "'순서를 맨 앞으로 바꾸기'로 다른 오브젝트 앞으로 가져오기",
        "'모든 효과 지우기'로 투명도 초기화하기",
        "'크기를 100으로 정하기'로 크기 복원하기"
      ]
    },
    {
      "problem": "모양 보이기를 여러 번 실행해도 변화가 없어요",
      "possible_causes": ["이미 보이는 상태에서 계속 보이기 명령 실행", "모양 보이기와 숨기기가 너무 빨리 반복됨"],
      "solutions": [
        "먼저 '모양 숨기기'를 실행한 후 '모양 보이기' 실행",
        "'기다리기' 블록을 사용해서 변화를 확인할 수 있는 시간 확보"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "무대의 막 올리기",
      "explanation": "연극에서 막이 올라가면 배우가 관객에게 보이는 것처럼, 모양 보이기는 오브젝트를 관객(사용자)에게 보여줍니다."
    },
    {
      "analogy": "전등 스위치",
      "explanation": "방의 전등을 켜면 물건들이 보이게 되는 것처럼, 이 블록은 화면의 요소를 보이게 만듭니다."
    },
    {
      "analogy": "숨바꼭질",
      "explanation": "숨바꼭질에서 '나왔다!'고 말하며 나타나는 것처럼, 게임에서 캐릭터나 아이템이 나타날 때 사용됩니다."
    },
    {
      "analogy": "마술사의 등장",
      "explanation": "마술사가 연기 뒤에서 갑자기 나타나는 것처럼, 프로그램에서 요소들을 극적으로 등장시킬 때 활용됩니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "페이드 인 효과",
      "description": "투명도를 점진적으로 줄여서 서서히 나타나는 효과 만들기",
      "use_case": "영화 자막이나 게임 UI가 부드럽게 나타나는 효과"
    },
    {
      "concept": "조건부 표시",
      "description": "사용자 행동이나 게임 상태에 따라 자동으로 나타나고 사라지는 시스템",
      "use_case": "체력이 낮을 때만 경고 표시, 특정 점수에 도달했을 때 보상 표시"
    },
    {
      "concept": "순차적 등장",
      "description": "여러 오브젝트가 시간차를 두고 하나씩 나타나는 연출",
      "use_case": "스토리텔링에서 등장인물이 차례로 나타나기, 메뉴 항목들이 순서대로 나타나기"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "모양 보이기 블록을 사용해서 오브젝트를 화면에 표시할 수 있다",
      "example": "시작 시 캐릭터 나타나게 하기, 버튼을 눌렀을 때 도움말 표시하기"
    },
    {
      "level": "중급",
      "criteria": "조건 블록과 함께 사용해서 상황에 맞는 표시/숨김 제어를 구현할 수 있다",
      "example": "게임 상태에 따른 UI 표시, 사용자 선택에 따른 메뉴 나타내기"
    },
    {
      "level": "고급",
      "criteria": "다양한 블록과 조합하여 동적이고 매력적인 사용자 경험을 설계할 수 있다",
      "example": "인터랙티브 스토리의 등장인물 연출, 복잡한 게임 UI 시스템 구현"
    }
  ]
}
