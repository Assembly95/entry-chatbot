{
  "id": "insert_value_to_list",
  "category": "list",
  "name": "리스트 [리스트명]의 [인덱스]번째에 [값] 넣기",
  "description": "리스트의 특정 위치에 새로운 항목을 삽입하는 블록입니다. 기존 항목들은 뒤로 밀려나며 리스트 길이가 1 증가합니다. 1번 위치에 넣으면 맨 앞에, 리스트 길이+1 위치에 넣으면 맨 뒤에 추가됩니다.",

  "educational_context": {
    "learning_objectives": [
      "리스트 삽입 연산의 원리 이해",
      "인덱스 기반 데이터 조작 학습",
      "순서가 있는 데이터 구조 관리",
      "추가와 삽입의 차이점 이해",
      "동적 데이터 구조 변경 기법"
    ],
    "key_concepts": [
      {
        "concept": "삽입(Insertion)",
        "explanation": "리스트의 특정 위치에 새 항목을 넣고, 그 위치부터의 기존 항목들을 한 칸씩 뒤로 미는 작업"
      },
      {
        "concept": "인덱스 이동(Index Shifting)",
        "explanation": "삽입 위치 이후의 모든 항목들의 인덱스가 1씩 증가하는 현상"
      },
      {
        "concept": "리스트 확장",
        "explanation": "삽입으로 인해 리스트의 전체 길이가 증가하는 동적 크기 변경"
      },
      {
        "concept": "위치 지정 삽입",
        "explanation": "단순 추가와 달리 원하는 정확한 위치에 데이터를 배치하는 정밀한 제어"
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": ["리스트 만들기와 기본 사용법", "리스트에 항목 추가하기", "인덱스 개념 이해", "리스트 길이 확인하기"]
  },

  "usage_examples": [
    {
      "title": "우선순위 대기열",
      "description": "중요도에 따라 적절한 위치에 작업 삽입",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '대기열' 비우기",
        "리스트 '대기열'에 '일반작업1' 추가하기",
        "리스트 '대기열'에 '일반작업2' 추가하기",
        "리스트 '대기열'에 '일반작업3' 추가하기",
        "",
        "1 키를 눌렀을 때",
        "// 긴급 작업은 맨 앞에 삽입",
        "리스트 '대기열'의 1번째에 '긴급작업' 넣기",
        "'긴급 작업이 최우선으로 추가되었습니다' 말하기",
        "",
        "2 키를 눌렀을 때",
        "// 중요 작업은 두 번째에 삽입",
        "리스트 '대기열'의 2번째에 '중요작업' 넣기",
        "'중요 작업이 추가되었습니다' 말하기",
        "",
        "3 키를 눌렀을 때",
        "// 일반 작업은 중간에 삽입",
        "중간위치 변수를 (리스트 '대기열'의 길이) ÷ 2 + 1로 정하기",
        "리스트 '대기열'의 (중간위치)번째에 '보통작업' 넣기",
        "'보통 작업이 중간에 추가되었습니다' 말하기"
      ],
      "explanation": "작업의 우선순위에 따라 대기열의 적절한 위치에 삽입하는 시스템입니다."
    },
    {
      "title": "점수 순위표",
      "description": "새로운 점수를 순위에 맞는 위치에 삽입",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '점수표' 비우기",
        "리스트 '점수표'에 90 추가하기",
        "리스트 '점수표'에 75 추가하기",
        "리스트 '점수표'에 60 추가하기",
        "리스트 '점수표'에 45 추가하기",
        "리스트 '점수표'에 30 추가하기",
        "",
        "스페이스 키를 눌렀을 때",
        "새점수 변수를 (40)부터 (85)까지의 무작위 수로 정하기",
        "'새로운 점수: ' + (새점수) 말하기",
        "삽입위치 변수를 1로 정하기",
        "",
        "// 적절한 순위 찾기",
        "(리스트 '점수표'의 길이)번 반복하기",
        "  만약 (새점수) < (리스트 '점수표'의 (반복 횟수)번째) 라면",
        "    삽입위치 변수를 (반복 횟수) + 1로 정하기",
        "  아니라면",
        "    반복 중단하기",
        "",
        "리스트 '점수표'의 (삽입위치)번째에 (새점수) 넣기",
        "'순위 ' + (삽입위치) + '등에 추가되었습니다!' 말하기"
      ],
      "explanation": "새로운 점수를 기존 순위표의 적절한 위치에 삽입하여 정렬을 유지하는 시스템입니다."
    },
    {
      "title": "문장 편집기",
      "description": "문장의 특정 위치에 단어 삽입",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '문장' 비우기",
        "리스트 '문장'에 '나는' 추가하기",
        "리스트 '문장'에 '학교에' 추가하기",
        "리스트 '문장'에 '갑니다' 추가하기",
        "",
        "// 현재 문장 표시",
        "문장표시 변수를 ''으로 정하기",
        "(리스트 '문장'의 길이)번 반복하기",
        "  문장표시 변수를 (문장표시) + (리스트 '문장'의 (반복 횟수)번째) + ' '로 정하기",
        "'현재: ' + (문장표시) 말하기",
        "",
        "'어느 위치에 단어를 넣을까요? (1-' + ((리스트 '문장'의 길이) + 1) + ')' 묻고 대답 기다리기",
        "위치 변수를 (대답)으로 정하기",
        "'넣을 단어를 입력하세요' 묻고 대답 기다리기",
        "단어 변수를 (대답)으로 정하기",
        "",
        "리스트 '문장'의 (위치)번째에 (단어) 넣기",
        "",
        "// 수정된 문장 표시",
        "문장표시 변수를 ''으로 정하기",
        "(리스트 '문장'의 길이)번 반복하기",
        "  문장표시 변수를 (문장표시) + (리스트 '문장'의 (반복 횟수)번째) + ' '로 정하기",
        "'수정됨: ' + (문장표시) 말하기"
      ],
      "explanation": "문장을 구성하는 단어 리스트의 원하는 위치에 새 단어를 삽입하는 편집기입니다."
    },
    {
      "title": "플레이리스트 관리",
      "description": "음악 재생 목록에 곡 삽입",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '플레이리스트' 비우기",
        "리스트 '플레이리스트'에 '노래1' 추가하기",
        "리스트 '플레이리스트'에 '노래2' 추가하기",
        "리스트 '플레이리스트'에 '노래3' 추가하기",
        "현재곡 변수를 1로 정하기",
        "",
        "// 현재 재생 중인 곡 표시",
        "계속 반복하기",
        "  '현재 재생: ' + (리스트 '플레이리스트'의 (현재곡)번째) 말하기",
        "  3초 기다리기",
        "  현재곡 변수를 1만큼 바꾸기",
        "  만약 (현재곡) > (리스트 '플레이리스트'의 길이) 라면",
        "    현재곡 변수를 1로 정하기",
        "",
        "n 키를 눌렀을 때",
        "// 다음 곡으로 새 노래 삽입",
        "'추가할 노래 제목:' 묻고 대답 기다리기",
        "다음위치 변수를 (현재곡) + 1로 정하기",
        "만약 (다음위치) > (리스트 '플레이리스트'의 길이) 라면",
        "  다음위치 변수를 (리스트 '플레이리스트'의 길이) + 1로 정하기",
        "리스트 '플레이리스트'의 (다음위치)번째에 (대답) 넣기",
        "'다음 곡으로 추가되었습니다!' 말하기"
      ],
      "explanation": "재생 목록의 원하는 위치에 새로운 곡을 삽입하는 음악 플레이어 시스템입니다."
    },
    {
      "title": "게임 아이템 정렬",
      "description": "인벤토리에 아이템을 종류별로 정렬하여 삽입",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '인벤토리' 비우기",
        "리스트 '인벤토리'에 '무기:검' 추가하기",
        "리스트 '인벤토리'에 '무기:활' 추가하기",
        "리스트 '인벤토리'에 '방어구:갑옷' 추가하기",
        "리스트 '인벤토리'에 '방어구:방패' 추가하기",
        "리스트 '인벤토리'에 '물약:체력' 추가하기",
        "",
        "아이템 키를 눌렀을 때",
        "'아이템 종류 (무기/방어구/물약):' 묻고 대답 기다리기",
        "종류 변수를 (대답)으로 정하기",
        "'아이템 이름:' 묻고 대답 기다리기",
        "이름 변수를 (대답)으로 정하기",
        "새아이템 변수를 (종류) + ':' + (이름)으로 정하기",
        "",
        "// 같은 종류 아이템 뒤에 삽입",
        "삽입위치 변수를 (리스트 '인벤토리'의 길이) + 1로 정하기",
        "(리스트 '인벤토리'의 길이)번 반복하기",
        "  인덱스 변수를 (리스트 '인벤토리'의 길이) - (반복 횟수) + 1로 정하기",
        "  만약 (리스트 '인벤토리'의 (인덱스)번째)에 (종류)가 포함되어 있는가? 라면",
        "    삽입위치 변수를 (인덱스) + 1로 정하기",
        "    반복 중단하기",
        "",
        "리스트 '인벤토리'의 (삽입위치)번째에 (새아이템) 넣기",
        "(새아이템) + '이(가) 추가되었습니다!' 말하기"
      ],
      "explanation": "아이템을 종류별로 그룹화하여 적절한 위치에 삽입하는 인벤토리 관리 시스템입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "특정 위치에 항목을 넣을 수 없어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'자료' 카테고리에서 리스트 삽입 관련 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "concept",
          "content": "삽입할 위치는 1부터 (리스트 길이 + 1)까지 가능해요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "'리스트 [ ]의 [ ]번째에 [ ] 넣기' 블록을 사용하세요"
        }
      ]
    },
    {
      "situation": "맨 앞이나 맨 뒤에 넣고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "맨 앞은 1번, 맨 뒤는 (리스트 길이 + 1)번 위치예요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "맨 뒤는 '리스트에 추가하기' 블록을 사용하는 것이 더 간단해요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "필요에 따라 추가와 삽입을 적절히 선택해서 사용하세요"
        }
      ]
    },
    {
      "situation": "삽입 후 다른 항목들의 위치가 바뀌어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "삽입하면 그 위치부터의 모든 항목이 한 칸씩 뒤로 밀려요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "인덱스를 사용할 때는 삽입 후 변경된 위치를 고려하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "필요하면 삽입 전에 중요한 인덱스를 변수에 저장하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "리스트 길이를 초과한 위치에 삽입 시도",
      "why_it_happens": "삽입 가능한 최대 위치가 길이+1임을 모름",
      "consequence": "오류 발생 또는 삽입 실패",
      "solution": "삽입 위치는 1부터 (리스트 길이 + 1)까지만 가능",
      "teaching_moment": "5명이 줄 서있을 때, 6번째 자리까지만 끼어들 수 있는 것과 같아요."
    },
    {
      "mistake": "삽입과 교체를 혼동",
      "why_it_happens": "넣기와 바꾸기의 차이를 이해하지 못함",
      "consequence": "기존 항목이 사라지지 않고 뒤로 밀림",
      "solution": "삽입은 추가, 바꾸기는 교체임을 구분",
      "teaching_moment": "줄에 끼어들기(삽입)와 자리 바꾸기(교체)는 다른 행동이에요."
    },
    {
      "mistake": "0번 위치에 삽입하려고 시도",
      "why_it_happens": "다른 프로그래밍 언어의 0 기반 인덱스 습관",
      "consequence": "오류 발생",
      "solution": "엔트리는 1부터 시작하는 인덱스 사용",
      "teaching_moment": "교실 번호가 1번부터 시작하는 것처럼, 엔트리도 1번부터예요."
    },
    {
      "mistake": "삽입 후 인덱스 변화를 고려하지 않음",
      "why_it_happens": "삽입이 다른 항목들의 위치를 변경시킴을 잊음",
      "consequence": "잘못된 위치의 항목에 접근",
      "solution": "삽입 후 인덱스가 바뀜을 고려하여 코드 작성",
      "teaching_moment": "줄에 누가 끼어들면 뒤 사람들의 순서가 모두 바뀌는 것과 같아요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "리스트 준비",
      "instruction": "먼저 리스트를 만들고 몇 개의 항목을 추가하세요.",
      "visual_hint": "자료 카테고리에서 리스트 만들기로 시작하세요."
    },
    {
      "step": 2,
      "title": "자료 카테고리 열기",
      "instruction": "블록 팔레트에서 '자료' 카테고리를 클릭하세요.",
      "visual_hint": "주황색 카테고리를 찾아보세요."
    },
    {
      "step": 3,
      "title": "삽입 블록 찾기",
      "instruction": "'리스트 [ ]의 [ ]번째에 [ ] 넣기' 블록을 찾아서 드래그하세요.",
      "visual_hint": "'넣기'라는 단어가 있는 블록이에요."
    },
    {
      "step": 4,
      "title": "리스트 선택",
      "instruction": "첫 번째 드롭다운에서 항목을 넣을 리스트를 선택하세요.",
      "visual_hint": "만들어둔 리스트 이름들이 목록에 나타나요."
    },
    {
      "step": 5,
      "title": "위치 지정",
      "instruction": "두 번째 칸에 삽입할 위치(인덱스)를 입력하세요.",
      "visual_hint": "1은 맨 앞, 리스트 길이+1은 맨 뒤예요."
    },
    {
      "step": 6,
      "title": "값 입력",
      "instruction": "세 번째 칸에 삽입할 값을 입력하거나 변수를 연결하세요.",
      "visual_hint": "텍스트, 숫자, 변수 등 다양한 값을 넣을 수 있어요."
    },
    {
      "step": 7,
      "title": "실행 테스트",
      "instruction": "프로그램을 실행하여 항목이 올바른 위치에 삽입되는지 확인하세요.",
      "visual_hint": "리스트를 화면에 표시하면 변화를 쉽게 확인할 수 있어요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "add_value_to_list",
      "block_name": "리스트 [ ]에 [ ] 추가하기",
      "relationship": "끝에 추가",
      "explanation": "항상 리스트 끝에만 추가하는 단순한 방법"
    },
    {
      "block_id": "change_value_list_index",
      "block_name": "리스트 [ ]의 [ ]번째를 [ ]으로 바꾸기",
      "relationship": "항목 교체",
      "explanation": "기존 항목을 새 값으로 교체 (리스트 길이 변화 없음)"
    },
    {
      "block_id": "remove_list_index",
      "block_name": "리스트 [ ]의 [ ]번째 삭제하기",
      "relationship": "항목 제거",
      "explanation": "특정 위치의 항목을 제거 (반대 작업)"
    },
    {
      "block_id": "length_of_list",
      "block_name": "리스트 [ ]의 길이",
      "relationship": "크기 확인",
      "explanation": "삽입 가능한 최대 위치 계산에 사용"
    },
    {
      "block_id": "value_of_index_from_list",
      "block_name": "리스트 [ ]의 [ ]번째",
      "relationship": "값 읽기",
      "explanation": "삽입 위치 결정을 위해 기존 값 확인"
    }
  ],

  "debugging_tips": [
    {
      "problem": "항목이 삽입되지 않아요",
      "possible_causes": ["유효하지 않은 인덱스 사용", "리스트가 존재하지 않음", "블록이 실행되지 않음"],
      "solutions": ["1부터 (리스트 길이+1) 범위 확인", "리스트를 먼저 생성", "이벤트 블록과 연결 확인"]
    },
    {
      "problem": "잘못된 위치에 삽입돼요",
      "possible_causes": ["인덱스 계산 오류", "1부터 시작을 잊음", "변수값이 예상과 다름"],
      "solutions": ["삽입 위치를 출력해서 확인", "첫 번째 위치는 1번임을 기억", "변수값 디버깅"]
    },
    {
      "problem": "기존 항목이 사라져요",
      "possible_causes": ["삽입이 아닌 바꾸기 블록 사용", "삽입 후 삭제 코드 실행"],
      "solutions": ["'넣기' 블록인지 확인", "다른 코드에서 삭제하는지 확인"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "줄 서기에 끼어들기",
      "explanation": "대기 줄의 특정 위치에 끼어들면 뒤 사람들이 한 칸씩 밀리는 것과 같습니다."
    },
    {
      "analogy": "책갈피 끼우기",
      "explanation": "책의 특정 페이지 사이에 책갈피를 끼우는 것과 유사합니다."
    },
    {
      "analogy": "카드 덱에 카드 삽입",
      "explanation": "카드 묶음의 원하는 위치에 새 카드를 끼워 넣는 것과 같습니다."
    },
    {
      "analogy": "문서 편집",
      "explanation": "워드프로세서에서 문장 중간에 단어를 삽입하는 것과 동일한 개념입니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "정렬된 삽입",
      "description": "항목을 정렬 순서에 맞는 위치에 자동 삽입",
      "use_case": "순위표, 정렬된 명단, 우선순위 큐"
    },
    {
      "concept": "다중 삽입",
      "description": "여러 항목을 한 번에 특정 위치에 삽입",
      "use_case": "텍스트 블록 삽입, 데이터 병합"
    },
    {
      "concept": "조건부 삽입",
      "description": "특정 조건을 만족할 때만 삽입 수행",
      "use_case": "중복 방지, 유효성 검사 후 삽입"
    },
    {
      "concept": "양방향 리스트",
      "description": "앞뒤 양쪽에서 효율적으로 삽입 가능한 구조",
      "use_case": "덱(Deque) 구현, 히스토리 관리"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "리스트의 원하는 위치에 항목을 삽입할 수 있다",
      "example": "리스트의 맨 앞이나 특정 위치에 항목 넣기"
    },
    {
      "level": "중급",
      "criteria": "조건에 따라 적절한 위치를 찾아 삽입할 수 있다",
      "example": "정렬된 리스트에 순서를 유지하며 삽입"
    },
    {
      "level": "고급",
      "criteria": "복잡한 데이터 구조에서 효율적인 삽입 알고리즘을 구현할 수 있다",
      "example": "우선순위 큐, 이진 탐색을 활용한 삽입 위치 찾기"
    }
  ]
}
