{
  "id": "is_included_in_list",
  "category": "list",
  "name": "리스트 [리스트명]에 [값]이 포함되어 있는가?",
  "description": "리스트에 특정 값이 포함되어 있는지 확인하는 판단 블록입니다. 값이 리스트에 있으면 참(true), 없으면 거짓(false)을 반환합니다. 조건 블록과 함께 사용하여 값의 존재 여부에 따른 처리를 할 수 있습니다.",

  "educational_context": {
    "learning_objectives": [
      "리스트 검색 기능 이해",
      "조건 판단과 불린(Boolean) 값 활용",
      "데이터 존재 여부 확인 방법 학습",
      "중복 검사와 유효성 검증 기법",
      "효율적인 데이터 관리 전략"
    ],
    "key_concepts": [
      {
        "concept": "포함 여부 검사(Inclusion Check)",
        "explanation": "리스트 전체를 순회하여 특정 값이 존재하는지 확인하는 검색 작업"
      },
      {
        "concept": "불린 값(Boolean Value)",
        "explanation": "참(true) 또는 거짓(false) 두 가지 값만 가질 수 있는 논리적 데이터 타입"
      },
      {
        "concept": "선형 검색(Linear Search)",
        "explanation": "리스트의 처음부터 끝까지 순차적으로 확인하는 검색 방식"
      },
      {
        "concept": "조건부 로직",
        "explanation": "검색 결과에 따라 다른 동작을 수행하는 분기 처리"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["리스트 만들기와 항목 추가", "조건 블록(만약 ~라면) 사용법", "참/거짓 개념 이해"]
  },

  "usage_examples": [
    {
      "title": "중복 방지 시스템",
      "description": "리스트에 없는 항목만 추가",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '회원명단' 비우기",
        "리스트 '회원명단'에 '철수' 추가하기",
        "리스트 '회원명단'에 '영희' 추가하기",
        "리스트 '회원명단'에 '민수' 추가하기",
        "",
        "스페이스 키를 눌렀을 때",
        "'추가할 이름을 입력하세요' 묻고 대답 기다리기",
        "새이름 변수를 (대답)으로 정하기",
        "",
        "만약 리스트 '회원명단'에 (새이름)이 포함되어 있는가? 라면",
        "  (새이름) + '님은 이미 등록되어 있습니다!' 2초 동안 말하기",
        "아니라면",
        "  리스트 '회원명단'에 (새이름) 추가하기",
        "  (새이름) + '님이 추가되었습니다!' 2초 동안 말하기",
        "  '현재 회원 수: ' + (리스트 '회원명단'의 길이) + '명' 말하기"
      ],
      "explanation": "이미 존재하는 이름인지 확인하여 중복 등록을 방지하는 회원 관리 시스템입니다."
    },
    {
      "title": "아이템 보유 확인",
      "description": "특정 아이템을 가지고 있는지 체크",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '인벤토리' 비우기",
        "리스트 '인벤토리'에 '나무검' 추가하기",
        "리스트 '인벤토리'에 '체력물약' 추가하기",
        "리스트 '인벤토리'에 '횃불' 추가하기",
        "",
        "[문]에 닿았을 때",
        "만약 리스트 '인벤토리'에 '열쇠'가 포함되어 있는가? 라면",
        "  '문이 열렸습니다!' 말하기",
        "  [문] 숨기기",
        "아니라면",
        "  '열쇠가 필요합니다!' 2초 동안 말하기",
        "  x 좌표를 -10만큼 바꾸기",
        "",
        "[열쇠]에 닿았을 때",
        "만약 리스트 '인벤토리'에 '열쇠'가 포함되어 있는가? = 거짓 라면",
        "  리스트 '인벤토리'에 '열쇠' 추가하기",
        "  '열쇠를 획득했습니다!' 말하기",
        "  [열쇠] 숨기기"
      ],
      "explanation": "열쇠를 보유하고 있는지 확인하여 문을 열 수 있는지 판단하는 게임 시스템입니다."
    },
    {
      "title": "정답 확인 퀴즈",
      "description": "정답 목록과 대조하여 채점",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '정답목록' 비우기",
        "리스트 '정답목록'에 '서울' 추가하기",
        "리스트 '정답목록'에 '서울특별시' 추가하기",
        "리스트 '정답목록'에 'Seoul' 추가하기",
        "점수 변수를 0으로 정하기",
        "",
        "'한국의 수도는?' 묻고 대답 기다리기",
        "답변 변수를 (대답)으로 정하기",
        "",
        "만약 리스트 '정답목록'에 (답변)이 포함되어 있는가? 라면",
        "  '정답입니다!' 2초 동안 말하기",
        "  점수 변수를 10만큼 바꾸기",
        "아니라면",
        "  '틀렸습니다. 정답은 서울입니다.' 2초 동안 말하기",
        "",
        "'현재 점수: ' + (점수) + '점' 말하기"
      ],
      "explanation": "여러 형태의 정답을 인정하는 유연한 퀴즈 채점 시스템입니다."
    },
    {
      "title": "금지어 필터링",
      "description": "부적절한 단어 검사",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '금지어' 비우기",
        "리스트 '금지어'에 '욕설1' 추가하기",
        "리스트 '금지어'에 '욕설2' 추가하기",
        "리스트 '금지어'에 '비속어' 추가하기",
        "",
        "엔터 키를 눌렀을 때",
        "'채팅 메시지를 입력하세요' 묻고 대답 기다리기",
        "메시지 변수를 (대답)으로 정하기",
        "적절함 변수를 참으로 정하기",
        "",
        "// 각 금지어 검사",
        "(리스트 '금지어'의 길이)번 반복하기",
        "  현재금지어 변수를 (리스트 '금지어'의 (반복 횟수)번째)로 정하기",
        "  만약 (메시지)에 (현재금지어)가 포함되어 있는가? 라면",
        "    적절함 변수를 거짓으로 정하기",
        "    반복 중단하기",
        "",
        "만약 (적절함) = 거짓 라면",
        "  '부적절한 언어가 감지되었습니다!' 말하기",
        "아니라면",
        "  '메시지: ' + (메시지) 말하기"
      ],
      "explanation": "채팅 메시지에 금지어가 포함되어 있는지 검사하는 필터링 시스템입니다."
    },
    {
      "title": "미션 완료 체크",
      "description": "필요한 아이템을 모두 모았는지 확인",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '필요아이템' 비우기",
        "리스트 '필요아이템'에 '빨간구슬' 추가하기",
        "리스트 '필요아이템'에 '파란구슬' 추가하기",
        "리스트 '필요아이템'에 '노란구슬' 추가하기",
        "",
        "리스트 '보유아이템' 비우기",
        "",
        "c 키를 눌렀을 때",
        "// 미션 완료 확인",
        "완료 변수를 참으로 정하기",
        "(리스트 '필요아이템'의 길이)번 반복하기",
        "  체크아이템 변수를 (리스트 '필요아이템'의 (반복 횟수)번째)로 정하기",
        "  만약 리스트 '보유아이템'에 (체크아이템)이 포함되어 있는가? = 거짓 라면",
        "    완료 변수를 거짓으로 정하기",
        "    '아직 ' + (체크아이템) + '이(가) 필요합니다!' 말하기",
        "    반복 중단하기",
        "",
        "만약 (완료) = 참 라면",
        "  '미션 완료! 모든 구슬을 모았습니다!' 말하기",
        "  신호 '다음스테이지' 보내기"
      ],
      "explanation": "미션 수행에 필요한 모든 아이템을 수집했는지 확인하는 시스템입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "리스트에 값이 있는지 확인하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'자료' 카테고리에서 리스트 관련 판단 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "concept",
          "content": "육각형 모양의 블록은 참/거짓을 반환하는 판단 블록이에요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "'리스트 [ ]에 [ ]이 포함되어 있는가?' 블록을 조건문과 함께 사용하세요"
        }
      ]
    },
    {
      "situation": "중복되지 않게 추가하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "추가하기 전에 이미 있는지 먼저 확인해야 해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'만약 리스트에 값이 포함되어 있는가? = 거짓 라면' 조건 사용"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "조건이 참일 때만 리스트에 추가하기 블록을 실행하세요"
        }
      ]
    },
    {
      "situation": "여러 값을 한 번에 확인하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "반복문을 사용해서 여러 값을 순차적으로 확인할 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "확인할 값들을 별도 리스트에 넣고 반복문으로 하나씩 검사"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "모든 값이 있는지, 또는 하나라도 있는지에 따라 다른 로직 구현"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "포함 여부를 직접 실행하려고 함",
      "why_it_happens": "판단 블록과 실행 블록의 차이를 이해하지 못함",
      "consequence": "블록이 단독으로 실행되지 않음",
      "solution": "조건문(만약 ~라면)과 함께 사용",
      "teaching_moment": "온도계가 30도를 넘었는지 확인(판단)하고 에어컨을 켜는(실행) 것처럼 구분해요."
    },
    {
      "mistake": "대소문자나 띄어쓰기를 고려하지 않음",
      "why_it_happens": "정확히 일치해야 함을 모름",
      "consequence": "'사과'와 '사 과'를 다르게 인식",
      "solution": "정확한 텍스트 매칭이 필요함을 인지",
      "teaching_moment": "컴퓨터는 글자 하나하나를 정확히 비교해요. 띄어쓰기도 하나의 문자예요."
    },
    {
      "mistake": "숫자와 텍스트를 혼동",
      "why_it_happens": "데이터 타입의 차이를 인식하지 못함",
      "consequence": "숫자 10과 텍스트 '10'을 다르게 처리",
      "solution": "추가할 때와 같은 타입으로 검색",
      "teaching_moment": "숫자 10과 글자 '10'은 다른 것처럼 보일 수 있어요."
    },
    {
      "mistake": "리스트가 비어있을 때를 고려하지 않음",
      "why_it_happens": "빈 리스트 검색 가능성을 놓침",
      "consequence": "빈 리스트는 항상 거짓 반환",
      "solution": "리스트 길이 확인 후 검색",
      "teaching_moment": "빈 상자에서는 아무것도 찾을 수 없는 것과 같아요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "리스트 준비",
      "instruction": "검색할 리스트를 만들고 몇 가지 항목을 추가하세요.",
      "visual_hint": "자료 카테고리에서 리스트 만들기와 추가하기 사용"
    },
    {
      "step": 2,
      "title": "자료 카테고리 열기",
      "instruction": "블록 팔레트에서 '자료' 카테고리를 클릭하세요.",
      "visual_hint": "주황색 카테고리를 찾아보세요."
    },
    {
      "step": 3,
      "title": "포함 확인 블록 찾기",
      "instruction": "'리스트 [ ]에 [ ]이 포함되어 있는가?' 블록을 찾으세요.",
      "visual_hint": "육각형 모양의 판단 블록이에요."
    },
    {
      "step": 4,
      "title": "조건 블록 준비",
      "instruction": "제어 카테고리에서 '만약 ~라면' 블록을 가져오세요.",
      "visual_hint": "판단 블록은 조건문과 함께 사용해야 해요."
    },
    {
      "step": 5,
      "title": "블록 연결",
      "instruction": "포함 확인 블록을 조건문의 육각형 칸에 넣으세요.",
      "visual_hint": "육각형 모양끼리 딱 맞아요."
    },
    {
      "step": 6,
      "title": "리스트와 값 설정",
      "instruction": "검색할 리스트와 찾을 값을 입력하세요.",
      "visual_hint": "드롭다운에서 리스트 선택, 값은 직접 입력이나 변수 사용"
    },
    {
      "step": 7,
      "title": "결과 처리",
      "instruction": "조건이 참일 때와 거짓일 때 실행할 블록을 추가하세요.",
      "visual_hint": "'라면' 아래는 포함될 때, '아니라면' 아래는 포함되지 않을 때 실행"
    }
  ],

  "related_blocks": [
    {
      "block_id": "add_value_to_list",
      "block_name": "리스트 [ ]에 [ ] 추가하기",
      "relationship": "항목 추가",
      "explanation": "포함 확인 후 없을 때만 추가하여 중복 방지"
    },
    {
      "block_id": "remove_value_from_list",
      "block_name": "리스트 [ ]에서 [ ] 삭제하기",
      "relationship": "항목 제거",
      "explanation": "포함 확인 후 있을 때만 삭제"
    },
    {
      "block_id": "index_of_value_in_list",
      "block_name": "리스트 [ ]에서 [ ]의 위치",
      "relationship": "위치 찾기",
      "explanation": "포함되어 있다면 몇 번째인지 확인"
    },
    {
      "block_id": "if_else",
      "block_name": "만약 ~라면 아니라면",
      "relationship": "조건 분기",
      "explanation": "포함 여부에 따른 다른 처리"
    },
    {
      "block_id": "boolean_and",
      "block_name": "[ ] 그리고 [ ]",
      "relationship": "복합 조건",
      "explanation": "여러 값의 포함 여부를 동시에 확인"
    }
  ],

  "debugging_tips": [
    {
      "problem": "항상 거짓(포함되지 않음)이 나와요",
      "possible_causes": ["정확한 값이 아님 (띄어쓰기, 대소문자)", "리스트가 비어있음", "잘못된 리스트 선택"],
      "solutions": ["추가한 값과 정확히 일치하는지 확인", "리스트에 항목이 있는지 확인", "올바른 리스트를 선택했는지 확인"]
    },
    {
      "problem": "숫자를 찾을 수 없어요",
      "possible_causes": ["숫자와 텍스트 혼동", "소수점 차이"],
      "solutions": ["숫자로 추가했으면 숫자로 검색", "정확한 값 사용 (3과 3.0은 다를 수 있음)"]
    },
    {
      "problem": "조건문이 작동하지 않아요",
      "possible_causes": ["판단 블록을 조건문에 연결하지 않음", "= 참/거짓을 잘못 사용"],
      "solutions": ["육각형 블록을 조건문에 정확히 연결", "필요시 '= 거짓' 조건 사용"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "회원 명부 확인",
      "explanation": "클럽 회원 명부에서 특정 이름을 찾는 것과 같은 작업입니다."
    },
    {
      "analogy": "장바구니 확인",
      "explanation": "온라인 쇼핑 장바구니에 특정 상품이 있는지 확인하는 것과 유사합니다."
    },
    {
      "analogy": "출석 체크",
      "explanation": "출석부에서 특정 학생이 왔는지 확인하는 것과 같습니다."
    },
    {
      "analogy": "재료 확인",
      "explanation": "요리하기 전에 필요한 재료가 모두 있는지 확인하는 것과 비슷합니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "부분 문자열 검색",
      "description": "완전히 일치하지 않아도 일부가 포함되면 찾기",
      "use_case": "키워드 검색, 유사 항목 찾기"
    },
    {
      "concept": "대소문자 무시 검색",
      "description": "대소문자 구분 없이 검색하는 유연한 시스템",
      "use_case": "사용자 입력 검증, 검색 엔진"
    },
    {
      "concept": "다중 리스트 검색",
      "description": "여러 리스트를 동시에 검색하여 포함 여부 확인",
      "use_case": "카테고리별 검색, 통합 검색"
    },
    {
      "concept": "빈도수 계산",
      "description": "특정 값이 리스트에 몇 번 포함되어 있는지 확인",
      "use_case": "투표 집계, 선호도 조사"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "리스트에 값이 포함되어 있는지 확인하고 조건 처리할 수 있다",
      "example": "중복 확인 후 추가하기"
    },
    {
      "level": "중급",
      "criteria": "여러 조건을 조합하여 복잡한 포함 여부를 판단할 수 있다",
      "example": "여러 필수 항목이 모두 있는지 확인"
    },
    {
      "level": "고급",
      "criteria": "효율적인 검색 알고리즘과 데이터 관리 시스템을 구현할 수 있다",
      "example": "대량 데이터에서 빠른 검색, 인덱싱 시스템 구현"
    }
  ]
}
