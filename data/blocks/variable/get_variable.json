{
  "id": "get_variable",
  "category": "variable",
  "name": "(변수명)",
  "description": "변수에 저장된 현재 값을 반환하는 값 블록입니다. 다른 블록의 입력값으로 사용하거나 조건 판단, 계산 등에 활용됩니다. 변수의 값을 읽기만 하고 변경하지는 않습니다.",

  "educational_context": {
    "learning_objectives": [
      "변수값 읽기와 활용 방법 이해",
      "값 블록과 실행 블록의 차이 학습",
      "데이터 흐름과 변수 참조 개념",
      "프로그래밍에서 변수 사용의 기본 원리",
      "동적 값 처리와 재사용성 향상"
    ],
    "key_concepts": [
      {
        "concept": "변수 참조(Variable Reference)",
        "explanation": "변수에 저장된 값을 읽어오는 것으로, 원본 값은 변경되지 않고 현재 저장된 값만 가져옴"
      },
      {
        "concept": "값 블록(Value Block)",
        "explanation": "직접 실행되지 않고 다른 블록에 값을 제공하는 둥근 모양의 블록"
      },
      {
        "concept": "동적 값(Dynamic Value)",
        "explanation": "프로그램 실행 중 변할 수 있는 값으로, 변수를 통해 유연한 프로그래밍 가능"
      },
      {
        "concept": "데이터 타입",
        "explanation": "변수에 저장된 값의 종류(숫자, 텍스트, 참/거짓 등)로, 자동으로 인식되고 변환됨"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["변수 만들기", "변수를 값으로 정하기 블록 사용 경험"]
  },

  "usage_examples": [
    {
      "title": "변수를 사용한 인사말",
      "description": "이름 변수를 활용한 개인화된 메시지",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "이름 변수를 '철수'로 정하기",
        "나이 변수를 15로 정하기",
        "'안녕하세요, ' + (이름) + '님!' 말하기",
        "'당신은 ' + (나이) + '살이시군요!' 말하기",
        "만약 (나이) < 20 라면",
        "  (이름) + '님은 학생이시네요!' 말하기",
        "아니라면",
        "  (이름) + '님은 성인이시네요!' 말하기"
      ],
      "explanation": "변수값을 읽어와서 문자열과 결합하고 조건 판단에 사용하는 예제입니다."
    },
    {
      "title": "점수 기반 등급 판정",
      "description": "점수 변수를 읽어 등급 결정",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "점수 변수를 0으로 정하기",
        "",
        "스페이스 키를 눌렀을 때",
        "점수 변수를 (0)부터 (100)까지의 무작위 수로 정하기",
        "'당신의 점수는 ' + (점수) + '점입니다' 말하기",
        "",
        "만약 (점수) ≥ 90 라면",
        "  등급 변수를 'A'로 정하기",
        "아니라면 만약 (점수) ≥ 80 라면",
        "  등급 변수를 'B'로 정하기",
        "아니라면 만약 (점수) ≥ 70 라면",
        "  등급 변수를 'C'로 정하기",
        "아니라면",
        "  등급 변수를 'D'로 정하기",
        "",
        "'등급: ' + (등급) 말하기"
      ],
      "explanation": "점수 변수의 값을 여러 조건문에서 읽어 등급을 판정하는 시스템입니다."
    },
    {
      "title": "계산에 변수 활용",
      "description": "변수값을 이용한 다양한 계산",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "가로 변수를 10으로 정하기",
        "세로 변수를 5로 정하기",
        "",
        "넓이 변수를 (가로) × (세로)로 정하기",
        "둘레 변수를 ((가로) + (세로)) × 2로 정하기",
        "",
        "'사각형의 가로: ' + (가로) 말하기",
        "'사각형의 세로: ' + (세로) 말하기",
        "'사각형의 넓이: ' + (넓이) 말하기",
        "'사각형의 둘레: ' + (둘레) 말하기",
        "",
        "크기를 (넓이) × 2 %로 정하기",
        "x 좌표를 (가로) × 10으로 정하기",
        "y 좌표를 (세로) × 10으로 정하기"
      ],
      "explanation": "변수값을 읽어와서 다양한 계산과 속성 설정에 활용하는 예제입니다."
    },
    {
      "title": "게임 상태 관리",
      "description": "여러 변수를 읽어 게임 상태 판단",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "생명 변수를 3으로 정하기",
        "점수 변수를 0으로 정하기",
        "스테이지 변수를 1로 정하기",
        "게임중 변수를 참으로 정하기",
        "",
        "계속 반복하기",
        "  만약 (게임중) = 참 라면",
        "    '생명: ' + (생명) + ' | 점수: ' + (점수) + ' | 스테이지: ' + (스테이지) 말하기",
        "    ",
        "    만약 (생명) ≤ 0 라면",
        "      게임중 변수를 거짓으로 정하기",
        "      '게임 오버! 최종 점수: ' + (점수) 말하기",
        "    아니라면 만약 (점수) ≥ 100 × (스테이지) 라면",
        "      스테이지 변수를 1만큼 바꾸기",
        "      '스테이지 ' + (스테이지) + ' 클리어!' 2초 동안 말하기",
        "  1초 기다리기"
      ],
      "explanation": "여러 변수의 값을 지속적으로 읽어 게임 상태를 관리하는 시스템입니다."
    },
    {
      "title": "리스트와 변수 연동",
      "description": "변수를 인덱스로 사용하여 리스트 접근",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "리스트 '과일' 비우기",
        "리스트 '과일'에 '사과' 추가하기",
        "리스트 '과일'에 '바나나' 추가하기",
        "리스트 '과일'에 '오렌지' 추가하기",
        "리스트 '과일'에 '포도' 추가하기",
        "리스트 '과일'에 '딸기' 추가하기",
        "",
        "선택번호 변수를 1로 정하기",
        "",
        "위쪽 화살표를 눌렀을 때",
        "선택번호 변수를 -1만큼 바꾸기",
        "만약 (선택번호) < 1 라면",
        "  선택번호 변수를 (리스트 '과일'의 길이)로 정하기",
        "'선택: ' + (리스트 '과일'의 (선택번호)번째) 말하기",
        "",
        "아래쪽 화살표를 눌렀을 때",
        "선택번호 변수를 1만큼 바꾸기",
        "만약 (선택번호) > (리스트 '과일'의 길이) 라면",
        "  선택번호 변수를 1로 정하기",
        "'선택: ' + (리스트 '과일'의 (선택번호)번째) 말하기"
      ],
      "explanation": "변수값을 리스트 인덱스로 사용하여 동적으로 항목을 선택하는 시스템입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "변수값을 사용할 수 없어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'자료' 카테고리에서 둥근 모양의 변수 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "concept",
          "content": "변수를 먼저 만들어야 사용할 수 있어요. '변수 만들기'를 클릭하세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "둥근 (변수명) 블록을 다른 블록의 둥근 입력칸에 끼워 넣으세요"
        }
      ]
    },
    {
      "situation": "변수값이 계산에 사용되지 않아요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "변수 블록은 값을 제공하는 블록이에요. 계산 블록과 함께 사용하세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'(변수1) + (변수2)' 같은 형태로 계산 블록에 연결하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "계산 결과를 다른 변수에 저장하거나 바로 사용할 수 있어요"
        }
      ]
    },
    {
      "situation": "변수값이 예상과 달라요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "변수값은 프로그램 실행 중 변할 수 있어요. 현재값을 확인하세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'변수 보이기' 블록으로 화면에 표시해서 실시간 확인하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "다른 곳에서 변수값을 바꾸는지 모든 스크립트를 확인하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "변수 블록을 단독으로 실행하려고 함",
      "why_it_happens": "값 블록과 실행 블록의 차이를 이해하지 못함",
      "consequence": "아무것도 실행되지 않음",
      "solution": "변수 블록은 다른 블록의 입력값으로 사용해야 함",
      "teaching_moment": "온도계는 그 자체로는 아무것도 하지 않고, 온도를 알려주기만 하는 것과 같아요."
    },
    {
      "mistake": "변수 이름과 변수값을 혼동",
      "why_it_happens": "변수의 개념을 명확히 이해하지 못함",
      "consequence": "텍스트로 변수 이름을 직접 입력",
      "solution": "둥근 변수 블록을 사용해야 값을 읽을 수 있음",
      "teaching_moment": "상자 이름을 말하는 것과 상자 안의 물건을 꺼내는 것은 다른 일이에요."
    },
    {
      "mistake": "초기화하지 않은 변수 사용",
      "why_it_happens": "변수의 기본값이 0이나 빈 텍스트임을 모름",
      "consequence": "예상하지 못한 0이나 빈 값이 사용됨",
      "solution": "프로그램 시작 시 변수를 원하는 값으로 초기화",
      "teaching_moment": "새 공책을 사용하기 전에 이름을 쓰는 것처럼, 변수도 초기값을 설정해야 해요."
    },
    {
      "mistake": "변수값 변경과 읽기를 혼동",
      "why_it_happens": "get_variable 블록이 값을 변경한다고 착각",
      "consequence": "값이 변경될 것을 기대하지만 읽기만 함",
      "solution": "값을 읽기만 할 때는 get_variable, 변경할 때는 set_variable 사용",
      "teaching_moment": "책을 읽는 것과 책에 쓰는 것은 다른 행동인 것처럼, 읽기와 쓰기는 구분돼요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "변수 만들기",
      "instruction": "자료 카테고리에서 '변수 만들기' 버튼을 클릭하여 변수를 생성하세요.",
      "visual_hint": "변수 이름을 의미 있게 지으면 나중에 찾기 쉬워요."
    },
    {
      "step": 2,
      "title": "자료 카테고리 확인",
      "instruction": "블록 팔레트의 '자료' 카테고리에서 만든 변수를 확인하세요.",
      "visual_hint": "둥근 모양의 (변수명) 블록이 나타나요."
    },
    {
      "step": 3,
      "title": "변수 블록 선택",
      "instruction": "사용하려는 변수의 둥근 블록을 작업 영역으로 드래그하세요.",
      "visual_hint": "여러 변수가 있다면 원하는 변수를 정확히 선택하세요."
    },
    {
      "step": 4,
      "title": "다른 블록에 연결",
      "instruction": "변수 블록을 다른 블록의 둥근 입력칸에 끼워 넣으세요.",
      "visual_hint": "말하기, 계산, 조건 블록 등의 입력값으로 사용할 수 있어요."
    },
    {
      "step": 5,
      "title": "초기값 설정",
      "instruction": "프로그램 시작 부분에서 변수의 초기값을 설정하세요.",
      "visual_hint": "'[변수]를 [값]으로 정하기' 블록을 사용하세요."
    },
    {
      "step": 6,
      "title": "실행 테스트",
      "instruction": "프로그램을 실행하여 변수값이 제대로 사용되는지 확인하세요.",
      "visual_hint": "변수를 화면에 표시하면 값의 변화를 실시간으로 볼 수 있어요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "set_variable",
      "block_name": "[변수]를 [값]으로 정하기",
      "relationship": "변수값 설정",
      "explanation": "변수에 새로운 값을 저장할 때 사용"
    },
    {
      "block_id": "change_variable",
      "block_name": "[변수]를 [값]만큼 바꾸기",
      "relationship": "변수값 증감",
      "explanation": "현재 변수값을 기준으로 증가 또는 감소"
    },
    {
      "block_id": "show_variable",
      "block_name": "변수 [변수명] 보이기",
      "relationship": "변수 표시",
      "explanation": "화면에 변수값을 표시하여 모니터링"
    },
    {
      "block_id": "hide_variable",
      "block_name": "변수 [변수명] 숨기기",
      "relationship": "변수 숨김",
      "explanation": "화면에서 변수 표시를 숨김"
    },
    {
      "block_id": "calc_basic",
      "block_name": "[값] [연산자] [값]",
      "relationship": "계산에 활용",
      "explanation": "변수값을 이용한 산술 연산"
    }
  ],

  "debugging_tips": [
    {
      "problem": "변수값이 undefined 또는 null로 나와요",
      "possible_causes": ["변수를 만들지 않음", "변수 이름 오타", "다른 스크립트에서 삭제됨"],
      "solutions": ["변수 만들기로 변수 생성", "정확한 변수 이름 사용", "변수가 삭제되는 코드가 없는지 확인"]
    },
    {
      "problem": "항상 0이나 빈 값이 나와요",
      "possible_causes": ["변수 초기화를 하지 않음", "값을 설정하기 전에 읽음", "다른 곳에서 0으로 재설정"],
      "solutions": ["프로그램 시작 시 초기값 설정", "실행 순서 확인", "모든 '정하기' 블록 점검"]
    },
    {
      "problem": "계산이 제대로 안 돼요",
      "possible_causes": ["텍스트와 숫자 혼용", "변수값이 예상과 다름", "연산 순서 오류"],
      "solutions": ["변수 타입 확인", "변수값을 화면에 표시해서 확인", "괄호로 연산 순서 명확히"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "계산기 메모리",
      "explanation": "계산기의 M+ 버튼으로 저장한 값을 MR 버튼으로 불러오는 것과 같습니다."
    },
    {
      "analogy": "휴대폰 연락처",
      "explanation": "이름으로 저장된 전화번호를 찾아서 사용하는 것과 유사합니다."
    },
    {
      "analogy": "은행 잔액 조회",
      "explanation": "통장 잔액을 확인만 하고 변경하지 않는 것과 같은 개념입니다."
    },
    {
      "analogy": "온도계 읽기",
      "explanation": "온도계가 보여주는 현재 온도를 읽는 것처럼 변수의 현재값을 읽습니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "변수 배열 시뮬레이션",
      "description": "여러 변수를 번호를 붙여 관리하는 시스템",
      "use_case": "player1_score, player2_score 등 유사한 변수 그룹 관리"
    },
    {
      "concept": "전역/지역 변수 구분",
      "description": "모든 오브젝트가 공유하는 변수와 특정 오브젝트만의 변수 구분 사용",
      "use_case": "게임 전체 점수와 개별 캐릭터 체력 관리"
    },
    {
      "concept": "변수 체인 연산",
      "description": "여러 변수를 연속적으로 조합하여 복잡한 계산",
      "use_case": "(속도) × (시간) + (초기위치) 같은 물리 공식"
    },
    {
      "concept": "상태 머신 구현",
      "description": "변수값으로 프로그램의 상태를 관리하는 패턴",
      "use_case": "메뉴-게임-종료 등 게임 상태 전환 관리"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "변수값을 읽어서 말하기나 간단한 조건에 사용할 수 있다",
      "example": "이름 변수를 읽어 인사말 만들기"
    },
    {
      "level": "중급",
      "criteria": "여러 변수를 조합하여 계산하고 조건 판단에 활용할 수 있다",
      "example": "점수와 시간을 이용한 게임 종료 조건 구현"
    },
    {
      "level": "고급",
      "criteria": "복잡한 데이터 구조와 알고리즘에 변수를 효과적으로 활용할 수 있다",
      "example": "여러 변수를 연동한 복잡한 게임 시스템 구현"
    }
  ]
}
