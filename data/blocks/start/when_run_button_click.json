{
  "id": "when_run_button_click",
  "category": "start",
  "name": "시작하기 버튼을 클릭했을 때",
  "description": "녹색 시작 버튼을 클릭했을 때 실행되는 이벤트 블록입니다. 모든 Entry 프로그램의 시작점이 되는 가장 기본적인 블록입니다.",

  "educational_context": {
    "learning_objectives": [
      "이벤트 기반 프로그래밍의 개념 이해",
      "프로그램의 시작점과 실행 흐름 파악",
      "사용자 상호작용과 프로그램 실행의 관계 이해"
    ],
    "key_concepts": [
      {
        "concept": "이벤트(Event)",
        "explanation": "사용자가 버튼을 클릭하거나 키를 누르는 등의 행동으로 발생하는 신호"
      },
      {
        "concept": "이벤트 핸들러",
        "explanation": "특정 이벤트가 발생했을 때 실행되는 코드 블록"
      },
      {
        "concept": "프로그램 진입점",
        "explanation": "프로그램이 시작되는 지점으로, 시작하기 버튼이 그 역할을 함"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["Entry 기본 인터페이스 이해", "블록 연결 방법 숙지"]
  },

  "usage_examples": [
    {
      "title": "기본 사용법",
      "description": "캐릭터가 인사하는 간단한 프로그램",
      "blocks": ["when_run_button_click", "speak_something"],
      "explanation": "시작 버튼을 누르면 캐릭터가 '안녕하세요!'라고 말합니다."
    },
    {
      "title": "순차 실행",
      "description": "여러 동작을 차례대로 실행",
      "blocks": ["when_run_button_click", "move_direction", "rotate_by_angle", "speak_something"],
      "explanation": "시작 버튼을 누르면 캐릭터가 이동하고, 회전한 후, 말하는 동작을 순서대로 실행합니다."
    }
  ],

  "socratic_questions": [
    {
      "level": "이해",
      "question": "시작하기 버튼을 누르지 않으면 프로그램이 실행될까요?",
      "purpose": "이벤트 기반 실행의 개념 확인",
      "follow_up": "그렇다면 프로그램을 자동으로 시작하려면 어떤 블록을 사용해야 할까요?"
    },
    {
      "level": "분석",
      "question": "한 프로그램에 '시작하기 버튼을 클릭했을 때' 블록이 여러 개 있으면 어떻게 될까요?",
      "purpose": "동시 실행과 병렬 처리 개념 도입",
      "follow_up": "이런 상황이 유용한 경우는 언제일까요?"
    },
    {
      "level": "적용",
      "question": "게임을 만들 때 이 블록 아래에는 주로 어떤 블록들이 올까요?",
      "purpose": "실제 활용 상황에서의 사고 확장",
      "follow_up": "게임 초기화와 메인 로직을 어떻게 구분해서 배치할 수 있을까요?"
    }
  ],

  "common_mistakes": [
    {
      "mistake": "시작 블록 없이 다른 블록들만 배치",
      "why_it_happens": "시작 이벤트의 필요성을 인지하지 못함",
      "consequence": "프로그램이 실행되지 않음",
      "solution": "모든 프로그램은 시작점이 필요하다는 점 강조",
      "teaching_moment": "집을 지을 때 기초공사가 필요한 것처럼, 프로그램도 시작점이 있어야 해요."
    },
    {
      "mistake": "시작 블록을 프로그램 중간에 배치",
      "why_it_happens": "블록의 역할과 위치에 대한 이해 부족",
      "consequence": "의도하지 않은 프로그램 구조",
      "solution": "시작 블록은 항상 맨 위에 배치해야 함을 설명",
      "teaching_moment": "책을 읽을 때 첫 페이지부터 시작하는 것처럼, 프로그램도 시작 블록부터 읽어요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "블록 찾기",
      "instruction": "블록 팔레트에서 '시작' 카테고리를 클릭하세요.",
      "visual_hint": "초록색 깃발 모양의 아이콘을 찾아보세요."
    },
    {
      "step": 2,
      "title": "블록 선택",
      "instruction": "'시작하기 버튼을 클릭했을 때' 블록을 찾아 클릭하세요.",
      "visual_hint": "블록에 초록색 깃발 아이콘이 있어요."
    },
    {
      "step": 3,
      "title": "작업 영역에 배치",
      "instruction": "블록을 드래그해서 작업 영역으로 가져오세요.",
      "visual_hint": "작업 영역은 가운데 넓은 회색 공간이에요."
    },
    {
      "step": 4,
      "title": "다른 블록 연결",
      "instruction": "실행하고 싶은 다른 블록들을 시작 블록 아래에 연결하세요.",
      "visual_hint": "블록들이 레고처럼 딱 맞춰져요."
    },
    {
      "step": 5,
      "title": "실행 테스트",
      "instruction": "초록색 시작 버튼을 클릭해서 프로그램이 잘 실행되는지 확인하세요.",
      "visual_hint": "화면 위쪽의 초록색 깃발 버튼을 누르세요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "when_some_key_pressed",
      "relationship": "대안적 시작 방법",
      "explanation": "키보드로 프로그램을 시작할 때 사용"
    },
    {
      "block_id": "when_object_click",
      "relationship": "오브젝트별 시작",
      "explanation": "특정 오브젝트를 클릭했을 때 시작"
    },
    {
      "block_id": "when_scene_start",
      "relationship": "장면 기반 시작",
      "explanation": "새로운 장면이 시작될 때 자동 실행"
    }
  ],

  "debugging_tips": [
    {
      "problem": "시작 버튼을 눌러도 아무것도 실행되지 않아요",
      "possible_causes": [
        "시작 블록 아래에 다른 블록이 연결되지 않음",
        "연결된 블록에 오류가 있음",
        "오브젝트가 선택되지 않은 상태"
      ],
      "solutions": [
        "시작 블록 아래에 실행할 블록들을 연결하세요",
        "연결된 각 블록들을 하나씩 확인해보세요",
        "올바른 오브젝트가 선택되었는지 확인하세요"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "리모컨의 전원 버튼",
      "explanation": "TV 리모컨의 전원 버튼을 누르면 TV가 켜지는 것처럼, 시작 버튼을 누르면 프로그램이 실행됩니다."
    },
    {
      "analogy": "자동차 시동 키",
      "explanation": "자동차의 시동을 걸어야 차가 움직이는 것처럼, 프로그램도 시작 신호가 있어야 동작합니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "여러 시작점 활용",
      "description": "하나의 프로젝트에서 여러 개의 시작 블록을 사용하여 동시에 다른 작업들을 실행",
      "use_case": "배경음악과 캐릭터 동작을 동시에 시작"
    },
    {
      "concept": "조건부 시작",
      "description": "특정 조건이 만족될 때만 실행되도록 조건문과 결합",
      "use_case": "게임 레벨에 따라 다른 초기 설정 적용"
    }
  ]
}
