{
  "id": "when_run_button_click",
  "category": "start",
  "name": "시작하기 버튼을 클릭했을 때",
  "description": "프로그램 시작 버튼(파란색 버튼)을 클릭했을 때 실행되는 이벤트 블록입니다. 모든 엔트리 프로그램의 시작점이 되는 가장 기본적인 블록입니다.",

  "educational_context": {
    "learning_objectives": [
      "프로그램의 시작점 개념 이해",
      "이벤트 기반 프로그래밍 기초 학습",
      "순차적 실행 구조 파악"
    ],
    "key_concepts": [
      {
        "concept": "프로그램 시작점",
        "explanation": "모든 프로그램이 실행을 시작하는 첫 번째 지점"
      },
      {
        "concept": "이벤트 트리거",
        "explanation": "특정 동작(버튼 클릭)이 프로그램 실행을 촉발시키는 것"
      },
      {
        "concept": "순차 실행",
        "explanation": "시작 블록 아래 연결된 블록들이 위에서부터 순서대로 실행되는 것"
      },
      {
        "concept": "초기화",
        "explanation": "프로그램 시작 시 변수나 오브젝트의 초기 상태를 설정하는 과정"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["엔트리 인터페이스 기본 이해", "블록 드래그 앤 드롭 방법"]
  },

  "usage_examples": [
    {
      "title": "기본 프로그램 시작",
      "description": "간단한 인사 메시지 출력",
      "blocks": ["when_run_button_click", "say('안녕하세요!', 2)"],
      "explanation": "시작 버튼을 클릭하면 캐릭터가 2초 동안 인사를 합니다."
    },
    {
      "title": "변수 초기화와 함께 시작",
      "description": "점수를 0으로 초기화하고 게임 시작",
      "blocks": [
        "when_run_button_click",
        "set_variable('점수', 0)",
        "show_variable('점수')",
        "say('게임을 시작합니다!', 2)"
      ],
      "explanation": "게임 시작 시 점수를 0으로 설정하고 화면에 표시한 후 시작 메시지를 보여줍니다."
    },
    {
      "title": "오브젝트 초기 위치 설정",
      "description": "캐릭터를 시작 위치로 이동",
      "blocks": [
        "when_run_button_click",
        "go_to_xy(0, 0)",
        "point_in_direction(90)",
        "set_size(100)"
      ],
      "explanation": "시작 버튼을 누르면 캐릭터가 중앙(0, 0)으로 이동하고, 오른쪽을 보며, 크기가 100%로 설정됩니다."
    }
  ],

  "socratic_questions": [
    {
      "level": "이해",
      "question": "만약 시작 블록이 없다면 프로그램은 어떻게 될까요?",
      "purpose": "시작 블록의 필요성 이해",
      "follow_up": "시작 블록 없이 실행되는 블록이 있을까요?"
    },
    {
      "level": "분석",
      "question": "여러 개의 시작 블록이 있다면 어떤 순서로 실행될까요?",
      "purpose": "동시 실행 개념 이해",
      "follow_up": "순서를 제어하고 싶다면 어떻게 해야 할까요?"
    },
    {
      "level": "적용",
      "question": "게임을 다시 시작하는 기능을 만들려면 어떻게 해야 할까요?",
      "purpose": "초기화와 재시작 개념 연결",
      "follow_up": "시작 버튼 외에 다른 방법으로도 초기화할 수 있을까요?"
    }
  ],

  "common_mistakes": [
    {
      "mistake": "시작 블록 없이 프로그램 작성",
      "why_it_happens": "초보자가 블록 연결에만 집중하고 시작점을 잊음",
      "consequence": "프로그램이 실행되지 않음",
      "solution": "모든 실행 코드는 시작 블록 아래에 연결",
      "teaching_moment": "책도 첫 페이지부터 읽듯이, 프로그램도 시작점이 필요해요."
    },
    {
      "mistake": "여러 시작 블록에 같은 변수 초기화",
      "why_it_happens": "각 오브젝트마다 초기화를 중복 작성",
      "consequence": "불필요한 중복 실행과 혼란",
      "solution": "공통 초기화는 한 곳에서만 처리",
      "teaching_moment": "집을 나갈 때 문을 한 번만 잠그듯이, 초기화도 한 번만 하면 돼요."
    },
    {
      "mistake": "시작 블록 아래 아무것도 연결하지 않음",
      "why_it_happens": "블록 연결 방법을 모르거나 잊음",
      "consequence": "버튼을 눌러도 아무 일도 일어나지 않음",
      "solution": "실행할 블록들을 시작 블록 아래에 연결",
      "teaching_moment": "시작 블록은 문을 여는 것과 같아요. 문을 열었으면 들어가서 할 일이 있어야죠."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "시작 카테고리 열기",
      "instruction": "블록 팔레트에서 '시작' 카테고리를 클릭하세요.",
      "visual_hint": "초록색 깃발 아이콘이 있는 첫 번째 카테고리입니다."
    },
    {
      "step": 2,
      "title": "시작 블록 찾기",
      "instruction": "'시작하기 버튼을 클릭했을 때' 블록을 찾으세요.",
      "visual_hint": "재생 모양이 그려진 갈색 블록입니다."
    },
    {
      "step": 3,
      "title": "작업 영역에 드래그",
      "instruction": "블록을 클릭한 채로 작업 영역으로 드래그하세요.",
      "visual_hint": "작업 영역 중앙에 놓으면 좋습니다."
    },
    {
      "step": 4,
      "title": "실행할 블록 연결",
      "instruction": "다른 카테고리에서 실행할 블록을 가져와 시작 블록 아래에 연결하세요.",
      "visual_hint": "블록이 자석처럼 달라붙을 때까지 가까이 가져가세요."
    },
    {
      "step": 5,
      "title": "프로그램 실행",
      "instruction": "무대 밑에 있는 파란색 시작하기 버튼을 클릭하세요.",
      "visual_hint": "버튼을 누르면 연결한 블록들이 순서대로 실행됩니다."
    }
  ],

  "related_blocks": [
    {
      "block_id": "when_some_key_pressed",
      "relationship": "대체 시작 방법",
      "explanation": "키보드 입력으로 프로그램을 시작할 수 있습니다"
    },
    {
      "block_id": "when_scene_start",
      "relationship": "장면 전환 시작",
      "explanation": "새로운 장면이 시작될 때 실행됩니다"
    },
    {
      "block_id": "when_message_cast",
      "relationship": "메시지 기반 시작",
      "explanation": "다른 오브젝트의 신호로 실행을 시작합니다"
    },
    {
      "block_id": "when_object_click",
      "relationship": "오브젝트 클릭 시작",
      "explanation": "특정 오브젝트를 클릭했을 때 실행됩니다"
    }
  ],

  "debugging_tips": [
    {
      "problem": "시작 버튼을 눌러도 아무 일도 일어나지 않아요",
      "possible_causes": [
        "시작 블록 아래에 실행할 블록이 없음",
        "블록이 제대로 연결되지 않음",
        "오브젝트가 숨겨진 상태",
        "다른 오류로 인한 실행 중단"
      ],
      "solutions": [
        "시작 블록 아래에 동작 블록을 연결하세요",
        "블록들이 완전히 연결되었는지 확인하세요",
        "'보이기' 블록을 추가해보세요",
        "간단한 '말하기' 블록으로 테스트해보세요"
      ]
    },
    {
      "problem": "프로그램이 예상과 다르게 실행돼요",
      "possible_causes": [
        "여러 시작 블록이 동시에 실행됨",
        "이전 실행의 상태가 남아있음",
        "블록 순서가 잘못됨"
      ],
      "solutions": [
        "각 오브젝트의 시작 블록을 확인하세요",
        "변수와 오브젝트 위치를 초기화하세요",
        "블록의 실행 순서를 다시 확인하세요"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "전원 버튼",
      "explanation": "TV나 컴퓨터의 전원 버튼을 누르면 기기가 시작하듯이, 시작 버튼을 누르면 프로그램이 실행됩니다."
    },
    {
      "analogy": "자동차 시동",
      "explanation": "자동차 키를 돌리면 엔진이 시작되고 여러 시스템이 작동하듯이, 시작 버튼으로 프로그램의 모든 기능이 활성화됩니다."
    },
    {
      "analogy": "요리 레시피 시작",
      "explanation": "요리를 시작할 때 재료를 준비하는 것처럼, 프로그램도 시작할 때 필요한 것들을 준비합니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "다중 시작점",
      "description": "여러 오브젝트가 각자의 시작 블록을 가지는 구조",
      "use_case": "복잡한 게임에서 각 캐릭터가 독립적으로 시작"
    },
    {
      "concept": "조건부 시작",
      "description": "특정 조건을 만족할 때만 실행되는 시작 로직",
      "use_case": "난이도 선택 후 게임 시작"
    },
    {
      "concept": "자동 시작",
      "description": "페이지 로드 시 자동으로 실행되는 방식",
      "use_case": "인트로 애니메이션 자동 재생"
    }
  ],

  "accessibility_considerations": [
    {
      "issue": "마우스 사용이 어려운 사용자",
      "solution": "키보드 단축키(예: Ctrl+Enter)로도 실행 가능하게 제공",
      "explanation": "모든 사용자가 쉽게 프로그램을 시작할 수 있어야 합니다"
    },
    {
      "issue": "시각 장애 사용자",
      "solution": "시작 버튼에 명확한 레이블과 설명 제공",
      "explanation": "스크린 리더가 버튼을 정확히 인식할 수 있도록 해야 합니다"
    }
  ],

  "performance_considerations": [
    {
      "aspect": "초기화 최적화",
      "description": "시작 시 필요한 최소한의 작업만 수행",
      "tip": "무거운 작업은 필요한 시점에 나누어 실행"
    },
    {
      "aspect": "메모리 관리",
      "description": "이전 실행의 데이터를 적절히 정리",
      "tip": "시작 시 불필요한 변수나 복제본 제거"
    }
  ]
}