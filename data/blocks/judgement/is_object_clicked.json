{
  "id": "is_object_clicked",
  "category": "judgement",
  "name": "이 오브젝트를 클릭했는가?",
  "description": "현재 마우스로 이 오브젝트를 클릭하고 있는 상태인지를 확인합니다. 마우스가 이 오브젝트 위에서 클릭되고 있으면 참(True)을, 그렇지 않으면 거짓(False)을 반환하는 판단 블록입니다.",

  "visual_appearance": {
    "shape": "육각형 모양 (판단 블록 형태)",
    "color": "초록색 (#10B981)",
    "text_color": "흰색",
    "icon": "없음 (텍스트만)",
    "block_type": "판단 블록 (조건 블록에 연결 가능)",
    "parameters": "없음 (고정 텍스트, '이' 는 현재 블록이 있는 오브젝트를 의미)"
  },

  "educational_context": {
    "learning_objectives": [
      "특정 대상에 대한 마우스 입력 감지 이해",
      "오브젝트별 개별적인 상호작용 구현",
      "위치와 클릭을 동시에 고려하는 판단 학습",
      "버튼, UI 요소, 게임 오브젝트 등의 클릭 처리",
      "사용자 인터페이스 설계의 기본 개념 이해"
    ],
    "key_concepts": [
      {
        "concept": "타겟 기반 입력 감지(Target-based Input Detection)",
        "explanation": "특정 오브젝트를 대상으로 하는 마우스 입력을 감지하는 방식으로, 화면 전체가 아닌 특정 영역에서의 상호작용을 처리함"
      },
      {
        "concept": "충돌 감지와 클릭의 결합",
        "explanation": "마우스 포인터가 오브젝트 영역 안에 있으면서 동시에 클릭 상태인지를 확인하는 복합적 판단"
      },
      {
        "concept": "오브젝트 컨텍스트(Object Context)",
        "explanation": "'이 오브젝트'라는 표현으로 현재 블록이 속한 오브젝트를 자동으로 참조하는 방식"
      },
      {
        "concept": "선택적 상호작용",
        "explanation": "여러 오브젝트 중에서 특정 오브젝트에만 반응하는 선택적 인터랙션 구현"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": [
      "Entry 기본 인터페이스 사용법",
      "오브젝트의 개념 이해",
      "조건 블록 사용법",
      "일반 마우스 클릭 감지 블록 경험"
    ]
  },

  "usage_examples": [
    {
      "title": "버튼 만들기",
      "description": "클릭 가능한 버튼 오브젝트 구현",
      "blocks": [
        "[시작] 버튼을 클릭했을 때",
        "계속 반복하기",
        "  만약 <이 오브젝트를 클릭했는가?> 이라면",
        "    '버튼이 클릭되었습니다!'를 말하기",
        "    모양을 [눌린버튼]으로 바꾸기",
        "  아니라면",
        "    모양을 [일반버튼]으로 바꾸기"
      ],
      "explanation": "이 오브젝트를 클릭하면 메시지를 보여주고 버튼 모양이 바뀝니다. 다른 곳을 클릭하면 일반 버튼 모양으로 돌아갑니다."
    },
    {
      "title": "클릭 가능한 아이템",
      "description": "게임에서 아이템 수집 구현",
      "blocks": [
        "[시작] 버튼을 클릭했을 때",
        "[점수] 상자를 [0] 으/로 정하기",
        "계속 반복하기",
        "  만약 <이 오브젝트를 클릭했는가?> 이라면",
        "    [점수] 상자를 10만큼 바꾸기",
        "    '아이템을 획득했습니다!'를 1초 동안 말하기",
        "    모양 숨기기",
        "    3초 기다리기",
        "    무작위 위치로 이동하기",
        "    모양 보이기"
      ],
      "explanation": "아이템을 클릭하면 점수가 올라가고 아이템이 사라진 후 다른 위치에 다시 나타납니다."
    },
    {
      "title": "멀티 버튼 시스템",
      "description": "여러 개의 독립적인 버튼들",
      "blocks": [
        "// 빨간 버튼 오브젝트",
        "[시작] 버튼을 클릭했을 때",
        "계속 반복하기",
        "  만약 <이 오브젝트를 클릭했는가?> 이라면",
        "    '빨간 버튼 클릭!'을 말하기",
        "",
        "// 파란 버튼 오브젝트",
        "[시작] 버튼을 클릭했을 때",
        "계속 반복하기",
        "  만약 <이 오브젝트를 클릭했는가?> 이라면",
        "    '파란 버튼 클릭!'을 말하기"
      ],
      "explanation": "각각의 버튼 오브젝트마다 이 블록을 사용하면 서로 독립적으로 작동하는 버튼들을 만들 수 있습니다."
    },
    {
      "title": "드래그 가능한 오브젝트",
      "description": "클릭해서 끌어다 놓기 구현",
      "blocks": [
        "[시작] 버튼을 클릭했을 때",
        "계속 반복하기",
        "  만약 <이 오브젝트를 클릭했는가?> 이라면",
        "    마우스 포인터 위치로 이동하기",
        "    '드래그 중...'을 말하기",
        "  아니라면",
        "    말풍선 지우기"
      ],
      "explanation": "이 오브젝트를 클릭하고 마우스를 움직이면 오브젝트가 따라 움직이는 드래그 기능을 구현합니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "언제 오브젝트 클릭 감지를 사용하는지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "버튼, 아이템, 메뉴처럼 특정 오브젝트만 클릭했을 때 반응하게 하고 싶을 때 사용해요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'판단' 카테고리에서 '이 오브젝트를 클릭했는가?' 블록을 찾아보세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "반응하고 싶은 오브젝트의 스크립트에 이 블록을 넣으세요"
        }
      ]
    },
    {
      "situation": "오브젝트를 클릭해도 반응이 없어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "오브젝트가 화면에 보이고, 다른 오브젝트에 가려지지 않았는지 확인하세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'계속 반복하기' 블록 안에서 사용하고 있는지 확인하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "오브젝트의 순서를 '맨 앞'으로 바꿔서 클릭 가능하게 만들어보세요"
        }
      ]
    },
    {
      "situation": "일반 마우스 클릭 감지와 뭐가 다른가요?",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "일반 클릭은 화면 어디든 클릭하면 감지되고, 오브젝트 클릭은 이 오브젝트만 클릭했을 때 감지돼요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "버튼이나 메뉴처럼 특정 부분만 클릭 가능하게 하려면 오브젝트 클릭 감지를 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "여러 개의 클릭 가능한 요소가 있을 때 각각을 구분하려면 오브젝트별로 이 블록을 사용하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "오브젝트가 다른 오브젝트에 가려져서 클릭이 안 됨",
      "why_it_happens": "오브젝트의 순서(깊이)를 고려하지 않아서 앞에 있는 오브젝트가 클릭을 가로챔",
      "consequence": "클릭 대상 오브젝트가 보이지만 클릭이 감지되지 않음",
      "solution": "'순서를 맨 앞으로 바꾸기' 블록을 사용하거나 오브젝트 배치를 조정하기",
      "teaching_moment": "책이 겹쳐있을 때 위에 있는 책만 만질 수 있는 것처럼, 화면에서도 앞에 있는 것만 클릭할 수 있어요"
    },
    {
      "mistake": "투명하거나 작은 오브젝트라서 클릭하기 어려움",
      "why_it_happens": "오브젝트의 크기나 투명도를 고려하지 않고 클릭 영역을 설정함",
      "consequence": "사용자가 정확히 클릭하기 어려워서 사용성이 떨어짐",
      "solution": "클릭 가능한 오브젝트는 충분히 크게 만들고 명확하게 보이도록 하기",
      "teaching_moment": "작은 버튼보다는 큰 버튼이 누르기 쉬운 것처럼, 클릭할 대상은 적당한 크기여야 해요"
    },
    {
      "mistake": "모든 오브젝트에 같은 반응을 만들어서 구분이 안 됨",
      "why_it_happens": "각 오브젝트의 역할과 기능을 구분하지 않고 동일한 스크립트 사용",
      "consequence": "어떤 오브젝트를 클릭해도 같은 일이 일어나서 의미가 없음",
      "solution": "각 오브젝트마다 고유한 기능과 반응을 설계하기",
      "teaching_moment": "리모컨의 각 버튼이 다른 기능을 하는 것처럼, 각 오브젝트도 다른 역할을 가져야 해요"
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "클릭 가능한 오브젝트 준비",
      "instruction": "클릭 반응을 원하는 오브젝트를 선택하고 적절한 크기와 위치로 배치하세요.",
      "visual_hint": "버튼처럼 생긴 그림이나 클릭할 만한 모양으로 만드세요."
    },
    {
      "step": 2,
      "title": "판단 카테고리 찾기",
      "instruction": "블록 팔레트에서 '판단' 카테고리를 클릭하세요.",
      "visual_hint": "초록색 육각형 모양의 아이콘을 찾아보세요."
    },
    {
      "step": 3,
      "title": "오브젝트 클릭 판단 블록 선택",
      "instruction": "'이 오브젝트를 클릭했는가?' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "초록색 육각형에 '이 오브젝트를 클릭했는가?'라고 적힌 블록이에요."
    },
    {
      "step": 4,
      "title": "조건 블록과 연결",
      "instruction": "'만약 ~라면' 블록의 육각형 조건 자리에 넣으세요.",
      "visual_hint": "육각형 모양이 딱 맞아떨어져야 해요."
    },
    {
      "step": 5,
      "title": "반복 블록으로 감싸기",
      "instruction": "지속적으로 확인하기 위해 '계속 반복하기' 블록으로 감싸세요.",
      "visual_hint": "계속 확인해야 클릭을 놓치지 않아요."
    },
    {
      "step": 6,
      "title": "클릭 반응 추가",
      "instruction": "이 오브젝트를 클릭했을 때 실행할 블록들을 조건 블록 안에 넣으세요.",
      "visual_hint": "버튼의 기능에 맞는 동작들을 배치하세요."
    },
    {
      "step": 7,
      "title": "테스트 및 조정",
      "instruction": "프로그램을 실행하고 오브젝트를 클릭해서 제대로 반응하는지 확인하세요.",
      "visual_hint": "다른 곳을 클릭했을 때는 반응하지 않아야 해요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "is_clicked",
      "relationship": "일반 클릭 감지",
      "explanation": "화면 어디든 마우스 클릭을 감지하는 블록으로, 특정 대상이 아닌 전역 클릭 처리"
    },
    {
      "block_id": "when_object_click",
      "relationship": "이벤트 방식",
      "explanation": "오브젝트를 클릭하는 순간만 감지하는 이벤트 블록으로, 한 번의 클릭 처리에 적합"
    },
    {
      "block_id": "change_object_index",
      "relationship": "오브젝트 순서 제어",
      "explanation": "오브젝트를 앞으로 가져와서 클릭 가능하게 만드는 블록"
    },
    {
      "block_id": "coordinate_mouse",
      "relationship": "마우스 위치 확인",
      "explanation": "마우스 포인터의 위치를 확인해서 오브젝트와의 관계 파악"
    },
    {
      "block_id": "_if",
      "relationship": "조건부 실행",
      "explanation": "오브젝트 클릭 상태에 따라 다른 동작을 실행하는 조건 블록"
    }
  ],

  "debugging_tips": [
    {
      "problem": "오브젝트를 클릭해도 반응이 없어요",
      "possible_causes": [
        "오브젝트가 다른 오브젝트에 가려져 있음",
        "오브젝트가 화면에 보이지 않는 위치에 있음",
        "반복 블록 없이 사용해서 감지 빈도가 부족",
        "오브젝트가 투명하거나 매우 작음"
      ],
      "solutions": [
        "'순서를 맨 앞으로 바꾸기' 블록으로 오브젝트를 앞으로 가져오기",
        "오브젝트 위치를 화면 안의 적절한 곳으로 이동하기",
        "'계속 반복하기' 블록으로 감싸서 지속적으로 확인하기",
        "오브젝트 크기를 키우고 투명도를 조정하기"
      ]
    },
    {
      "problem": "다른 오브젝트를 클릭해도 이 오브젝트가 반응해요",
      "possible_causes": ["잘못된 블록을 사용함 (일반 마우스 클릭 블록과 혼동)", "여러 오브젝트에 같은 스크립트가 있음"],
      "solutions": ["'이 오브젝트를 클릭했는가?' 블록이 맞는지 확인하기", "각 오브젝트별로 개별적인 스크립트 작성하기"]
    },
    {
      "problem": "클릭 영역이 예상과 달라요",
      "possible_causes": ["오브젝트의 실제 그림 영역과 예상 영역이 다름", "투명한 부분도 클릭 영역에 포함됨"],
      "solutions": ["오브젝트의 그림을 수정해서 클릭 영역 조정하기", "그림의 투명하지 않은 부분만 클릭되도록 그림 편집하기"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "리모컨 버튼",
      "explanation": "TV 리모컨에서 특정 버튼만 누르면 그 기능이 실행되는 것처럼, 특정 오브젝트만 클릭하면 그 기능이 실행됩니다."
    },
    {
      "analogy": "자판기 버튼",
      "explanation": "자판기에서 원하는 음료 버튼만 누르면 그 음료가 나오는 것처럼, 각 오브젝트마다 다른 반응을 만들 수 있습니다."
    },
    {
      "analogy": "컴퓨터 아이콘",
      "explanation": "컴퓨터 바탕화면에서 특정 아이콘만 클릭하면 그 프로그램이 실행되는 것처럼, 개별 오브젝트에 대한 클릭을 감지합니다."
    },
    {
      "analogy": "게임 컨트롤러",
      "explanation": "게임 컨트롤러에서 각 버튼이 다른 기능을 하는 것처럼, 각 오브젝트마다 고유한 기능을 부여할 수 있습니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "멀티 버튼 인터페이스",
      "description": "여러 개의 독립적인 버튼들로 구성된 사용자 인터페이스 시스템",
      "use_case": "게임 메뉴, 설정 화면, 계산기, 가상 키보드"
    },
    {
      "concept": "인터랙티브 게임 요소",
      "description": "클릭 가능한 게임 오브젝트들로 구성된 상호작용 시스템",
      "use_case": "클릭 수집 게임, 퍼즐 조각, RPG 아이템, 미니게임 요소"
    },
    {
      "concept": "드래그 앤 드롭 시스템",
      "description": "오브젝트 클릭 감지와 마우스 위치를 조합한 드래그 기능",
      "use_case": "파일 정리, 퍼즐 맞추기, 캐릭터 이동, 아이템 배치"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "특정 오브젝트에 대한 클릭 감지를 구현하고 기본적인 반응을 만들 수 있다",
      "example": "버튼 클릭 시 메시지 표시, 아이템 클릭 시 점수 증가"
    },
    {
      "level": "중급",
      "criteria": "여러 개의 독립적인 클릭 가능한 오브젝트들을 만들고 각각 다른 기능을 구현할 수 있다",
      "example": "다기능 리모컨, 게임 메뉴 시스템, 인터랙티브 맵"
    },
    {
      "level": "고급",
      "criteria": "복잡한 사용자 인터페이스나 게임 시스템에서 정교한 오브젝트 클릭 처리를 설계할 수 있다",
      "example": "드래그 앤 드롭 시스템, 멀티레이어 인터페이스, 컨텍스트 메뉴"
    }
  ]
}
