{
  "id": "change_rgb_to_hex",
  "category": "calc",
  "name": "[R], [G], [B] 값을 16진수 색상으로 바꾸기",
  "description": "R(빨강), G(초록), B(파랑) 값을 입력받아 16진수 색상 코드로 변환하는 블록입니다. 0~255 범위의 RGB 값 세 개를 #ff0000 같은 16진수 색상 형태로 만들어 반환합니다.",

  "educational_context": {
    "learning_objectives": [
      "RGB 색상 모델을 이용한 색상 생성 방법 학습",
      "10진수에서 16진수로의 진법 변환 체험",
      "수학적 계산 결과를 시각적 색상으로 표현하는 방법 이해",
      "동적 색상 생성과 프로그래밍적 색상 제어 습득",
      "색상 데이터의 표준 형식 변환 과정 경험"
    ],
    "key_concepts": [
      {
        "concept": "RGB 색상 조합",
        "explanation": "빨강, 초록, 파랑 세 가지 기본 색상의 강도를 0~255로 조절하여 원하는 색상을 만드는 가산혼합 방식"
      },
      {
        "concept": "진법 변환",
        "explanation": "10진수 RGB 값(0~255)을 16진수(00~FF)로 변환하여 웹 표준 색상 코드를 생성하는 수학적 과정"
      },
      {
        "concept": "동적 색상 생성",
        "explanation": "프로그램 실행 중에 계산이나 조건에 따라 실시간으로 새로운 색상을 만들어내는 기술"
      },
      {
        "concept": "색상 인코딩",
        "explanation": "숫자 데이터를 표준화된 색상 형식으로 변환하여 다양한 시스템에서 호환 가능하게 만드는 과정"
      }
    ],
    "difficulty_level": "고급",
    "prerequisites": [
      "RGB 색상 모델의 기본 이해",
      "0~255 숫자 범위 개념 파악",
      "기본적인 수학 연산 블록 사용법",
      "16진수 색상 코드 형식 인지"
    ]
  },

  "usage_examples": [
    {
      "title": "무작위 색상 생성",
      "description": "임의의 RGB 값으로 무작위 색상 만들기",
      "blocks": [
        "when_run_button_click",
        "set_variable('R값', calc_rand(0, 255))",
        "set_variable('G값', calc_rand(0, 255))",
        "set_variable('B값', calc_rand(0, 255))",
        "set_variable('새색상', change_rgb_to_hex((R값), (G값), (B값)))",
        "set_color((새색상))",
        "dialog('생성된 색상: ' + (새색상))"
      ],
      "explanation": "0~255 범위에서 무작위로 RGB 값을 생성하고, 이를 16진수 색상으로 변환하여 붓 색상으로 적용합니다."
    },
    {
      "title": "그라데이션 효과",
      "description": "시간에 따라 색상이 변화하는 효과",
      "blocks": [
        "when_run_button_click",
        "set_variable('시간', 0)",
        "repeat_inf",
        "  set_variable('빨강', calc_operation(((시간) * 5), '사인') * 127 + 128)",
        "  set_variable('초록', calc_operation(((시간) * 3), '코사인') * 127 + 128)",
        "  set_variable('파랑', 200)",
        "  set_variable('색상', change_rgb_to_hex((빨강), (초록), (파랑)))",
        "  set_fill_color((색상))",
        "  set_variable('시간', (시간) + 1)",
        "  wait_second(0.1)"
      ],
      "explanation": "삼각함수를 사용해 시간에 따라 빨강과 초록 값을 변화시켜 부드러운 색상 변화 효과를 만듭니다."
    },
    {
      "title": "사용자 정의 색상 팔레트",
      "description": "사용자 입력으로 색상 생성",
      "blocks": [
        "when_run_button_click",
        "ask_and_wait('빨강 값을 입력하세요 (0~255)')",
        "set_variable('R', (답변))",
        "ask_and_wait('초록 값을 입력하세요 (0~255)')",
        "set_variable('G', (답변))",
        "ask_and_wait('파랑 값을 입력하세요 (0~255)')",
        "set_variable('B', (답변))",
        "set_variable('사용자색상', change_rgb_to_hex((R), (G), (B)))",
        "set_color((사용자색상))",
        "start_drawing",
        "repeat_basic(4)",
        "  move_direction(100)",
        "  direction_relative(90)"
      ],
      "explanation": "사용자가 직접 RGB 값을 입력하여 원하는 색상을 만들고, 그 색상으로 사각형을 그립니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "RGB 값을 어떤 범위로 입력해야 할지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "RGB 각 성분은 0~255 범위의 숫자를 사용해요. 0은 해당 색이 전혀 없음, 255는 최대 강도를 의미해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "255, 0, 0은 순수한 빨강, 0, 255, 0은 순수한 초록, 0, 0, 255는 순수한 파랑이 돼요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "범위를 벗어난 값을 입력하면 자동으로 0~255 범위로 조정될 수 있어요"
        }
      ]
    },
    {
      "situation": "생성된 16진수 색상을 어떻게 사용해야 할지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "생성된 16진수 색상은 #으로 시작하는 6자리 코드 형태로 나와요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "이 결과를 '붓 색을 [ ]으로 정하기'나 '채우기 색을 [ ]으로 정하기' 블록에서 사용할 수 있어요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "변수에 저장해서 나중에 재사용하거나, 여러 오브젝트에서 같은 색상을 공유할 수 있어요"
        }
      ]
    },
    {
      "situation": "동적으로 색상을 변화시키고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "반복 블록 안에서 RGB 값을 조금씩 변화시키면 색상이 서서히 바뀌는 효과를 만들 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "타이머나 무작위 수, 삼각함수 등을 활용해서 다양한 색상 변화 패턴을 만들어보세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "각 프레임마다 새로운 RGB 값을 계산하고 색상으로 변환하여 실시간 효과를 구현하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "RGB 값 범위를 초과하여 입력",
      "why_it_happens": "RGB 값이 0~255 범위라는 제한을 모르고 더 큰 값이나 음수 입력",
      "consequence": "예상과 다른 색상이 생성되거나 오류 발생",
      "solution": "항상 0~255 범위 내의 값만 사용하고, 필요시 조건 블록으로 범위 제한",
      "teaching_moment": "컴퓨터의 색상 시스템은 정해진 범위가 있어요. 체온계가 측정 범위가 있는 것처럼요."
    },
    {
      "mistake": "RGB 값을 정수가 아닌 소수로 입력",
      "why_it_happens": "계산 결과가 소수점을 포함해서 그대로 사용",
      "consequence": "색상 변환이 제대로 되지 않거나 예상과 다른 결과",
      "solution": "반올림이나 버림 블록을 사용해서 RGB 값을 정수로 만든 후 사용",
      "teaching_moment": "색상은 디지털 픽셀로 표현되므로 정확한 정수 값이 필요해요."
    },
    {
      "mistake": "생성된 색상 코드를 잘못된 블록에 사용",
      "why_it_happens": "16진수 색상 코드 형태를 받지 않는 블록에 사용 시도",
      "consequence": "블록이 작동하지 않거나 오류 발생",
      "solution": "생성된 16진수 색상은 색상을 받는 블록에서만 사용",
      "teaching_moment": "각 블록은 받을 수 있는 데이터 형태가 정해져 있어요. 열쇠와 자물쇠처럼 맞는 것끼리만 작동해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "계산 블록 카테고리 선택",
      "instruction": "블록 팔레트에서 '계산' 카테고리를 클릭하세요.",
      "visual_hint": "초록색 계산기 모양 아이콘을 찾아보세요."
    },
    {
      "step": 2,
      "title": "RGB 변환 블록 찾기",
      "instruction": "'[R], [G], [B] 값을 16진수 색상으로 바꾸기' 블록을 찾아서 드래그하세요.",
      "visual_hint": "색상 관련 블록들이 모여있는 부분에서 찾을 수 있어요."
    },
    {
      "step": 3,
      "title": "R 값 입력",
      "instruction": "첫 번째 칸에 빨강 성분 값(0~255)을 입력하세요.",
      "visual_hint": "255는 가장 밝은 빨강, 0은 빨강이 전혀 없음을 의미해요."
    },
    {
      "step": 4,
      "title": "G 값 입력",
      "instruction": "두 번째 칸에 초록 성분 값(0~255)을 입력하세요.",
      "visual_hint": "초록 성분의 강도를 조절하는 값이에요."
    },
    {
      "step": 5,
      "title": "B 값 입력",
      "instruction": "세 번째 칸에 파랑 성분 값(0~255)을 입력하세요.",
      "visual_hint": "파랑 성분의 강도를 조절하는 값이에요."
    },
    {
      "step": 6,
      "title": "결과 활용",
      "instruction": "생성된 16진수 색상을 변수에 저장하거나 색상 설정 블록에서 사용하세요.",
      "visual_hint": "결과는 #ff0000 같은 형태의 16진수 색상 코드예요."
    },
    {
      "step": 7,
      "title": "테스트 및 조정",
      "instruction": "프로그램을 실행해보고 원하는 색상이 나오는지 확인하세요.",
      "visual_hint": "RGB 값을 조정해서 다양한 색상을 실험해보세요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "change_hex_to_rgb",
      "relationship": "역변환 블록",
      "explanation": "16진수 색상 코드에서 RGB 값을 추출하는 반대 기능의 블록"
    },
    {
      "block_id": "calc_rand",
      "relationship": "무작위 RGB 생성",
      "explanation": "0~255 범위의 무작위 숫자를 생성해서 RGB 값으로 사용"
    },
    {
      "block_id": "set_color",
      "relationship": "색상 적용",
      "explanation": "생성된 16진수 색상을 붓 색상으로 설정하는 블록"
    },
    {
      "block_id": "set_fill_color",
      "relationship": "채우기 색상 적용",
      "explanation": "생성된 색상을 채우기 색상으로 사용하는 블록"
    },
    {
      "block_id": "calc_operation",
      "relationship": "RGB 값 계산",
      "explanation": "삼각함수나 수학 연산으로 RGB 값을 동적으로 생성"
    }
  ],

  "debugging_tips": [
    {
      "problem": "예상과 다른 색상이 나와요",
      "possible_causes": [
        "RGB 값 순서를 잘못 입력",
        "0~255 범위를 벗어난 값 사용",
        "소수점 값을 사용",
        "RGB 색상 조합을 잘못 이해"
      ],
      "solutions": [
        "R(빨강), G(초록), B(파랑) 순서가 맞는지 확인",
        "모든 값이 0~255 범위 내에 있는지 확인",
        "반올림 블록으로 정수 값으로 변환",
        "간단한 색상(255,0,0)부터 테스트해보기"
      ]
    },
    {
      "problem": "생성된 색상 코드가 작동하지 않아요",
      "possible_causes": ["색상을 받지 않는 블록에 사용", "변수 저장 과정에서 오류", "블록 연결이 제대로 되지 않음"],
      "solutions": ["색상 설정 블록에서만 사용하기", "변수에 정확히 저장되었는지 확인", "블록 연결 상태 점검 후 재시도"]
    },
    {
      "problem": "동적 색상 변화가 너무 빠르거나 느려요",
      "possible_causes": ["반복 속도 조절 문제", "RGB 값 변화량이 부적절", "대기 시간 설정 문제"],
      "solutions": ["wait_second 블록으로 속도 조절", "RGB 값 변화량을 작게 조정", "반복 주기를 적절히 설정"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "물감 섞기",
      "explanation": "빨강, 초록, 파랑 물감을 각각 다른 양으로 섞어서 새로운 색을 만드는 것과 같은 과정입니다."
    },
    {
      "analogy": "요리 레시피",
      "explanation": "재료(RGB)의 양을 정확히 측정해서 요리(색상)를 만드는 것처럼, 정확한 수치로 원하는 색상을 만들어냅니다."
    },
    {
      "analogy": "조명 믹서",
      "explanation": "무대 조명에서 빨강, 초록, 파랑 조명의 밝기를 조절해서 다양한 색상을 만드는 원리와 동일합니다."
    },
    {
      "analogy": "컴퓨터 모니터",
      "explanation": "모니터의 각 픽셀이 RGB 값에 따라 색상을 표시하는 것처럼, 숫자를 시각적 색상으로 변환하는 과정입니다."
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "0~255 범위의 RGB 값을 올바르게 입력하여 16진수 색상 코드를 생성하고, 이를 색상 설정에 사용할 수 있다"
    },
    {
      "level": "중급",
      "criteria": "계산이나 무작위 수를 이용해 동적으로 RGB 값을 생성하고, 색상 변화 효과나 그라데이션을 구현할 수 있다"
    },
    {
      "level": "고급",
      "criteria": "복잡한 수학 함수나 알고리즘을 활용해 창의적인 색상 패턴을 만들고, 사용자 상호작용이나 데이터 시각화에 응용할 수 있다"
    }
  ]
}
