{
  "id": "quotient_and_mod",
  "category": "calc",
  "name": "[~]를 [~]로 나눈 [몫/나머지]",
  "description": "나눗셈에서 몫(정수 부분)과 나머지(나누고 남은 수)를 구하는 블록입니다. 수학의 나눗셈 개념을 프로그래밍에서 활용할 때 사용하며, 주기적 패턴이나 그룹 나누기 등에 유용합니다.",

  "educational_context": {
    "learning_objectives": [
      "나눗셈의 몫과 나머지 개념 이해",
      "정수 나눗셈과 실수 나눗셈의 차이점 학습",
      "주기적 패턴과 반복 구조의 수학적 원리 이해",
      "그룹 분할과 분류 논리 개발",
      "모듈러 연산의 기초 개념 습득"
    ],
    "key_concepts": [
      {
        "concept": "몫(Quotient)",
        "explanation": "나눗셈에서 나누어떨어지는 정수 부분으로, 피제수를 제수로 몇 번 나눌 수 있는지를 나타내는 값"
      },
      {
        "concept": "나머지(Remainder/Modulo)",
        "explanation": "나눗셈 후 남은 값으로, 피제수에서 (몫 × 제수)를 뺀 결과. 항상 제수보다 작은 양의 정수"
      },
      {
        "concept": "유클리드 나눗셈",
        "explanation": "임의의 정수 a를 양의 정수 b로 나눌 때 a = bq + r (0 ≤ r < b)로 나타내는 수학적 원리"
      },
      {
        "concept": "모듈러 연산(Modular Arithmetic)",
        "explanation": "나머지 연산을 활용한 수학 체계로, 주기적 패턴이나 순환 구조를 표현할 때 사용"
      },
      {
        "concept": "주기성(Periodicity)",
        "explanation": "나머지 연산을 통해 일정한 간격으로 반복되는 패턴을 만들어내는 특성"
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": [
      "Entry 기본 인터페이스 사용법",
      "기본 사칙연산 이해",
      "나눗셈의 기본 개념",
      "변수 사용 방법",
      "조건문과 반복문 기본 사용법"
    ]
  },

  "usage_examples": [
    {
      "title": "짝수 홀수 판별기",
      "description": "숫자를 2로 나눈 나머지로 짝수/홀수 구분",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "'숫자를 입력하세요' 묻고 기다리기",
        "입력값 변수를 (답변)으로 정하기",
        "나머지 변수를 (입력값)을 (2)로 나눈 나머지로 정하기",
        "만약 (나머지) = (0) 라면",
        "  (입력값) + '은(는) 짝수입니다!' 말하기",
        "아니라면",
        "  (입력값) + '은(는) 홀수입니다!' 말하기"
      ],
      "explanation": "어떤 수든 2로 나눈 나머지가 0이면 짝수, 1이면 홀수입니다."
    },
    {
      "title": "색깔 순환 효과",
      "description": "시간에 따라 색깔이 주기적으로 변하는 효과",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "카운터 변수를 0으로 정하기",
        "계속 반복하기",
        "  카운터 변수를 1만큼 바꾸기",
        "  색번호 변수를 (카운터)를 (6)으로 나눈 나머지로 정하기",
        "  색 효과를 (색번호) × (30)으로 정하기",
        "  0.1초 기다리기"
      ],
      "explanation": "카운터를 6으로 나눈 나머지(0~5)를 사용해서 6가지 색이 반복적으로 나타납니다."
    },
    {
      "title": "그룹 나누기 시스템",
      "description": "여러 명을 일정한 크기의 그룹으로 나누기",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "'총 인원수를 입력하세요' 묻고 기다리기",
        "총인원 변수를 (답변)으로 정하기",
        "'한 그룹당 몇 명씩 나누시겠습니까?' 묻고 기다리기",
        "그룹크기 변수를 (답변)으로 정하기",
        "그룹수 변수를 (총인원)을 (그룹크기)로 나눈 몫으로 정하기",
        "남은인원 변수를 (총인원)을 (그룹크기)로 나눈 나머지로 정하기",
        "(그룹수) + '개 그룹을 만들 수 있고, ' + (남은인원) + '명이 남습니다.' 말하기"
      ],
      "explanation": "전체 인원을 그룹 크기로 나누어 완전한 그룹 수와 남은 인원을 계산합니다."
    },
    {
      "title": "달력 요일 계산기",
      "description": "특정 날짜의 요일을 계산하는 간단한 시스템",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "'1월 1일부터 며칠째인지 입력하세요' 묻고 기다리기",
        "날짜 변수를 (답변)으로 정하기",
        "요일번호 변수를 ((날짜) - (1))을 (7)로 나눈 나머지로 정하기",
        "만약 (요일번호) = (0) 라면",
        "  '월요일입니다!' 말하기",
        "아니라면 만약 (요일번호) = (1) 라면",
        "  '화요일입니다!' 말하기",
        "... (다른 요일들도 비슷하게)"
      ],
      "explanation": "1월 1일을 기준으로 7로 나눈 나머지를 사용해서 요일을 계산합니다."
    },
    {
      "title": "패턴 생성기",
      "description": "나머지 연산으로 규칙적인 패턴 만들기",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "1부터 20까지 반복하기",
        "  위치 변수를 (횟수)를 (4)로 나눈 나머지로 정하기",
        "  만약 (위치) = (0) 라면",
        "    x좌표를 -150으로 정하기",
        "  아니라면 만약 (위치) = (1) 라면",
        "    x좌표를 -50으로 정하기",
        "  아니라면 만약 (위치) = (2) 라면",
        "    x좌표를 50으로 정하기",
        "  아니라면",
        "    x좌표를 150으로 정하기",
        "  도장 찍기",
        "  1초 기다리기"
      ],
      "explanation": "4로 나눈 나머지를 사용해서 4개의 위치가 반복적으로 나타나는 패턴을 만듭니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "몫과 나머지를 어떻게 구하는지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'계산' 카테고리(초록색 계산기 모양 아이콘)를 클릭해보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'[~]를 [~]로 나눈 [몫/나머지]' 블록을 찾아보세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "첫 번째와 두 번째 칸에 나눌 수와 나누는 수를 넣고, 드롭다운에서 몫 또는 나머지를 선택하세요"
        }
      ]
    },
    {
      "situation": "짝수 홀수를 어떻게 구분하나요?",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "어떤 수를 2로 나눈 나머지가 0이면 짝수, 1이면 홀수에요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'[숫자]를 (2)로 나눈 나머지' 블록을 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "나머지가 0인지 확인하는 조건 블록을 추가하세요"
        }
      ]
    },
    {
      "situation": "주기적으로 반복되는 패턴을 만들고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "카운터를 증가시키면서 원하는 주기 수로 나눈 나머지를 사용하면 돼요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "3가지 패턴이라면 '(카운터)를 (3)으로 나눈 나머지'를 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "나머지 값(0, 1, 2)에 따라 다른 동작을 하는 조건 블록을 만드세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "나눗셈(/)과 몫 구하기를 혼동",
      "why_it_happens": "일반 나눗셈은 소수점이 있는 결과를, 몫은 정수만 결과로 준다는 차이를 모름",
      "consequence": "예상과 다른 형태의 결과값",
      "solution": "소수점까지 필요하면 일반 나눗셈(/), 정수만 필요하면 몫 사용",
      "teaching_moment": "10 ÷ 3 = 3.333...이지만, 10을 3으로 나눈 몫은 3이에요. 나머지는 1이고요."
    },
    {
      "mistake": "나머지가 음수가 될 수 있다고 생각",
      "why_it_happens": "수학의 일반적인 나머지 정의를 정확히 이해하지 못함",
      "consequence": "나머지를 이용한 조건 설정에서 예상치 못한 결과",
      "solution": "나머지는 항상 0 이상이고 나누는 수보다 작다는 것을 기억",
      "teaching_moment": "나머지는 나누고 '남은' 것이라서 항상 0 이상이고, 나누는 수보다 작아요."
    },
    {
      "mistake": "0으로 나누기 시도",
      "why_it_happens": "나누는 수가 변수일 때 0이 될 가능성을 고려하지 않음",
      "consequence": "프로그램 오류 발생",
      "solution": "나누기 전에 나누는 수가 0이 아닌지 확인하는 조건 추가",
      "teaching_moment": "0으로 나누는 것은 수학적으로 정의되지 않아요. 프로그램에서도 오류가 발생해요."
    },
    {
      "mistake": "주기 설정을 잘못해서 원하지 않는 패턴 생성",
      "why_it_happens": "원하는 패턴의 개수와 나누는 수를 일치시키지 않음",
      "consequence": "예상과 다른 주기나 패턴",
      "solution": "5가지 패턴을 원하면 5로 나누어야 0,1,2,3,4 다섯 가지 나머지가 나옴",
      "teaching_moment": "n가지 다른 것을 반복하려면 n으로 나눈 나머지를 사용해야 해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "계산 블록 찾기",
      "instruction": "블록 팔레트에서 '계산' 카테고리(초록색 계산기 모양)를 클릭하세요.",
      "visual_hint": "초록색 아이콘이고 계산기나 숫자 모양을 하고 있어요."
    },
    {
      "step": 2,
      "title": "몫/나머지 블록 선택",
      "instruction": "'[~]를 [~]로 나눈 [몫/나머지]' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "둥근 모양의 블록으로 가운데에 몫/나머지 선택 버튼이 있어요."
    },
    {
      "step": 3,
      "title": "나눌 수 입력",
      "instruction": "첫 번째 빈 칸에 나눌 수(피제수)를 넣으세요.",
      "visual_hint": "나누어지는 수, 즉 더 큰 수를 첫 번째에 넣어요."
    },
    {
      "step": 4,
      "title": "나누는 수 입력",
      "instruction": "두 번째 빈 칸에 나누는 수(제수)를 넣으세요.",
      "visual_hint": "나누는 기준이 되는 수를 두 번째에 넣어요."
    },
    {
      "step": 5,
      "title": "몫 또는 나머지 선택",
      "instruction": "드롭다운 메뉴에서 몫 또는 나머지 중 원하는 것을 선택하세요.",
      "visual_hint": "몫은 나누어떨어지는 횟수, 나머지는 나누고 남은 수예요."
    },
    {
      "step": 6,
      "title": "결과 활용",
      "instruction": "완성된 블록을 변수에 저장하거나 조건문에서 사용하세요.",
      "visual_hint": "둥근 모양의 결과 블록은 숫자가 들어갈 자리에 넣을 수 있어요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "calc_basic",
      "block_name": "[~] [연산자] [~]",
      "relationship": "기본 나눗셈 비교",
      "explanation": "일반 나눗셈(소수점 포함)과 몫 구하기(정수만)의 차이점 이해"
    },
    {
      "block_id": "boolean_basic_operator",
      "block_name": "[~] [비교연산자] [~]",
      "relationship": "나머지 조건 판단",
      "explanation": "나머지 값을 특정 수와 비교하여 짝수/홀수 등 조건 판단"
    },
    {
      "block_id": "_if",
      "block_name": "만약 ~라면",
      "relationship": "조건부 실행",
      "explanation": "나머지 값에 따라 다른 동작을 수행하는 조건문에서 활용"
    },
    {
      "block_id": "set_variable",
      "block_name": "[변수]를 [값]으로 정하기",
      "relationship": "결과값 저장",
      "explanation": "몫이나 나머지 값을 변수에 저장하여 나중에 활용"
    },
    {
      "block_id": "repeat_basic",
      "block_name": "[횟수]번 반복하기",
      "relationship": "패턴 생성",
      "explanation": "반복 횟수를 활용한 주기적 패턴 만들기에서 나머지 연산 활용"
    },
    {
      "block_id": "change_variable",
      "block_name": "[변수]를 [값]만큼 바꾸기",
      "relationship": "카운터 증가",
      "explanation": "카운터를 증가시키면서 나머지 연산으로 주기적 효과 생성"
    },
    {
      "block_id": "calc_operation",
      "block_name": "[~]의 [반올림/버림] 값",
      "relationship": "수치 가공",
      "explanation": "몫과 함께 사용하여 다양한 형태의 수치 처리"
    }
  ],

  "debugging_tips": [
    {
      "problem": "나머지가 예상과 달라요",
      "possible_causes": [
        "나눌 수와 나누는 수의 순서를 바꿔서 입력",
        "음수를 사용했을 때의 나머지 처리 방식 차이",
        "나머지의 범위를 잘못 이해"
      ],
      "solutions": [
        "나눌 수(피제수)를 첫 번째, 나누는 수(제수)를 두 번째에 정확히 배치",
        "양의 정수끼리 나눗셈하여 기본 개념부터 확인",
        "나머지는 항상 0 이상이고 나누는 수보다 작다는 것 확인"
      ]
    },
    {
      "problem": "패턴이 원하는 대로 반복되지 않아요",
      "possible_causes": [
        "원하는 패턴 개수와 나누는 수가 일치하지 않음",
        "카운터 시작값을 고려하지 않음",
        "나머지 값과 실제 사용할 값의 매핑이 잘못됨"
      ],
      "solutions": [
        "n가지 패턴을 원하면 n으로 나누어 0~(n-1) 범위의 나머지 확보",
        "카운터가 0부터 시작하는지 1부터 시작하는지 확인",
        "나머지 값(0,1,2...)을 실제 원하는 값으로 올바르게 변환"
      ]
    },
    {
      "problem": "0으로 나누기 오류가 발생해요",
      "possible_causes": ["나누는 수가 변수인데 0이 됨", "사용자 입력에서 0을 입력함", "계산 과정에서 의도치 않게 0이 생성됨"],
      "solutions": [
        "나누기 전에 '만약 (나누는수) ≠ (0) 라면' 조건 추가",
        "사용자 입력 시 0이 아닌 수만 입력하도록 안내",
        "나누는 수로 사용할 값의 범위를 미리 확인"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "시계의 시간",
      "explanation": "25시는 다음날 1시가 되는 것처럼, 24로 나눈 나머지로 시간을 계산합니다."
    },
    {
      "analogy": "카드 게임 분배",
      "explanation": "52장의 카드를 4명에게 나누면 각자 13장씩 받고 0장이 남는 것처럼 몫과 나머지를 사용합니다."
    },
    {
      "analogy": "달력의 요일",
      "explanation": "7일마다 같은 요일이 돌아오는 것처럼, 7로 나눈 나머지로 요일을 계산할 수 있습니다."
    },
    {
      "analogy": "엘리베이터 층수 표시",
      "explanation": "아파트에서 101호, 201호, 301호처럼 100으로 나눈 나머지로 호수를, 몫으로 층수를 알 수 있습니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "복합 주기 패턴",
      "description": "여러 개의 서로 다른 주기를 조합하여 복잡한 반복 패턴 생성",
      "use_case": "복합 애니메이션, 음악 리듬 패턴"
    },
    {
      "concept": "해시 테이블 기초",
      "description": "나머지 연산을 활용한 데이터 분류 및 저장 위치 결정",
      "use_case": "데이터 정리 시스템, 색인 만들기"
    },
    {
      "concept": "암호화 기초",
      "description": "모듈러 연산을 활용한 간단한 암호화 및 복호화 시스템",
      "use_case": "시저 암호, 간단한 문자 변환"
    },
    {
      "concept": "게임 메커니즘",
      "description": "나머지 연산을 활용한 게임 요소(턴제, 확률, 순환)",
      "use_case": "보드게임 시뮬레이션, 확률 기반 이벤트"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "몫과 나머지의 기본 개념을 이해하고 간단한 계산을 할 수 있다",
      "example": "짝수/홀수 판별, 기본적인 그룹 나누기"
    },
    {
      "level": "중급",
      "criteria": "나머지 연산을 활용하여 주기적 패턴과 조건부 로직을 구현할 수 있다",
      "example": "색깔 순환 효과, 요일 계산기"
    },
    {
      "level": "고급",
      "criteria": "복잡한 모듈러 연산을 활용한 고급 알고리즘과 시스템을 설계할 수 있다",
      "example": "복합 주기 시스템, 해시 기반 분류 시스템"
    }
  ]
}
