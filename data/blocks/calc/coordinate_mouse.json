{
  "id": "coordinate_mouse",
  "category": "calc",
  "name": "마우스 포인터의 [x/y] 좌표",
  "description": "현재 마우스 포인터가 위치한 곳의 x좌표 또는 y좌표 값을 반환하는 블록입니다. 마우스 위치를 실시간으로 추적하여 인터랙티브한 프로그램을 만들 때 사용합니다.",

  "educational_context": {
    "learning_objectives": [
      "2차원 좌표계의 개념과 x, y축 이해",
      "실시간 입력 감지와 처리 방법 학습",
      "마우스 인터랙션을 활용한 사용자 경험 설계",
      "좌표를 이용한 위치 기반 프로그래밍 기초 습득",
      "수학적 좌표 개념의 프로그래밍 적용"
    ],
    "key_concepts": [
      {
        "concept": "2차원 좌표계(2D Coordinate System)",
        "explanation": "x축(가로)과 y축(세로)로 이루어진 평면에서 위치를 표현하는 수학적 체계로, 엔트리에서는 화면 중앙이 (0, 0)인 좌표계 사용"
      },
      {
        "concept": "마우스 이벤트 추적",
        "explanation": "사용자의 마우스 움직임을 실시간으로 감지하고 그 위치 정보를 프로그램에서 활용하는 기술"
      },
      {
        "concept": "실시간 데이터 처리",
        "explanation": "계속해서 변하는 값(마우스 위치)을 프로그램 실행 중에 지속적으로 읽어와서 처리하는 방법"
      },
      {
        "concept": "픽셀 좌표와 논리 좌표",
        "explanation": "화면의 물리적 픽셀 위치와 프로그래밍에서 사용하는 논리적 좌표 간의 변환과 관계"
      },
      {
        "concept": "위치 기반 상호작용",
        "explanation": "사용자의 마우스 위치에 따라 프로그램이 다르게 반응하는 인터랙티브 프로그래밍 패턴"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["Entry 기본 인터페이스 사용법", "x, y 좌표 개념의 기본 이해", "변수 사용 방법", "기본 수학 연산 지식"]
  },

  "usage_examples": [
    {
      "title": "마우스 따라가기",
      "description": "캐릭터가 마우스 포인터를 따라 움직임",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  x좌표를 (마우스 포인터의 x 좌표)로 정하기",
        "  y좌표를 (마우스 포인터의 y 좌표)로 정하기"
      ],
      "explanation": "캐릭터가 실시간으로 마우스 포인터의 위치로 이동하여 마우스를 따라다닙니다."
    },
    {
      "title": "좌표 표시기",
      "description": "현재 마우스 위치의 좌표를 실시간으로 표시",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  '마우스 위치: (' + (마우스 포인터의 x 좌표) + ', ' + (마우스 포인터의 y 좌표) + ')' 말하기",
        "  0.1초 기다리기"
      ],
      "explanation": "마우스를 움직일 때마다 현재 위치의 x, y 좌표를 화면에 표시합니다."
    },
    {
      "title": "그림 그리기 프로그램",
      "description": "마우스 위치에 따라 선을 그리는 간단한 그림 프로그램",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  만약 (마우스를 클릭했는가?) 라면",
        "    붓 내리기",
        "    x: (마우스 포인터의 x 좌표), y: (마우스 포인터의 y 좌표) 위치로 이동하기",
        "  아니라면",
        "    붓 들기"
      ],
      "explanation": "마우스를 클릭하고 드래그하면 마우스 경로를 따라 선이 그어지는 그림 프로그램입니다."
    },
    {
      "title": "영역 감지 게임",
      "description": "마우스가 특정 영역에 있는지 감지하는 게임",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "점수 변수를 0으로 정하기",
        "계속 반복하기",
        "  만약 ((마우스 포인터의 x 좌표) > (-50)) 그리고 ((마우스 포인터의 x 좌표) < (50)) 그리고 ((마우스 포인터의 y 좌표) > (-50)) 그리고 ((마우스 포인터의 y 좌표) < (50)) 라면",
        "    점수 변수를 1만큼 바꾸기",
        "    '점수: ' + (점수) 말하기",
        "  1초 기다리기"
      ],
      "explanation": "마우스가 화면 중앙의 사각형 영역 안에 있을 때만 점수가 올라가는 게임입니다."
    },
    {
      "title": "거리 계산기",
      "description": "캐릭터와 마우스 사이의 거리 계산",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  x차이 변수를 (마우스 포인터의 x 좌표) - (이 캐릭터의 x 값)으로 정하기",
        "  y차이 변수를 (마우스 포인터의 y 좌표) - (이 캐릭터의 y 값)으로 정하기",
        "  거리 변수를 ((x차이) × (x차이) + (y차이) × (y차이))의 제곱근 값으로 정하기",
        "  '거리: ' + (거리) 말하기",
        "  0.5초 기다리기"
      ],
      "explanation": "피타고라스 정리를 사용하여 캐릭터와 마우스 포인터 사이의 실제 거리를 계산합니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "마우스 좌표를 어떻게 가져오는지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'계산' 카테고리(초록색 계산기 모양 아이콘)를 클릭해보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'마우스 포인터의 [x/y] 좌표' 블록을 찾아보세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "드롭다운에서 x 또는 y를 선택해서 원하는 좌표축을 선택하세요"
        }
      ]
    },
    {
      "situation": "마우스를 따라가는 캐릭터를 만들고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "계속 반복하기 블록으로 실시간으로 마우스 위치를 확인해야 해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'x좌표를 [값]으로 정하기'와 'y좌표를 [값]으로 정하기' 블록을 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "각각의 값 자리에 마우스 좌표 블록을 넣어주세요"
        }
      ]
    },
    {
      "situation": "특정 영역에 마우스가 있는지 확인하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "x좌표와 y좌표를 각각 범위로 확인해야 해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'판단' 카테고리의 비교 블록(>, <, =)을 사용해서 좌표 범위를 확인하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "'그리고' 블록으로 여러 조건을 조합해서 사각형 영역을 만들 수 있어요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "좌표계의 중심점을 잘못 이해",
      "why_it_happens": "엔트리의 좌표계가 화면 중앙을 (0, 0)으로 하는 것을 모름",
      "consequence": "마우스 위치 계산이나 영역 설정에서 오차 발생",
      "solution": "엔트리 화면에서 중앙이 (0, 0)이고, 오른쪽이 +x, 위쪽이 +y라는 것을 기억",
      "teaching_moment": "수학 시간에 배운 좌표계와 비슷하지만, 컴퓨터 화면에서는 보통 왼쪽 위가 (0, 0)이에요. 엔트리는 수학과 같은 방식을 사용해요."
    },
    {
      "mistake": "마우스 좌표를 한 번만 가져와서 저장 후 계속 사용",
      "why_it_happens": "마우스 좌표가 실시간으로 변한다는 것을 이해하지 못함",
      "consequence": "마우스를 움직여도 프로그램이 반응하지 않음",
      "solution": "반복 블록 안에서 매번 새로운 마우스 좌표를 가져와야 함",
      "teaching_moment": "마우스 좌표는 시계 바늘처럼 계속 변해요. 한 번 확인하고 끝이 아니라 계속 확인해야 해요."
    },
    {
      "mistake": "x좌표와 y좌표를 헷갈려서 반대로 사용",
      "why_it_happens": "x는 가로, y는 세로라는 개념을 정확히 구분하지 못함",
      "consequence": "캐릭터가 의도와 다른 방향으로 움직이거나 영역 검사가 잘못됨",
      "solution": "x는 왼쪽-오른쪽(가로), y는 아래-위(세로)라는 것을 확실히 기억하고 테스트",
      "teaching_moment": "x는 가로선을 따라 움직이고, y는 세로선을 따라 움직여요. 'x-가로, y-세로'로 기억하세요."
    },
    {
      "mistake": "좌표값을 정수로만 생각하여 소수점 결과에 당황",
      "why_it_happens": "마우스 좌표가 소수점을 포함할 수 있다는 것을 모름",
      "consequence": "예상보다 정밀한 값이 나와서 조건 비교 등에서 문제 발생",
      "solution": "필요에 따라 반올림 블록을 사용하거나 소수점을 고려한 범위 설정",
      "teaching_moment": "마우스는 아주 정밀하게 움직일 수 있어서 123.45 같은 소수점 좌표도 나올 수 있어요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "계산 블록 찾기",
      "instruction": "블록 팔레트에서 '계산' 카테고리(초록색 계산기 모양)를 클릭하세요.",
      "visual_hint": "초록색 아이콘이고 계산기나 숫자 모양을 하고 있어요."
    },
    {
      "step": 2,
      "title": "마우스 좌표 블록 선택",
      "instruction": "'마우스 포인터의 [x/y] 좌표' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "둥근 모양의 블록으로 가운데에 x/y 선택 버튼이 있어요."
    },
    {
      "step": 3,
      "title": "좌표축 선택",
      "instruction": "드롭다운 메뉴에서 원하는 좌표축(x 또는 y)을 선택하세요.",
      "visual_hint": "x는 가로 위치, y는 세로 위치를 나타내요."
    },
    {
      "step": 4,
      "title": "좌표값 활용",
      "instruction": "완성된 좌표 블록을 변수에 저장하거나 다른 블록의 입력으로 사용하세요.",
      "visual_hint": "둥근 모양의 좌표 블록은 숫자가 들어갈 자리에 넣을 수 있어요."
    },
    {
      "step": 5,
      "title": "실시간 추적 설정",
      "instruction": "마우스 움직임을 계속 추적하려면 '계속 반복하기' 블록 안에 넣으세요.",
      "visual_hint": "반복 블록 안에서 매번 새로운 마우스 위치를 확인해야 해요."
    },
    {
      "step": 6,
      "title": "테스트 및 확인",
      "instruction": "프로그램을 실행하고 마우스를 움직여서 좌표가 제대로 변하는지 확인하세요.",
      "visual_hint": "마우스를 움직이면 좌표값이 실시간으로 변해야 해요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "locate_xy",
      "block_name": "x: [x값], y: [y값] 위치로 이동하기",
      "relationship": "좌표 기반 이동",
      "explanation": "마우스 좌표를 사용하여 캐릭터를 특정 위치로 이동시킬 때 함께 사용"
    },
    {
      "block_id": "locate_x",
      "block_name": "x좌표를 [값]로 정하기",
      "relationship": "x좌표 설정",
      "explanation": "마우스의 x좌표를 가져와서 캐릭터의 x위치를 설정할 때 사용"
    },
    {
      "block_id": "locate_y",
      "block_name": "y좌표를 [값]로 정하기",
      "relationship": "y좌표 설정",
      "explanation": "마우스의 y좌표를 가져와서 캐릭터의 y위치를 설정할 때 사용"
    },
    {
      "block_id": "boolean_basic_operator",
      "block_name": "[~] [비교연산자] [~]",
      "relationship": "좌표 범위 확인",
      "explanation": "마우스 좌표가 특정 값보다 크거나 작은지 비교하여 영역 검사에 활용"
    },
    {
      "block_id": "distance_something",
      "block_name": "[오브젝트/마우스]까지의 거리",
      "relationship": "거리 계산",
      "explanation": "캐릭터와 마우스 사이의 거리를 직접 계산할 때 사용하는 편리한 블록"
    },
    {
      "block_id": "repeat_inf",
      "block_name": "계속 반복하기",
      "relationship": "실시간 추적",
      "explanation": "마우스 위치를 지속적으로 추적하고 반응하기 위해 함께 사용되는 반복 블록"
    },
    {
      "block_id": "set_variable",
      "block_name": "[변수]를 [값]으로 정하기",
      "relationship": "좌표값 저장",
      "explanation": "현재 마우스 좌표를 변수에 저장하여 나중에 참조하거나 계산에 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "마우스를 움직여도 좌표가 변하지 않아요",
      "possible_causes": [
        "좌표 블록을 반복문 밖에서 한 번만 사용",
        "프로그램이 멈춰있거나 다른 부분에서 무한루프 발생",
        "좌표값을 변수에 저장한 후 업데이트하지 않음"
      ],
      "solutions": [
        "'계속 반복하기' 블록 안에서 매번 새로운 좌표값 가져오기",
        "프로그램의 다른 부분에서 블록이 멈춰있지 않은지 확인",
        "좌표를 변수에 저장할 때는 반복문 안에서 계속 업데이트하기"
      ]
    },
    {
      "problem": "캐릭터가 마우스와 다른 방향으로 움직여요",
      "possible_causes": ["x좌표와 y좌표를 반대로 사용", "좌표계의 방향을 잘못 이해", "다른 이동 블록과 충돌"],
      "solutions": [
        "x는 가로(왼쪽-오른쪽), y는 세로(아래-위)인지 확인",
        "마우스 좌표값을 화면에 출력해서 실제 값 확인",
        "다른 이동 관련 블록들이 동시에 실행되고 있지 않은지 점검"
      ]
    },
    {
      "problem": "특정 영역 검사가 제대로 작동하지 않아요",
      "possible_causes": ["좌표 범위 설정이 잘못됨", "조건 블록의 논리 연산자 사용 오류", "좌표계 중심점에 대한 이해 부족"],
      "solutions": [
        "원하는 영역의 최솟값과 최댓값을 정확히 계산",
        "'그리고', '또는' 블록을 올바르게 사용하여 조건 조합",
        "엔트리 화면에서 (0, 0)이 중앙이라는 점 고려하여 범위 설정"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "GPS 위치 추적",
      "explanation": "스마트폰의 GPS가 현재 위치를 실시간으로 알려주는 것처럼, 마우스 좌표 블록은 마우스의 현재 위치를 알려줍니다."
    },
    {
      "analogy": "지도에서 위치 찾기",
      "explanation": "지도에서 경도와 위도로 위치를 표시하는 것처럼, x, y 좌표로 화면에서 마우스의 정확한 위치를 표시합니다."
    },
    {
      "analogy": "터치스크린 반응",
      "explanation": "스마트폰 화면을 터치할 때 정확한 위치를 인식하는 것처럼, 마우스 포인터의 위치를 정밀하게 감지합니다."
    },
    {
      "analogy": "레이더 추적",
      "explanation": "레이더가 비행기의 위치를 계속 추적하는 것처럼, 프로그램이 마우스의 움직임을 실시간으로 추적합니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "마우스 궤적 기록",
      "description": "마우스가 지나간 경로를 저장하고 시각화하는 기능",
      "use_case": "그림 그리기 프로그램, 움직임 패턴 분석"
    },
    {
      "concept": "다중 영역 인터랙션",
      "description": "화면을 여러 영역으로 나누어 각 영역별로 다른 반응을 보이는 시스템",
      "use_case": "가상 피아노, 인터랙티브 메뉴 시스템"
    },
    {
      "concept": "좌표 기반 물리 시뮬레이션",
      "description": "마우스 위치에 따른 중력, 자기장 등의 물리적 효과 구현",
      "use_case": "파티클 시스템, 물리 시뮬레이션 게임"
    },
    {
      "concept": "제스처 인식 시스템",
      "description": "마우스 움직임 패턴을 분석하여 특정 제스처를 인식하는 기능",
      "use_case": "그림 인식 게임, 패턴 기반 잠금 해제"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "마우스 좌표를 가져와서 기본적인 위치 기반 프로그램을 만들 수 있다",
      "example": "마우스 따라가기, 좌표 표시기"
    },
    {
      "level": "중급",
      "criteria": "좌표를 활용한 영역 검사와 조건부 인터랙션을 구현할 수 있다",
      "example": "영역별 다른 반응, 거리 기반 게임"
    },
    {
      "level": "고급",
      "criteria": "복잡한 좌표 계산과 실시간 인터랙션 시스템을 설계할 수 있다",
      "example": "물리 시뮬레이션, 정교한 그리기 도구"
    }
  ]
}
