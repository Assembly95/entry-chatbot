{
  "id": "change_string_case",
  "category": "calc",
  "name": "[문자]을(를) [대문자/소문자]로 바꾸기",
  "description": "입력받은 문자열의 영문자를 대문자 또는 소문자로 변환하는 블록입니다. 영어 알파벳만 변환되며, 한글이나 숫자, 특수문자는 그대로 유지됩니다.",

  "educational_context": {
    "learning_objectives": [
      "문자열 처리와 변환 개념 이해",
      "대문자와 소문자의 구분과 활용법 학습",
      "텍스트 데이터 정규화 방법 습득",
      "문자열 조작을 통한 데이터 처리 기술 체험",
      "프로그래밍에서 문자 인코딩 원리 이해"
    ],
    "key_concepts": [
      {
        "concept": "문자열 변환(String Transformation)",
        "explanation": "문자열의 형태나 구조를 변경하는 과정으로, 텍스트 데이터를 원하는 형식으로 가공하는 기본 기술"
      },
      {
        "concept": "대소문자 정규화(Case Normalization)",
        "explanation": "텍스트 비교나 검색의 정확성을 높이기 위해 문자의 대소문자를 통일하는 데이터 처리 방법"
      },
      {
        "concept": "문자 인코딩",
        "explanation": "각 문자가 컴퓨터에서 숫자로 표현되는 방식으로, 대문자와 소문자가 서로 다른 코드값을 가짐"
      },
      {
        "concept": "텍스트 필터링",
        "explanation": "원본 텍스트에서 특정 조건에 맞는 문자만 변환하고 나머지는 보존하는 선택적 처리"
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": [
      "기본적인 문자열 개념 이해",
      "영어 대문자와 소문자 구분",
      "변수와 텍스트 블록 사용법",
      "드롭다운 메뉴 사용 경험"
    ]
  },

  "usage_examples": [
    {
      "title": "사용자 입력 정규화",
      "description": "사용자가 입력한 이름을 일정한 형식으로 변환",
      "blocks": [
        "when_run_button_click",
        "ask_and_wait('이름을 입력하세요')",
        "set_variable('원본이름', (답변))",
        "set_variable('대문자이름', change_string_case((원본이름), '대문자'))",
        "set_variable('소문자이름', change_string_case((원본이름), '소문자'))",
        "dialog('원본: ' + (원본이름))",
        "dialog('대문자: ' + (대문자이름))",
        "dialog('소문자: ' + (소문자이름))"
      ],
      "explanation": "사용자가 입력한 이름을 원본, 대문자, 소문자 버전으로 각각 변환하여 보여줍니다."
    },
    {
      "title": "비밀번호 검증 시스템",
      "description": "대소문자 구분 없이 비밀번호 확인",
      "blocks": [
        "when_run_button_click",
        "set_variable('정답', 'SecretCode')",
        "ask_and_wait('비밀번호를 입력하세요')",
        "set_variable('입력값', change_string_case((답변), '대문자'))",
        "set_variable('정답대문자', change_string_case((정답), '대문자'))",
        "if_condition((입력값) = (정답대문자))",
        "  dialog('비밀번호가 맞습니다!')",
        "else",
        "  dialog('비밀번호가 틀렸습니다.')"
      ],
      "explanation": "입력값과 정답을 모두 대문자로 변환하여 대소문자 구분 없이 비밀번호를 확인합니다."
    },
    {
      "title": "텍스트 게임 명령어",
      "description": "게임에서 대소문자 관계없이 명령어 인식",
      "blocks": [
        "when_run_button_click",
        "repeat_inf",
        "  ask_and_wait('명령어를 입력하세요 (GO, STOP, JUMP)')",
        "  set_variable('명령어', change_string_case((답변), '대문자'))",
        "  if_condition((명령어) = 'GO')",
        "    dialog('앞으로 이동합니다!')",
        "    move_direction(50)",
        "  else_if_condition((명령어) = 'STOP')",
        "    dialog('멈춥니다!')",
        "  else_if_condition((명령어) = 'JUMP')",
        "    dialog('점프!')",
        "    move_y(30)",
        "    wait_second(0.5)",
        "    move_y(-30)"
      ],
      "explanation": "사용자가 입력한 명령어를 대문자로 변환하여 일관된 방식으로 처리하는 텍스트 기반 게임입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "대문자와 소문자 중 어떤 것을 선택해야 할지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "대문자는 ABC처럼 큰 글자, 소문자는 abc처럼 작은 글자예요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "드롭다운 메뉴에서 '대문자' 또는 '소문자'를 선택하면 해당 형태로 변환돼요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "텍스트 비교나 검색할 때는 보통 대문자나 소문자로 통일해서 사용해요"
        }
      ]
    },
    {
      "situation": "한글이나 숫자는 왜 변하지 않나요?",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "대소문자 구분이 있는 것은 영어 알파벳뿐이에요. 한글이나 숫자는 대소문자가 없어요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "이 블록은 영어 A~Z, a~z만 변환하고 나머지 문자는 그대로 둬요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "예를 들어 'Hello안녕123'을 대문자로 바꾸면 'HELLO안녕123'이 돼요"
        }
      ]
    },
    {
      "situation": "변환된 문자열을 어떻게 활용해야 할지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "변환된 문자열을 변수에 저장해서 나중에 사용하거나, 바로 다른 블록에서 활용할 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "텍스트 비교, 검색, 출력 등에서 일관된 형식의 문자열을 사용할 때 유용해요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "특히 사용자 입력을 받을 때 대소문자 차이로 인한 오류를 방지할 수 있어요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "한글이나 숫자도 변환될 것으로 예상",
      "why_it_happens": "대소문자 개념이 영어에만 적용된다는 것을 모름",
      "consequence": "한글이나 숫자가 변하지 않아서 혼란 발생",
      "solution": "영어 알파벳만 변환되고 다른 문자는 그대로 유지됨을 이해",
      "teaching_moment": "각 언어와 문자 체계마다 고유한 특성이 있어요. 영어는 대소문자가 있지만 한글은 없어요."
    },
    {
      "mistake": "변환 결과를 저장하지 않고 사용",
      "why_it_happens": "블록이 새로운 문자열을 반환한다는 것을 모르고 원본이 바뀐다고 착각",
      "consequence": "변환된 결과가 제대로 활용되지 않음",
      "solution": "변환된 결과를 변수에 저장하거나 바로 다른 블록에서 사용",
      "teaching_moment": "컴퓨터에서는 원본 데이터를 보존하고 새로운 결과를 만드는 것이 안전해요."
    },
    {
      "mistake": "대소문자 변환의 목적을 이해하지 못함",
      "why_it_happens": "왜 문자를 변환해야 하는지 실용적 이유를 모름",
      "consequence": "기능은 사용하지만 효과적으로 활용하지 못함",
      "solution": "텍스트 비교, 검색, 정규화 등의 실제 용도 이해",
      "teaching_moment": "같은 단어라도 Hello와 hello는 컴퓨터에서는 다른 것으로 인식해요. 통일하면 정확한 비교가 가능해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "계산 블록 카테고리 선택",
      "instruction": "블록 팔레트에서 '계산' 카테고리를 클릭하세요.",
      "visual_hint": "초록색 계산기 모양 아이콘을 찾아보세요."
    },
    {
      "step": 2,
      "title": "문자열 변환 블록 찾기",
      "instruction": "'[문자]을(를) [대문자/소문자]로 바꾸기' 블록을 찾아서 드래그하세요.",
      "visual_hint": "문자열 관련 블록들이 모여있는 부분에서 찾을 수 있어요."
    },
    {
      "step": 3,
      "title": "변환할 문자열 입력",
      "instruction": "첫 번째 칸에 변환하고 싶은 문자열이나 변수를 입력하세요.",
      "visual_hint": "직접 텍스트를 입력하거나 다른 블록을 연결할 수 있어요."
    },
    {
      "step": 4,
      "title": "변환 타입 선택",
      "instruction": "드롭다운 메뉴에서 '대문자' 또는 '소문자' 중 선택하세요.",
      "visual_hint": "원하는 변환 결과에 따라 선택하세요."
    },
    {
      "step": 5,
      "title": "결과 활용",
      "instruction": "변환된 결과를 변수에 저장하거나 다른 블록에서 바로 사용하세요.",
      "visual_hint": "변환된 문자열은 원본과 별개의 새로운 값이에요."
    },
    {
      "step": 6,
      "title": "테스트 및 확인",
      "instruction": "프로그램을 실행해보고 영어 부분만 변환되는지 확인하세요.",
      "visual_hint": "한글, 숫자, 특수문자는 변환되지 않고 그대로 유지돼요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "combine_something",
      "relationship": "문자열 조합",
      "explanation": "변환된 문자열을 다른 문자열과 합쳐서 새로운 텍스트 생성"
    },
    {
      "block_id": "substring",
      "relationship": "문자열 추출",
      "explanation": "문자열의 일부분을 추출한 후 대소문자 변환 적용"
    },
    {
      "block_id": "replace_string",
      "relationship": "문자열 치환",
      "explanation": "특정 문자를 다른 문자로 바꾼 후 대소문자 변환"
    },
    {
      "block_id": "_if",
      "relationship": "조건부 처리",
      "explanation": "변환된 문자열을 조건으로 사용하여 다른 동작 수행"
    },
    {
      "block_id": "boolean_basic_operator",
      "relationship": "문자열 비교",
      "explanation": "대소문자를 통일한 문자열끼리 정확한 비교 수행"
    }
  ],

  "debugging_tips": [
    {
      "problem": "변환이 제대로 되지 않는 것 같아요",
      "possible_causes": [
        "영어가 아닌 문자를 변환하려고 시도",
        "이미 원하는 형태의 문자여서 변화가 없음",
        "변환 결과를 제대로 확인하지 않음"
      ],
      "solutions": [
        "영어 알파벳이 포함된 문자열로 테스트",
        "대소문자가 섞인 문자열로 변화 확인",
        "변환 전후를 모두 출력해서 비교해보기"
      ]
    },
    {
      "problem": "변환된 결과가 사라져요",
      "possible_causes": [
        "변환 결과를 변수에 저장하지 않음",
        "원본 변수를 덮어쓰지 않고 새 변수 필요",
        "블록 연결이 제대로 되지 않음"
      ],
      "solutions": ["변환 결과를 새로운 변수에 저장", "변환된 문자열을 바로 사용하거나 저장하기", "블록 연결 상태 확인 후 재시도"]
    },
    {
      "problem": "텍스트 비교가 정확하지 않아요",
      "possible_causes": ["비교하는 두 문자열의 대소문자가 다름", "공백이나 특수문자 차이", "변환을 한쪽에만 적용"],
      "solutions": ["비교하는 모든 문자열을 같은 형태로 변환", "공백 제거나 문자열 정리 추가 고려", "일관된 변환 규칙 적용"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "도서관 책 정리",
      "explanation": "도서관에서 책 제목을 일정한 형식(모두 대문자 등)으로 정리해서 찾기 쉽게 하는 것과 같습니다."
    },
    {
      "analogy": "우편번호 시스템",
      "explanation": "우편 주소를 처리할 때 대소문자 구분 없이 배송하기 위해 모든 주소를 대문자로 통일하는 것과 유사합니다."
    },
    {
      "analogy": "컴퓨터 파일명",
      "explanation": "일부 운영체제에서는 파일명의 대소문자를 구분하지 않아서 동일하게 처리하는 것과 같은 원리입니다."
    },
    {
      "analogy": "사전 검색",
      "explanation": "사전에서 단어를 찾을 때 대소문자 구분 없이 검색할 수 있도록 모든 단어를 소문자로 정리하는 것과 같습니다."
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "문자열을 대문자 또는 소문자로 올바르게 변환하고, 영어만 변환된다는 것을 이해할 수 있다"
    },
    {
      "level": "중급",
      "criteria": "대소문자 변환을 활용해서 텍스트 비교, 검색, 사용자 입력 처리 등의 실용적인 기능을 구현할 수 있다"
    },
    {
      "level": "고급",
      "criteria": "문자열 정규화를 통한 데이터 처리, 텍스트 기반 게임, 검색 시스템 등 복합적인 텍스트 처리 시스템을 설계할 수 있다"
    }
  ]
}
