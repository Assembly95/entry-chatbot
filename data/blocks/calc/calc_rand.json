{
  "id": "calc_rand",
  "category": "calc",
  "name": "[~]부터 [~]까지의 무작위 수",
  "description": "지정된 범위 내에서 무작위로 숫자를 선택하여 반환하는 블록입니다. 게임의 랜덤 요소나 시뮬레이션에서 예측할 수 없는 값이 필요할 때 사용합니다.",

  "educational_context": {
    "learning_objectives": [
      "무작위성과 확률의 기본 개념 이해",
      "프로그래밍에서 예측 불가능한 요소 활용 방법 학습",
      "게임과 시뮬레이션에서의 랜덤 요소 활용",
      "범위 지정과 경계값 처리 개념 습득",
      "확률적 사고와 통계적 개념의 기초 이해"
    ],
    "key_concepts": [
      {
        "concept": "무작위성(Randomness)",
        "explanation": "결과를 미리 예측할 수 없는 특성으로, 컴퓨터에서는 수학적 알고리즘을 통해 무작위에 가까운 값을 생성함"
      },
      {
        "concept": "범위(Range)",
        "explanation": "무작위 수가 생성될 수 있는 최솟값과 최댓값 사이의 구간으로, 포함 범위와 배타 범위의 개념 포함"
      },
      {
        "concept": "의사난수(Pseudo-random)",
        "explanation": "컴퓨터가 수학적 공식을 사용해 생성하는 무작위에 가까운 수로, 완전히 무작위는 아니지만 예측하기 어려운 특성을 가짐"
      },
      {
        "concept": "시드값(Seed)",
        "explanation": "무작위 수 생성의 시작점이 되는 값으로, 같은 시드값은 같은 무작위 수열을 생성함"
      },
      {
        "concept": "확률 분포",
        "explanation": "무작위 수가 특정 값이나 범위에 나타날 가능성의 분포로, 균등분포에서는 모든 값이 동일한 확률을 가짐"
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": [
      "Entry 기본 인터페이스 사용법",
      "숫자와 변수의 개념 이해",
      "범위와 구간의 수학적 개념",
      "변수 설정 및 사용 방법"
    ]
  },

  "usage_examples": [
    {
      "title": "주사위 굴리기",
      "description": "1부터 6까지의 무작위 수로 주사위 시뮬레이션",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "마우스를 클릭했을 때까지 기다리기",
        "주사위 변수를 (1)부터 (6)까지의 무작위 수로 정하기",
        "'주사위 결과: ' + (주사위) 말하기"
      ],
      "explanation": "사용자가 마우스를 클릭하면 1부터 6까지의 무작위 수를 생성하여 주사위 결과를 보여줍니다."
    },
    {
      "title": "랜덤 위치 이동",
      "description": "캐릭터가 무작위 위치로 순간이동",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "스페이스 키를 눌렀을 때까지 기다리기",
        "x좌표를 (-200)부터 (200)까지의 무작위 수로 정하기",
        "y좌표를 (-150)부터 (150)까지의 무작위 수로 정하기",
        "'랜덤 이동!' 말하기"
      ],
      "explanation": "스페이스바를 누르면 캐릭터가 화면 내 무작위 위치로 이동합니다."
    },
    {
      "title": "색깔 변화 효과",
      "description": "무작위로 색깔이 바뀌는 시각 효과",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  색 효과를 (0)부터 (199)까지의 무작위 수로 정하기",
        "  1초 기다리기"
      ],
      "explanation": "1초마다 무작위로 색깔이 변하는 효과를 만듭니다."
    },
    {
      "title": "랜덤 퀴즈 문제",
      "description": "무작위로 간단한 덧셈 문제 생성",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "계속 반복하기",
        "  첫번째수 변수를 (1)부터 (10)까지의 무작위 수로 정하기",
        "  두번째수 변수를 (1)부터 (10)까지의 무작위 수로 정하기",
        "  정답 변수를 (첫번째수) + (두번째수)로 정하기",
        "  (첫번째수) + ' + ' + (두번째수) + ' = ?' 묻고 기다리기",
        "  만약 (답변) = (정답) 라면",
        "    '정답입니다!' 말하기",
        "  아니라면",
        "    '틀렸습니다. 정답은 ' + (정답) + '입니다.' 말하기",
        "  2초 기다리기"
      ],
      "explanation": "무작위로 생성된 두 숫자의 덧셈 문제를 출제하고 정답을 확인하는 퀴즈 프로그램입니다."
    },
    {
      "title": "보물찾기 게임",
      "description": "무작위 위치에 숨겨진 보물 찾기",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "보물x 변수를 (-150)부터 (150)까지의 무작위 수로 정하기",
        "보물y 변수를 (-100)부터 (100)까지의 무작위 수로 정하기",
        "시도횟수 변수를 0으로 정하기",
        "계속 반복하기",
        "  마우스를 클릭했을 때까지 기다리기",
        "  시도횟수 변수를 1만큼 바꾸기",
        "  거리 변수를 ([보물]까지의 거리)로 정하기",
        "  만약 (거리) < (30) 라면",
        "    '보물을 찾았습니다! ' + (시도횟수) + '번 만에 성공!' 말하기",
        "    반복 중단하기",
        "  아니라면",
        "    만약 (거리) < (80) 라면",
        "      '뜨거워요!' 말하기",
        "    아니라면",
        "      '차가워요!' 말하기"
      ],
      "explanation": "무작위 위치에 숨겨진 보물을 거리 힌트를 통해 찾는 게임입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "무작위 수를 어떻게 만드는지 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'계산' 카테고리(초록색 계산기 모양 아이콘)를 클릭해보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'[~]부터 [~]까지의 무작위 수' 블록을 찾아보세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "첫 번째 칸에는 최솟값을, 두 번째 칸에는 최댓값을 넣으세요"
        }
      ]
    },
    {
      "situation": "원하는 범위의 무작위 수가 나오지 않아요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "첫 번째 숫자가 최솟값, 두 번째 숫자가 최댓값이에요. 순서를 확인해보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "범위에 포함하고 싶은 가장 작은 수와 가장 큰 수를 정확히 입력하세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "최솟값과 최댓값 모두 결과에 포함될 수 있어요"
        }
      ]
    },
    {
      "situation": "무작위 수를 게임에 어떻게 활용하나요?",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "주사위, 카드 뽑기, 적의 등장 위치 등 예측할 수 없는 요소를 만들 때 사용해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "무작위 수를 변수에 저장한 후 조건 블록으로 다른 동작을 실행할 수 있어요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "위치, 색깔, 크기, 속도 등 다양한 속성에 무작위 값을 적용해보세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "범위를 잘못 이해해서 원하지 않는 값이 나옴",
      "why_it_happens": "최솟값과 최댓값이 모두 포함된다는 것을 모르거나, 범위 순서를 바꿔서 입력",
      "consequence": "예상보다 큰 값이나 작은 값이 나오거나, 의도한 범위와 다른 결과",
      "solution": "범위를 명확히 정하고, 첫 번째 칸에는 작은 수, 두 번째 칸에는 큰 수를 입력",
      "teaching_moment": "무작위 수는 양 끝값을 포함해요. 1부터 3까지라면 1, 2, 3이 모두 나올 수 있어요."
    },
    {
      "mistake": "무작위 수를 한 번만 생성하고 계속 같은 값 사용",
      "why_it_happens": "무작위 수가 매번 다른 값을 생성한다는 것을 이해하지 못함",
      "consequence": "항상 같은 결과가 나와서 무작위의 의미가 없어짐",
      "solution": "새로운 무작위 값이 필요할 때마다 무작위 수 블록을 다시 사용",
      "teaching_moment": "무작위 수는 사용할 때마다 새로운 값을 만들어요. 주사위를 굴릴 때마다 다른 숫자가 나오는 것과 같아요."
    },
    {
      "mistake": "소수점이 있는 무작위 수를 정수로 착각",
      "why_it_happens": "소수점이 포함된 범위에서 무작위 수를 생성할 때 결과의 형태를 예상하지 못함",
      "consequence": "소수점 결과에 대한 혼란이나 계산 오류",
      "solution": "정수만 필요하면 정수 범위를 사용하고, 소수점 결과는 반올림 블록으로 처리",
      "teaching_moment": "1.5부터 3.7까지의 무작위 수는 소수점이 있는 수가 나올 수 있어요. 정수만 원하면 1부터 3까지로 설정하세요."
    },
    {
      "mistake": "무작위성을 확률로 잘못 이해",
      "why_it_happens": "무작위 수가 균등하게 분포된다는 것과 매번 다른 결과의 차이를 혼동",
      "consequence": "특정 숫자가 더 자주 나올 것이라는 잘못된 기대",
      "solution": "무작위는 예측할 수 없다는 의미이고, 장기적으로는 모든 값이 비슷한 빈도로 나온다는 것을 이해",
      "teaching_moment": "동전 던지기에서 앞면이 3번 나왔다고 다음에 뒷면이 더 잘 나오는 건 아니에요. 매번 50%씩이에요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "계산 블록 찾기",
      "instruction": "블록 팔레트에서 '계산' 카테고리(초록색 계산기 모양)를 클릭하세요.",
      "visual_hint": "초록색 아이콘이고 계산기나 숫자 모양을 하고 있어요."
    },
    {
      "step": 2,
      "title": "무작위 수 블록 선택",
      "instruction": "'[~]부터 [~]까지의 무작위 수' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "둥근 모양의 블록으로 '부터'와 '까지의 무작위 수'라는 텍스트가 보여요."
    },
    {
      "step": 3,
      "title": "최솟값 설정",
      "instruction": "첫 번째 빈 칸에 원하는 최솟값을 넣으세요.",
      "visual_hint": "가장 작은 값으로 나올 수 있는 숫자를 입력하세요."
    },
    {
      "step": 4,
      "title": "최댓값 설정",
      "instruction": "두 번째 빈 칸에 원하는 최댓값을 넣으세요.",
      "visual_hint": "가장 큰 값으로 나올 수 있는 숫자를 입력하세요. 최솟값보다 큰 수여야 해요."
    },
    {
      "step": 5,
      "title": "무작위 수 활용",
      "instruction": "완성된 무작위 수 블록을 변수에 저장하거나 다른 블록의 입력으로 사용하세요.",
      "visual_hint": "둥근 모양의 무작위 수 블록은 숫자가 들어갈 자리에 넣을 수 있어요."
    },
    {
      "step": 6,
      "title": "테스트 및 확인",
      "instruction": "프로그램을 여러 번 실행해서 다양한 무작위 값이 나오는지 확인하세요.",
      "visual_hint": "매번 다른 결과가 나와야 무작위가 제대로 작동하는 거예요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "set_variable",
      "block_name": "[변수]를 [값]으로 정하기",
      "relationship": "무작위 값 저장",
      "explanation": "생성된 무작위 수를 변수에 저장하여 여러 곳에서 같은 값을 사용할 수 있게 함"
    },
    {
      "block_id": "boolean_basic_operator",
      "block_name": "[~] [비교연산자] [~]",
      "relationship": "무작위 값 조건 판단",
      "explanation": "무작위 수를 특정 값과 비교하여 조건문에서 분기 처리에 활용"
    },
    {
      "block_id": "_if",
      "block_name": "만약 ~라면",
      "relationship": "무작위 기반 조건 실행",
      "explanation": "무작위 수의 값에 따라 다른 동작을 수행하는 조건부 로직 구현"
    },
    {
      "block_id": "locate_xy",
      "block_name": "x: [x값], y: [y값] 위치로 이동하기",
      "relationship": "무작위 위치 이동",
      "explanation": "무작위로 생성된 좌표값을 사용하여 예측할 수 없는 위치로 이동"
    },
    {
      "block_id": "change_effect_amount",
      "block_name": "[색/밝기/투명도] 효과를 [값]으로 정하기",
      "relationship": "무작위 시각 효과",
      "explanation": "무작위 수를 사용하여 색상, 밝기 등의 시각적 효과를 랜덤하게 변경"
    },
    {
      "block_id": "calc_operation",
      "block_name": "[~]의 [반올림/버림/올림] 값",
      "relationship": "무작위 수 가공",
      "explanation": "소수점이 포함된 무작위 수를 정수로 변환하거나 원하는 형태로 가공"
    },
    {
      "block_id": "repeat_basic",
      "block_name": "[횟수]번 반복하기",
      "relationship": "반복적 무작위 생성",
      "explanation": "여러 번의 무작위 값을 생성하여 패턴이나 통계적 결과 관찰"
    }
  ],

  "debugging_tips": [
    {
      "problem": "항상 같은 숫자가 나와요",
      "possible_causes": [
        "무작위 수 블록을 한 번만 사용하고 결과를 계속 재사용",
        "범위가 너무 좁아서 선택할 수 있는 값이 제한적",
        "프로그램이 너무 빨리 실행되어 같은 시간에 무작위 수 생성"
      ],
      "solutions": [
        "새로운 무작위 값이 필요할 때마다 무작위 수 블록을 다시 사용하기",
        "무작위 수 범위를 더 넓게 설정하기",
        "무작위 수 생성 사이에 약간의 대기 시간 추가하기"
      ]
    },
    {
      "problem": "원하는 범위 밖의 숫자가 나와요",
      "possible_causes": ["최솟값과 최댓값을 반대로 입력", "범위 계산을 잘못함", "다른 계산과 혼합되어 범위가 변경됨"],
      "solutions": [
        "첫 번째 칸에는 작은 수, 두 번째 칸에는 큰 수를 입력하기",
        "원하는 범위를 다시 확인하고 정확한 최솟값, 최댓값 설정",
        "무작위 수 블록의 결과를 직접 확인하여 범위 검증"
      ]
    },
    {
      "problem": "소수점이 있는 숫자가 나와요",
      "possible_causes": ["범위에 소수점이 포함된 숫자 사용", "정수 범위가 아닌 실수 범위로 설정"],
      "solutions": [
        "정수만 원한다면 최솟값과 최댓값을 모두 정수로 설정",
        "소수점 결과를 '반올림 값', '버림 값', '올림 값' 블록으로 정수 변환",
        "1부터 10까지처럼 명확한 정수 범위 사용"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "주사위 굴리기",
      "explanation": "주사위를 굴리면 1부터 6까지 중 하나가 나오는 것처럼, 지정한 범위에서 무작위로 하나의 값이 선택됩니다."
    },
    {
      "analogy": "복권 번호 추첨",
      "explanation": "복권 추첨에서 공을 무작위로 뽑는 것처럼, 컴퓨터도 범위 내에서 무작위로 숫자를 선택합니다."
    },
    {
      "analogy": "날씨 변화",
      "explanation": "내일 기온이 예측 범위 내에서 변할 수 있는 것처럼, 무작위 수도 정해진 범위 안에서 예측할 수 없게 변합니다."
    },
    {
      "analogy": "게임의 아이템 드롭",
      "explanation": "게임에서 몬스터를 잡았을 때 무작위로 아이템이 나오는 것처럼, 프로그램에서도 무작위 요소를 만들 수 있습니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "가중치 있는 무작위",
      "description": "특정 값이 다른 값보다 더 자주 나오도록 확률을 조정하는 고급 무작위 시스템",
      "use_case": "게임에서 희귀 아이템 확률 조정, 현실적인 시뮬레이션"
    },
    {
      "concept": "무작위 시퀀스 생성",
      "description": "여러 개의 무작위 수를 조합하여 복잡한 패턴이나 시퀀스 생성",
      "use_case": "절차적 지형 생성, 무작위 음악 생성"
    },
    {
      "concept": "통계적 분석 도구",
      "description": "많은 무작위 수를 생성하여 평균, 분포 등의 통계적 특성 분석",
      "use_case": "확률 실험, 데이터 과학 입문"
    },
    {
      "concept": "시드 기반 무작위",
      "description": "특정 시드값을 사용하여 재현 가능한 무작위 수열 생성",
      "use_case": "테스트용 일관된 무작위 데이터, 절차적 콘텐츠 생성"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "기본적인 무작위 수 생성과 범위 설정을 할 수 있다",
      "example": "주사위 게임, 간단한 무작위 선택"
    },
    {
      "level": "중급",
      "criteria": "무작위 수를 조건문과 결합하여 다양한 게임 로직을 구현할 수 있다",
      "example": "확률 기반 이벤트, 무작위 퀴즈 생성기"
    },
    {
      "level": "고급",
      "criteria": "복잡한 무작위 시스템을 설계하고 확률적 특성을 활용할 수 있다",
      "example": "절차적 콘텐츠 생성, 시뮬레이션 프로그램"
    }
  ]
}
