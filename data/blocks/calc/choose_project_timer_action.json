{
  "id": "choose_project_timer_action",
  "category": "계산",
  "name": "타이머 [시작/정지/초기화] 하기",
  "description": "화면에 있는 타이머를 시작하거나 멈추거나 초기화할 수 있는 블록입니다. 작품에서 시간을 재거나 시간 기반 게임을 만들 때 사용합니다.",

  "educational_context": {
    "learning_objectives": [
      "시간 개념을 활용한 프로그래밍 능력 향상",
      "타이머 기능을 활용한 게임 제작 능력",
      "시간 측정과 관리에 대한 이해",
      "순차적인 시간 제어 로직 구현 능력"
    ],
    "key_concepts": [
      {
        "concept": "타이머 제어",
        "explanation": "프로그램에서 시간을 측정하고 제어하는 방법을 학습합니다. 시작, 정지, 초기화의 3가지 상태로 타이머를 조작할 수 있습니다."
      },
      {
        "concept": "상태 관리",
        "explanation": "타이머의 시작/정지/초기화 상태를 적절히 관리하여 원하는 시점에 시간 측정을 제어하는 방법을 이해합니다."
      },
      {
        "concept": "시간 기반 프로그래밍",
        "explanation": "시간의 흐름에 따라 변화하는 프로그램을 만드는 기법을 학습합니다."
      }
    ],
    "difficulty_level": "초급",
    "prerequisites": ["기본적인 블록 조립 방법", "시작 블록의 사용법", "시간의 개념에 대한 이해"]
  },

  "usage_examples": [
    {
      "scenario": "반응속도 게임 만들기",
      "blocks": "시작 버튼을 클릭했을 때 → 타이머 초기화 하기 → 타이머 시작 하기 → 스페이스 키를 눌렀을 때 → 타이머 정지 하기 → [타이머 값] 안내하기",
      "explanation": "게임 시작 시 타이머를 초기화하고 시작한 후, 플레이어가 반응했을 때 타이머를 멈춰서 반응속도를 측정하는 게임을 만들 수 있습니다."
    },
    {
      "scenario": "요리 타이머 만들기",
      "blocks": "요리 시작 버튼을 클릭했을 때 → 타이머 초기화 하기 → 타이머 시작 하기 → 만약 [타이머 값] > 180 이라면 → 타이머 정지 하기 → '요리 완성!' 안내하기",
      "explanation": "요리 시간(3분=180초)을 측정하여 요리가 완성되었을 때 알림을 주는 타이머를 만들 수 있습니다."
    },
    {
      "scenario": "운동 시간 측정기",
      "blocks": "운동 시작 버튼을 클릭했을 때 → 타이머 시작 하기 → 일시정지 버튼을 클릭했을 때 → 타이머 정지 하기 → 재시작 버튼을 클릭했을 때 → 타이머 시작 하기",
      "explanation": "운동 중간에 잠시 쉴 때 타이머를 멈추고 다시 운동할 때 재시작할 수 있는 운동 시간 측정기를 만들 수 있습니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "타이머가 작동하지 않아요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "계산 블록 카테고리에서 타이머 관련 블록들을 찾아보세요."
        },
        {
          "step": 2,
          "hint_type": "concept",
          "content": "타이머를 사용하려면 먼저 '타이머 시작 하기'를 실행해야 해요."
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "'타이머 [시작/정지/초기화] 하기' 블록에서 '시작'을 선택해보세요."
        }
      ]
    },
    {
      "situation": "타이머 값이 이상해요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "타이머는 누적된 시간을 기억해요. 새로 시작하려면 초기화가 필요해요."
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'타이머 초기화 하기'를 먼저 실행한 후 '타이머 시작 하기'를 해보세요."
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "타이머를 시작하지 않고 타이머 값을 확인하려고 함",
      "solution": "'타이머 시작 하기'를 먼저 실행한 후 '타이머 값' 블록을 사용하세요",
      "teaching_moment": "스톱워치를 사용할 때도 시작 버튼을 먼저 눌러야 시간이 흘러가는 것처럼, 프로그램에서도 타이머를 먼저 시작해야 해요."
    },
    {
      "mistake": "타이머를 초기화하지 않아서 이전 시간이 계속 누적됨",
      "solution": "새로운 측정을 시작하기 전에 '타이머 초기화 하기'를 사용하세요",
      "teaching_moment": "새로운 경기를 시작할 때 스톱워치를 0으로 맞추는 것처럼, 프로그램에서도 새로 시작할 때는 타이머를 초기화해야 해요."
    },
    {
      "mistake": "타이머 정지 후 다시 시작할 때 초기화해버림",
      "solution": "일시정지 후 재시작할 때는 '타이머 시작 하기'만 사용하고, 초기화는 하지 마세요",
      "teaching_moment": "운동할 때 잠시 쉬는 것과 새로 시작하는 것은 다른 상황이에요. 상황에 맞게 정지와 초기화를 구분해서 사용해야 해요."
    }
  ],

  "real_world_connections": [
    {
      "analogy": "스톱워치",
      "explanation": "실제 스톱워치와 같은 방식으로 작동합니다. 시작 버튼으로 시간 측정을 시작하고, 정지 버튼으로 멈추고, 리셋 버튼으로 0으로 돌아갑니다."
    },
    {
      "analogy": "요리 타이머",
      "explanation": "부엌에서 사용하는 요리 타이머처럼 정해진 시간을 측정하거나 경과 시간을 확인할 수 있습니다."
    },
    {
      "analogy": "체육 시간의 스톱워치",
      "explanation": "체육 수업에서 달리기 시간을 재는 것처럼, 게임이나 활동의 시간을 측정할 수 있습니다."
    }
  ],

  "related_blocks": [
    {
      "block_name": "타이머 값",
      "relationship": "현재 타이머 시간을 확인할 때 함께 사용"
    },
    {
      "block_name": "타이머 [보이기/숨기기]",
      "relationship": "타이머 화면 표시 여부를 제어할 때 함께 사용"
    },
    {
      "block_name": "만약 ~ 이라면",
      "relationship": "특정 시간이 되었을 때 동작을 실행하는 조건 블록으로 함께 사용"
    },
    {
      "block_name": "~ 초 기다리기",
      "relationship": "시간 관련 블록으로 시간 지연과 함께 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "타이머가 화면에 보이지 않아요",
      "solutions": ["'타이머 보이기'를 실행해보세요", "작품을 실행한 후 타이머 블록이 포함된 스크립트를 실행해보세요"]
    },
    {
      "problem": "타이머가 계속 0으로 표시돼요",
      "solutions": ["'타이머 시작 하기'를 실행했는지 확인해보세요", "시작 블록과 연결되어 있는지 확인해보세요"]
    },
    {
      "problem": "타이머가 내가 원하는 시간과 달라요",
      "solutions": [
        "타이머 블록을 실행하기 전에 '타이머 초기화 하기'를 해보세요",
        "이전에 실행된 다른 스크립트에서 타이머가 이미 시작되었는지 확인해보세요"
      ]
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "타이머 시작/정지/초기화 기능을 각각 사용할 수 있다"
    },
    {
      "level": "중급",
      "criteria": "타이머 값을 활용하여 조건 블록과 함께 시간 기반 프로그램을 만들 수 있다"
    },
    {
      "level": "고급",
      "criteria": "복잡한 게임이나 애플리케이션에서 타이머를 적절히 제어하여 사용자 경험을 향상시킬 수 있다"
    }
  ]
}
