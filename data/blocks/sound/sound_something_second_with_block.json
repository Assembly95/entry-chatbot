{
  "id": "sound_something_second_with_block",
  "category": "sound",
  "name": "[초] 동안 [소리] 재생하고 기다리기",
  "description": "지정한 시간 동안 소리를 재생하고, 그 시간이 끝날 때까지 다음 블록 실행을 기다리는 블록입니다. 소리 파일의 처음부터 지정한 초만큼 재생한 후 자동으로 멈추며, 재생이 완전히 끝나야 다음 코드가 실행됩니다.",

  "educational_context": {
    "learning_objectives": [
      "동기적 시간 제한 재생 이해",
      "순차적 사운드 제어 능력 개발",
      "정확한 타이밍 동기화 학습",
      "효과적인 소리 시퀀스 구성",
      "사운드와 동작의 정밀한 조율"
    ],
    "key_concepts": [
      {
        "concept": "동기적 시간 제한 재생",
        "explanation": "지정한 시간 동안 소리를 재생하고, 그 시간이 끝날 때까지 다음 코드 실행을 차단하는 순차적 실행 방식"
      },
      {
        "concept": "블로킹 실행(Blocking Execution)",
        "explanation": "소리 재생이 완료될 때까지 프로그램의 다음 단계를 대기시키는 실행 방식"
      },
      {
        "concept": "자동 종료와 대기",
        "explanation": "지정한 시간이 지나면 소리가 자동으로 멈추고, 그 시점에 다음 코드가 실행되는 메커니즘"
      },
      {
        "concept": "시퀀스 동기화",
        "explanation": "소리와 다른 동작들이 정확한 순서와 타이밍으로 연결되는 동기화 기법"
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": ["소리 재생 블록 기본 이해", "동기/비동기 실행의 차이점", "초 단위 시간 측정", "순차 실행 개념"]
  },

  "usage_examples": [
    {
      "title": "순차적 효과음 시퀀스",
      "description": "여러 효과음을 정확한 타이밍으로 순서대로 재생",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "'준비!' 말하기",
        "0.5초 동안 [준비음] 재생하고 기다리기",
        "'시작!' 말하기",
        "1초 동안 [시작음] 재생하고 기다리기",
        "'출발!' 말하기",
        "0.3초 동안 [출발음] 재생하고 기다리기",
        "10만큼 움직이기 시작하기"
      ],
      "explanation": "각 효과음이 정확한 길이만큼 재생되고 끝난 후 다음 동작이 실행되는 순차 시스템입니다."
    },
    {
      "title": "음성 안내 시스템",
      "description": "단계별 음성 안내와 동작 동기화",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "3초 동안 [안내음성1] 재생하고 기다리기",
        "화면을 '단계1'로 바꾸기",
        "2초 기다리기",
        "4초 동안 [안내음성2] 재생하고 기다리기",
        "화면을 '단계2'로 바꾸기",
        "2초 기다리기",
        "2.5초 동안 [안내음성3] 재생하고 기다리기",
        "화면을 '완료'로 바꾸기"
      ],
      "explanation": "각 음성 안내가 끝난 후 화면이 전환되는 동기화된 튜토리얼 시스템입니다."
    },
    {
      "title": "리듬 게임 노트",
      "description": "정확한 박자로 소리 재생",
      "blocks": [
        "신호 '음악시작'을 받았을 때",
        "4번 반복하기",
        "  0.5초 동안 [비트1] 재생하고 기다리기",
        "  색깔 효과를 25만큼 바꾸기",
        "  0.5초 동안 [비트2] 재생하고 기다리기",
        "  색깔 효과를 -25만큼 바꾸기",
        "2초 동안 [피니시] 재생하고 기다리기",
        "'완벽해요!' 말하기"
      ],
      "explanation": "각 비트가 정확히 0.5초씩 재생되며 시각 효과와 완벽히 동기화되는 리듬 패턴입니다."
    },
    {
      "title": "카운트다운 시스템",
      "description": "숫자 카운트와 소리 동기화",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "카운트 변수를 5로 정하기",
        "5번 반복하기",
        "  (카운트) 말하기",
        "  만약 (카운트) > 1 라면",
        "    0.8초 동안 [틱소리] 재생하고 기다리기",
        "  아니라면",
        "    2초 동안 [종료음] 재생하고 기다리기",
        "  카운트 변수를 -1만큼 바꾸기",
        "'시작!' 말하기"
      ],
      "explanation": "각 숫자마다 소리가 재생되고 끝난 후 다음 숫자로 넘어가는 정확한 카운트다운입니다."
    },
    {
      "title": "스토리 나레이션",
      "description": "배경 변경과 나레이션 동기화",
      "blocks": [
        "시작 버튼을 클릭했을 때",
        "배경을 '숲'으로 바꾸기",
        "5초 동안 [숲나레이션] 재생하고 기다리기",
        "배경을 '성'으로 바꾸기",
        "4초 동안 [성나레이션] 재생하고 기다리기",
        "배경을 '동굴'로 바꾸기",
        "6초 동안 [동굴나레이션] 재생하고 기다리기",
        "배경을 '엔딩'으로 바꾸기",
        "'이야기 끝' 말하기"
      ],
      "explanation": "각 장면의 나레이션이 끝난 후 다음 장면으로 전환되는 스토리텔링 시스템입니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "다음 코드가 바로 실행돼요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "이 블록은 '기다리기'가 포함되어 있어서 재생이 끝날 때까지 기다려야 해요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'재생하고 기다리기' 버전을 사용하고 있는지 확인하세요. '재생하기'와는 다른 블록이에요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "블록 이름에 '기다리기'가 포함되어 있는지 확인해보세요"
        }
      ]
    },
    {
      "situation": "소리가 끝까지 재생되지 않아요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "설정한 시간이 너무 짧지 않은지 확인하세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "소리 파일의 실제 길이를 확인하고, 그보다 작은 값을 설정했는지 확인하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "원하는 부분만 재생하려면 이 블록이 맞지만, 전체를 들으려면 시간을 늘리세요"
        }
      ]
    },
    {
      "situation": "타이밍이 엇갈려요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "이 블록은 정확히 지정한 시간만큼 기다려요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "소수점을 사용해서 더 정밀하게 시간을 조절해보세요 (예: 1.5초, 0.3초)"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "다른 기다리기 블록과 시간을 맞춰서 전체 타이밍을 조절하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "비동기 재생 블록과 혼동",
      "why_it_happens": "'재생하기'와 '재생하고 기다리기'의 차이를 모름",
      "consequence": "의도한 순차 실행이 되지 않고 동시 실행됨",
      "solution": "블록 이름에 '기다리기'가 포함되어 있는지 확인",
      "teaching_moment": "음악을 끝까지 듣고 박수 치는 것과 음악을 틀어놓고 다른 일 하는 것의 차이예요."
    },
    {
      "mistake": "파일 길이보다 긴 시간 설정",
      "why_it_happens": "소리 파일의 실제 길이를 모르고 임의로 설정",
      "consequence": "파일이 끝난 후에도 불필요하게 대기",
      "solution": "소리 파일 길이를 확인하고 적절한 시간 설정",
      "teaching_moment": "3초짜리 소리에 10초를 설정하면 7초는 조용히 기다리게 돼요."
    },
    {
      "mistake": "반복문에서 누적 지연 발생",
      "why_it_happens": "각 반복마다 기다리는 시간이 누적됨을 고려하지 않음",
      "consequence": "전체 실행 시간이 예상보다 훨씬 길어짐",
      "solution": "반복 횟수와 각 대기 시간을 곱해서 전체 시간 계산",
      "teaching_moment": "10번 반복에 각각 2초씩 기다리면 총 20초가 걸려요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "소리 파일 확인",
      "instruction": "사용할 소리 파일이 업로드되어 있고 길이를 확인하세요.",
      "visual_hint": "소리 탭에서 파일 정보를 볼 수 있어요."
    },
    {
      "step": 2,
      "title": "소리 카테고리 열기",
      "instruction": "블록 팔레트에서 '소리' 카테고리를 클릭하세요.",
      "visual_hint": "분홍색 스피커 아이콘을 찾으세요."
    },
    {
      "step": 3,
      "title": "동기 재생 블록 선택",
      "instruction": "'[초] 동안 [소리] 재생하고 기다리기' 블록을 드래그하세요.",
      "visual_hint": "'기다리기'가 포함된 버전을 선택하세요."
    },
    {
      "step": 4,
      "title": "재생 시간 설정",
      "instruction": "첫 번째 칸에 재생할 시간을 초 단위로 입력하세요.",
      "visual_hint": "0.5, 1, 2.5 같은 숫자를 입력할 수 있어요."
    },
    {
      "step": 5,
      "title": "소리 파일 선택",
      "instruction": "두 번째 드롭다운에서 재생할 소리를 선택하세요.",
      "visual_hint": "업로드한 소리 목록에서 선택해요."
    },
    {
      "step": 6,
      "title": "순차 블록 연결",
      "instruction": "이 블록 아래에 다음에 실행할 블록을 연결하세요.",
      "visual_hint": "소리가 끝난 후 실행될 블록들을 차례로 연결해요."
    },
    {
      "step": 7,
      "title": "테스트 및 조정",
      "instruction": "프로그램을 실행하여 소리가 끝난 후 다음 동작이 실행되는지 확인하세요.",
      "visual_hint": "타이밍이 맞지 않으면 시간을 조절해보세요."
    }
  ],

  "related_blocks": [
    {
      "block_id": "sound_something_second_wait_with_block",
      "block_name": "[초] 동안 [소리] 재생하기",
      "relationship": "비동기 버전",
      "explanation": "같은 시간 제한 재생이지만 기다리지 않는 비동기 실행 방식"
    },
    {
      "block_id": "play_sound_and_wait",
      "block_name": "[소리] 재생하고 기다리기",
      "relationship": "전체 재생",
      "explanation": "소리 파일 전체를 재생하고 기다리는 기본 동기 재생"
    },
    {
      "block_id": "sound_from_to_and_wait",
      "block_name": "[소리]를 [시작]초부터 [끝]초까지 재생하고 기다리기",
      "relationship": "구간 재생",
      "explanation": "더 정밀한 구간 지정이 가능한 동기 재생"
    },
    {
      "block_id": "wait_second",
      "block_name": "[초] 기다리기",
      "relationship": "추가 대기",
      "explanation": "소리 재생 후 추가 대기가 필요할 때 사용"
    },
    {
      "block_id": "repeat_basic",
      "block_name": "[횟수]번 반복하기",
      "relationship": "반복 재생",
      "explanation": "같은 패턴을 여러 번 반복할 때 함께 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "프로그램이 너무 오래 멈춰있어요",
      "possible_causes": ["재생 시간을 너무 길게 설정", "파일 길이보다 긴 시간 설정", "여러 기다리기가 누적됨"],
      "solutions": ["재생 시간을 짧게 조정", "파일 실제 길이에 맞춰 설정", "전체 대기 시간 계산 후 조정"]
    },
    {
      "problem": "소리와 동작이 맞지 않아요",
      "possible_causes": ["재생 시간과 실제 필요 시간 불일치", "다른 블록의 실행 시간 고려 안 함", "시간 계산 오류"],
      "solutions": ["각 동작의 시간을 정확히 측정", "소수점을 사용한 미세 조정", "전체 시퀀스를 다시 설계"]
    },
    {
      "problem": "반복이 너무 느려요",
      "possible_causes": ["각 반복마다 긴 대기 시간", "불필요한 기다리기 중복", "너무 긴 소리 재생"],
      "solutions": ["필요한 최소 시간만 재생", "비동기 재생 고려", "반복 구조 최적화"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "프레젠테이션 슬라이드쇼",
      "explanation": "각 슬라이드의 나레이션이 끝나면 다음 슬라이드로 넘어가는 자동 프레젠테이션과 같습니다."
    },
    {
      "analogy": "신호등 시스템",
      "explanation": "각 신호가 정해진 시간 동안 유지되고 순서대로 바뀌는 것과 같은 순차 시스템입니다."
    },
    {
      "analogy": "요리 타이머",
      "explanation": "각 요리 단계마다 정해진 시간을 기다린 후 다음 단계로 넘어가는 것과 같습니다."
    },
    {
      "analogy": "운동 인터벌 타이머",
      "explanation": "각 운동을 정해진 시간 동안 하고 다음 운동으로 넘어가는 순차적 타이머와 같습니다."
    }
  ],
  "extensions_and_variations": [
    {
      "concept": "인터랙티브 튜토리얼",
      "description": "각 단계의 설명을 듣고 난 후 다음 단계로 진행하는 학습 시스템",
      "use_case": "음성 안내와 화면 전환이 완벽히 동기화된 교육 콘텐츠"
    },
    {
      "concept": "음악 시퀀서",
      "description": "여러 음원을 정확한 타이밍으로 순차 재생하여 음악 생성",
      "use_case": "각 악기 파트를 순서대로 쌓아가는 음악 제작 도구"
    },
    {
      "concept": "대화형 스토리",
      "description": "각 대사가 끝난 후 자동으로 다음 장면으로 전환되는 이야기",
      "use_case": "음성 나레이션과 애니메이션이 동기화된 동화책"
    },
    {
      "concept": "정밀 타이밍 게임",
      "description": "각 동작이 정확한 시간에 실행되어야 하는 리듬 게임",
      "use_case": "음악과 완벽히 동기화된 댄스 게임이나 리듬 액션"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "지정한 시간 동안 소리를 재생하고 기다린 후 다음 동작을 실행할 수 있다",
      "example": "효과음 재생 후 캐릭터 이동"
    },
    {
      "level": "중급",
      "criteria": "여러 소리와 동작을 순차적으로 정확한 타이밍에 실행할 수 있다",
      "example": "단계별 음성 안내가 있는 튜토리얼 시스템"
    },
    {
      "level": "고급",
      "criteria": "복잡한 시퀀스와 정밀한 동기화가 필요한 시스템을 설계할 수 있다",
      "example": "음성, 애니메이션, 효과가 완벽히 동기화된 스토리텔링 작품"
    }
  ]
}
