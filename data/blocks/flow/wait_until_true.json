{
  "id": "wait_until_true",
  "category": "flow",
  "name": "조건이 참이 될 때까지 기다리기",
  "description": "지정한 조건이 참(true)이 될 때까지 프로그램 실행을 일시 중지하는 블록입니다. 조건이 거짓인 동안은 계속 기다리며, 참이 되는 순간 다음 블록으로 진행합니다. 이벤트 대기나 상태 변화 감지에 사용합니다.",

  "educational_context": {
    "learning_objectives": [
      "동기적 대기와 비동기적 실행의 개념 이해",
      "조건 기반 동기화 방법 학습",
      "이벤트 대기와 상태 감시 패턴 익히기",
      "프로그램 흐름의 일시 정지와 재개 이해",
      "타이밍 제어와 동기화 기법 습득"
    ],
    "key_concepts": [
      {
        "concept": "조건 대기",
        "explanation": "특정 조건이 만족될 때까지 프로그램의 다음 단계 실행을 보류하는 동기화 방식입니다."
      },
      {
        "concept": "블로킹 대기",
        "explanation": "조건이 참이 될 때까지 현재 스크립트의 실행을 중단하고 기다리는 방식입니다."
      },
      {
        "concept": "상태 감시",
        "explanation": "변수나 센서 값의 변화를 지속적으로 확인하여 원하는 상태가 되기를 기다립니다."
      },
      {
        "concept": "이벤트 동기화",
        "explanation": "다른 오브젝트나 사용자 입력 등의 외부 이벤트와 동기를 맞추는 기법입니다."
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": ["조건 블록 사용 경험", "변수와 센서 활용 능력", "프로그램 흐름 이해", "기다리기 블록과의 차이 인식"]
  },

  "usage_examples": [
    {
      "title": "시작 신호 대기",
      "description": "스페이스바를 누를 때까지 대기",
      "blocks": [
        "when_run_button_click",
        "speak_something('스페이스바를 누르면 시작합니다')",
        "set_text('준비...')",
        "wait_until_true(<key_pressed('space')>)",
        "set_text('시작!')",
        "// 게임 시작 로직",
        "repeat_basic(10)",
        "  move_direction(20)",
        "  wait_second(0.1)"
      ],
      "explanation": "스페이스바를 누를 때까지 기다렸다가 게임을 시작합니다."
    },
    {
      "title": "목표 도달 대기",
      "description": "특정 위치에 도달할 때까지 대기",
      "blocks": [
        "when_run_button_click",
        "speak_something('빨간 지점에 도달하면 다음 단계!')",
        "// 다른 스크립트에서 캐릭터 이동",
        "wait_until_true(<is_touched('목표지점')>)",
        "speak_something('도착했어요!')",
        "set_effect('brightness', 50)",
        "wait_second(1)",
        "broadcast_message('다음레벨')"
      ],
      "explanation": "캐릭터가 목표 지점에 닿을 때까지 기다린 후 다음 동작을 실행합니다."
    },
    {
      "title": "카운트다운 완료 대기",
      "description": "변수가 0이 될 때까지 대기",
      "blocks": [
        "when_run_button_click",
        "set_variable('카운트', 10)",
        "broadcast_message('카운트시작')",
        "wait_until_true(<get_variable('카운트') = 0>)",
        "speak_something('카운트다운 완료!')",
        "set_text('시작!')",
        "",
        "when_message_cast('카운트시작')",
        "repeat_basic(10)",
        "  set_text(<get_variable('카운트')>)",
        "  wait_second(1)",
        "  change_variable('카운트', -1)"
      ],
      "explanation": "다른 스크립트에서 카운트다운이 완료될 때까지 기다립니다."
    },
    {
      "title": "동시 작업 동기화",
      "description": "여러 작업이 모두 완료될 때까지 대기",
      "blocks": [
        "when_run_button_click",
        "set_variable('작업1완료', 0)",
        "set_variable('작업2완료', 0)",
        "broadcast_message('작업시작')",
        "wait_until_true(<get_variable('작업1완료') = 1> and <get_variable('작업2완료') = 1>)",
        "speak_something('모든 작업이 완료되었습니다!')",
        "",
        "when_message_cast('작업시작')",
        "// 작업 1",
        "wait_second(2)",
        "set_variable('작업1완료', 1)",
        "speak_something('작업 1 완료')",
        "",
        "when_message_cast('작업시작')",
        "// 작업 2",
        "wait_second(3)",
        "set_variable('작업2완료', 1)",
        "speak_something('작업 2 완료')"
      ],
      "explanation": "여러 작업이 모두 완료될 때까지 기다린 후 진행합니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "특정 조건이 될 때까지 기다리고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'흐름' 카테고리에서 대기 관련 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'조건이 참이 될 때까지 기다리기' 블록을 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "조건이 거짓인 동안은 기다리고, 참이 되면 다음으로 진행해요"
        }
      ]
    },
    {
      "situation": "사용자 입력을 기다리고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "키 입력이나 마우스 클릭 조건을 사용할 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'감지' 카테고리의 입력 감지 블록을 조건으로 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "wait_until_true(<key_pressed('키')>) 형태로 구성하세요"
        }
      ]
    },
    {
      "situation": "여러 조건을 동시에 기다리고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "AND나 OR 연산자로 여러 조건을 결합할 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'계산' 카테고리의 논리 연산자를 활용하세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "조건1 AND 조건2 형태로 모든 조건이 참이 될 때까지 기다려요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "조건이 절대 참이 되지 않음",
      "why_it_happens": "불가능한 조건을 설정하거나 변수 변경을 잊음",
      "consequence": "프로그램이 영원히 기다리게 됨",
      "solution": "조건이 달성 가능한지 확인하고 변수 변경 로직 검토",
      "teaching_moment": "기다리는 조건이 언젠가는 참이 될 수 있어야 해요. 아니면 영원히 기다려요."
    },
    {
      "mistake": "다른 스크립트가 멈출 것으로 기대",
      "why_it_happens": "wait_until_true가 모든 것을 멈출 것으로 생각",
      "consequence": "현재 스크립트만 멈추고 다른 스크립트는 계속 실행됨",
      "solution": "현재 스크립트만 영향받는다는 것을 이해",
      "teaching_moment": "이 블록은 현재 스크립트만 멈춰요. 다른 스크립트는 계속 실행돼요."
    },
    {
      "mistake": "너무 복잡한 조건 사용",
      "why_it_happens": "여러 조건을 한 번에 확인하려 함",
      "consequence": "디버깅이 어렵고 예상대로 작동하지 않음",
      "solution": "조건을 단순화하거나 단계별로 나누기",
      "teaching_moment": "복잡한 조건은 이해하기도 디버깅하기도 어려워요. 단순하게 만드세요."
    },
    {
      "mistake": "조건 확인 빈도를 고려하지 않음",
      "why_it_happens": "성능 영향을 생각하지 않음",
      "consequence": "너무 자주 확인하여 성능 저하",
      "solution": "필요한 경우만 확인하도록 최적화",
      "teaching_moment": "조건을 계속 확인하는 것도 컴퓨터 자원을 사용해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "흐름 카테고리 찾기",
      "instruction": "블록 팔레트에서 주황색 '흐름' 카테고리를 클릭하세요.",
      "visual_hint": "화살표 모양의 아이콘이 있는 주황색 카테고리입니다."
    },
    {
      "step": 2,
      "title": "조건 대기 블록 선택",
      "instruction": "'조건이 참이 될 때까지 기다리기' 블록을 찾아서 드래그하세요.",
      "visual_hint": "육각형 조건 입력 자리가 있는 대기 블록입니다."
    },
    {
      "step": 3,
      "title": "조건 설정",
      "instruction": "육각형 자리에 기다릴 조건을 설정하세요.",
      "visual_hint": "센서, 변수 비교, 논리 연산 등을 조건으로 사용합니다."
    },
    {
      "step": 4,
      "title": "후속 동작 추가",
      "instruction": "조건이 참이 된 후 실행할 블록들을 이어서 배치하세요.",
      "visual_hint": "대기가 끝나면 실행될 코드를 추가합니다."
    },
    {
      "step": 5,
      "title": "테스트 및 확인",
      "instruction": "프로그램을 실행하여 조건이 만족될 때 제대로 진행되는지 확인하세요.",
      "visual_hint": "조건이 참이 되면 다음 블록이 실행되는지 확인합니다."
    }
  ],

  "related_blocks": [
    {
      "block_id": "wait_second",
      "relationship": "시간 대기",
      "explanation": "정해진 시간만큼 기다릴 때 사용"
    },
    {
      "block_id": "repeat_while_true",
      "relationship": "조건 반복",
      "explanation": "조건이 참인 동안 반복할 때 사용"
    },
    {
      "block_id": "if_condition",
      "relationship": "조건 확인",
      "explanation": "한 번만 조건을 확인할 때 사용"
    },
    {
      "block_id": "broadcast_message",
      "relationship": "이벤트 전달",
      "explanation": "조건 만족 후 다른 오브젝트에 알릴 때 사용"
    },
    {
      "block_id": "set_variable",
      "relationship": "상태 변경",
      "explanation": "대기 조건을 변경하기 위한 변수 설정"
    },
    {
      "block_id": "key_pressed",
      "relationship": "입력 감지",
      "explanation": "키 입력을 기다리는 조건으로 자주 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "영원히 기다려요",
      "possible_causes": ["조건이 절대 참이 되지 않음", "변수 변경이 없음", "다른 스크립트가 실행되지 않음", "조건 로직 오류"],
      "solutions": ["조건이 달성 가능한지 확인", "변수 변경 코드 확인", "다른 스크립트 실행 여부 점검", "조건식 재검토"]
    },
    {
      "problem": "즉시 통과해버려요",
      "possible_causes": ["조건이 이미 참", "조건을 반대로 설정", "초기값 설정 오류"],
      "solutions": ["초기 상태 확인", "조건의 참/거짓 방향 재확인", "변수 초기화 추가"]
    },
    {
      "problem": "다른 동작이 멈춰요",
      "possible_causes": ["같은 스크립트 내의 코드", "블록 순서 문제", "병렬 실행 이해 부족"],
      "solutions": ["별도 스크립트로 분리", "실행 순서 재구성", "병렬 실행 구조 활용"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "신호등 대기",
      "explanation": "빨간불이 초록불로 바뀔 때까지 기다리는 것과 같습니다."
    },
    {
      "analogy": "문 앞에서 대기",
      "explanation": "문이 열릴 때까지 기다렸다가 들어가는 것과 비슷합니다."
    },
    {
      "analogy": "버스 정류장",
      "explanation": "버스가 올 때까지 정류장에서 기다리는 것과 같은 원리입니다."
    },
    {
      "analogy": "요리 타이밍",
      "explanation": "물이 끓을 때까지 기다렸다가 면을 넣는 것처럼 적절한 시점을 기다립니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "타임아웃 추가",
      "description": "최대 대기 시간을 설정하여 무한 대기 방지",
      "use_case": "네트워크 대기, 사용자 입력 제한 시간"
    },
    {
      "concept": "복합 조건 대기",
      "description": "여러 조건의 조합으로 복잡한 대기 로직 구현",
      "use_case": "멀티플레이어 동기화, 복잡한 게임 상태"
    },
    {
      "concept": "이벤트 큐 시스템",
      "description": "여러 이벤트를 순서대로 대기하고 처리",
      "use_case": "스토리 진행, 튜토리얼 시퀀스"
    },
    {
      "concept": "비동기 대기 패턴",
      "description": "대기 중에도 다른 작업을 처리할 수 있는 구조",
      "use_case": "백그라운드 로딩, 멀티태스킹"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "wait_until_true 블록을 사용해서 간단한 조건 대기를 구현할 수 있다",
      "example": "키 입력 대기, 변수 값 대기"
    },
    {
      "level": "중급",
      "criteria": "여러 조건과 이벤트를 조합한 동기화 시스템을 구현할 수 있다",
      "example": "작업 동기화, 게임 상태 대기, 순차적 진행"
    },
    {
      "level": "고급",
      "criteria": "복잡한 대기 로직과 타이밍 제어 시스템을 설계할 수 있다",
      "example": "타임아웃 시스템, 이벤트 큐, 비동기 패턴"
    }
  ]
}
