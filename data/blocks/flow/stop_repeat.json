{
  "id": "stop_repeat",
  "category": "flow",
  "name": "반복 중단하기",
  "description": "현재 실행 중인 반복문을 즉시 종료하고 반복문 다음 블록으로 이동하는 제어 블록입니다. break와 동일한 기능으로, 반복을 완전히 끝내고 싶을 때 사용합니다. 중첩된 반복문에서는 가장 가까운 반복문만 종료합니다.",

  "educational_context": {
    "learning_objectives": [
      "반복문 탈출과 흐름 제어 개념 이해",
      "break 문의 역할과 사용법 학습",
      "조건부 반복 종료 패턴 익히기",
      "효율적인 반복 처리와 최적화 방법 습득",
      "중첩 반복문에서의 제어 흐름 이해"
    ],
    "key_concepts": [
      {
        "concept": "반복 탈출 (Break)",
        "explanation": "반복 조건과 관계없이 즉시 반복을 종료하고 반복문 밖으로 나가는 제어 명령입니다."
      },
      {
        "concept": "즉시 종료",
        "explanation": "남은 반복 횟수나 조건과 상관없이 현재 시점에서 바로 반복을 끝냅니다."
      },
      {
        "concept": "가장 가까운 반복",
        "explanation": "중첩된 반복문에서는 자신을 포함한 가장 안쪽 반복문만 종료합니다."
      },
      {
        "concept": "조건부 탈출",
        "explanation": "특정 조건을 만족했을 때 반복을 조기에 종료하여 불필요한 처리를 줄입니다."
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": ["반복 블록 사용 경험", "조건 블록 활용 능력", "프로그램 흐름 이해", "continue 블록과의 차이 인식"]
  },

  "usage_examples": [
    {
      "title": "목표값 찾기",
      "description": "리스트에서 특정 값을 찾으면 반복 종료",
      "blocks": [
        "when_run_button_click",
        "set_list('숫자들', [5, 8, 3, 12, 7, 15, 9])",
        "set_variable('찾는값', 12)",
        "set_variable('찾음', 0)",
        "repeat_basic(<length_of_list('숫자들')>)",
        "  set_variable('현재값', <get_list_item('숫자들', <get_variable('i')>)>)",
        "  if_condition(<get_variable('현재값') = <get_variable('찾는값')>>)",
        "    speak_something('찾았어요! 위치: ' + <get_variable('i')>)",
        "    set_variable('찾음', 1)",
        "    stop_repeat",
        "  speak_something('확인 중: ' + <get_variable('현재값')>)",
        "if_condition(<get_variable('찾음') = 0>)",
        "  speak_something('값을 찾을 수 없어요')"
      ],
      "explanation": "리스트에서 목표값을 찾으면 즉시 반복을 종료하여 불필요한 탐색을 줄입니다."
    },
    {
      "title": "사용자 입력 대기",
      "description": "특정 입력을 받을 때까지 반복",
      "blocks": [
        "when_run_button_click",
        "speak_something('종료하려면 \"exit\"를 입력하세요')",
        "repeat_while_true",
        "  ask_and_wait('명령을 입력하세요')",
        "  set_variable('명령', <get_variable('답변')>)",
        "  if_condition(<get_variable('명령') = 'exit'>)",
        "    speak_something('프로그램을 종료합니다')",
        "    stop_repeat",
        "  speak_something('입력한 명령: ' + <get_variable('명령')>)",
        "  // 명령 처리 로직",
        "speak_something('프로그램 종료됨')"
      ],
      "explanation": "'exit' 명령을 입력받으면 반복을 종료하고 프로그램을 끝냅니다."
    },
    {
      "title": "충돌 감지 이동",
      "description": "장애물에 닿으면 이동 중단",
      "blocks": [
        "when_run_button_click",
        "point_direction(0)",
        "repeat_basic(100)",
        "  if_condition(<is_touched('벽')>)",
        "    speak_something('벽에 부딪혔어요!')",
        "    stop_repeat",
        "  move_direction(5)",
        "  wait_second(0.05)",
        "speak_something('이동 완료')"
      ],
      "explanation": "벽에 닿으면 즉시 이동을 멈추고 반복을 종료합니다."
    },
    {
      "title": "게임 시간 제한",
      "description": "시간 초과나 목표 달성 시 종료",
      "blocks": [
        "when_run_button_click",
        "set_variable('점수', 0)",
        "set_variable('목표점수', 50)",
        "reset_timer",
        "repeat_while_true",
        "  if_condition(<get_timer_value> > 30>)",
        "    speak_something('시간 초과!')",
        "    stop_repeat",
        "  if_condition(<get_variable('점수') >= <get_variable('목표점수')>>)",
        "    speak_something('목표 달성!')",
        "    stop_repeat",
        "  // 게임 로직",
        "  if_condition(<is_clicked>)",
        "    change_variable('점수', 10)",
        "    set_text('점수: ' + <get_variable('점수')>)",
        "speak_something('게임 종료! 최종 점수: ' + <get_variable('점수')>)"
      ],
      "explanation": "시간 초과나 목표 점수 달성 시 게임 반복을 종료합니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "반복을 중간에 끝내고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'흐름' 카테고리에서 반복 제어 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'반복 중단하기' 블록을 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "이 블록을 실행하면 즉시 반복문을 빠져나가요"
        }
      ]
    },
    {
      "situation": "특정 조건에서 반복을 멈추고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "조건 블록 안에 stop_repeat를 넣으면 조건부 종료가 가능해요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'흐름' 카테고리의 조건 블록과 함께 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "if 조건 안에 stop_repeat를 넣어서 원할 때 종료하세요"
        }
      ]
    },
    {
      "situation": "continue와 stop의 차이를 모르겠어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "continue는 다음 반복으로, stop은 반복 완전 종료예요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "건너뛰기: continue, 끝내기: stop_repeat"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "stop은 반복문 밖으로 나가고, continue는 반복 안에 남아요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "반복문 밖에서 사용",
      "why_it_happens": "stop_repeat의 사용 조건을 모름",
      "consequence": "블록이 작동하지 않거나 오류 발생",
      "solution": "반드시 반복 블록 안에서만 사용",
      "teaching_moment": "stop_repeat는 반복문 안에서만 의미가 있어요. 빠져나갈 반복이 있어야 해요."
    },
    {
      "mistake": "모든 반복이 끝날 것으로 기대",
      "why_it_happens": "중첩 반복에서 범위를 잘못 이해",
      "consequence": "가장 안쪽 반복만 종료됨",
      "solution": "각 반복마다 별도의 stop_repeat 필요",
      "teaching_moment": "stop_repeat는 가장 가까운 반복문 하나만 끝내요."
    },
    {
      "mistake": "stop_repeat 후 코드가 실행될 것으로 기대",
      "why_it_happens": "반복문 내부 코드가 계속될 것으로 생각",
      "consequence": "stop_repeat 이후 반복문 내 코드는 실행되지 않음",
      "solution": "중요한 처리는 stop_repeat 전에 완료",
      "teaching_moment": "stop_repeat를 만나면 바로 반복문 밖으로 나가요."
    },
    {
      "mistake": "조건 없이 stop_repeat 사용",
      "why_it_happens": "항상 실행되는 위치에 배치",
      "consequence": "반복이 한 번만 실행되고 끝남",
      "solution": "조건문 안에 stop_repeat 배치",
      "teaching_moment": "stop_repeat는 특정 조건에서만 실행되도록 해야 해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "흐름 카테고리 찾기",
      "instruction": "블록 팔레트에서 주황색 '흐름' 카테고리를 클릭하세요.",
      "visual_hint": "화살표 모양의 아이콘이 있는 주황색 카테고리입니다."
    },
    {
      "step": 2,
      "title": "반복 중단 블록 선택",
      "instruction": "'반복 중단하기' 블록을 찾아서 작업 영역으로 드래그하세요.",
      "visual_hint": "단독으로 사용되는 제어 블록입니다."
    },
    {
      "step": 3,
      "title": "반복문 내부에 배치",
      "instruction": "반복 블록 안쪽에 stop_repeat 블록을 배치하세요.",
      "visual_hint": "반드시 반복문 내부에 있어야 작동합니다."
    },
    {
      "step": 4,
      "title": "조건 설정",
      "instruction": "일반적으로 조건 블록 안에 넣어서 특정 조건에서만 실행되도록 하세요.",
      "visual_hint": "if 조건 안에 stop_repeat를 넣어 조건부 종료를 구현합니다."
    },
    {
      "step": 5,
      "title": "테스트 및 확인",
      "instruction": "프로그램을 실행하여 원하는 조건에서 반복이 종료되는지 확인하세요.",
      "visual_hint": "반복이 멈추고 다음 코드가 실행되는지 확인합니다."
    }
  ],

  "related_blocks": [
    {
      "block_id": "continue_repeat",
      "relationship": "다음 반복",
      "explanation": "현재 반복만 건너뛰고 계속할 때 사용"
    },
    {
      "block_id": "repeat_basic",
      "relationship": "기본 반복",
      "explanation": "stop_repeat를 사용할 수 있는 횟수 반복문"
    },
    {
      "block_id": "repeat_while_true",
      "relationship": "조건 반복",
      "explanation": "stop_repeat를 사용할 수 있는 조건 반복문"
    },
    {
      "block_id": "repeat_inf",
      "relationship": "무한 반복",
      "explanation": "stop_repeat로 탈출할 수 있는 무한 반복문"
    },
    {
      "block_id": "if_condition",
      "relationship": "조건 확인",
      "explanation": "stop_repeat 실행 여부를 결정하는 조건 블록"
    },
    {
      "block_id": "foreach_list",
      "relationship": "리스트 반복",
      "explanation": "리스트 처리 중 조기 종료할 때 stop_repeat 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "stop_repeat가 작동하지 않아요",
      "possible_causes": ["반복문 밖에서 사용", "블록 연결 오류", "반복문이 실행되지 않음"],
      "solutions": ["반복 블록 내부에 있는지 확인", "블록 연결 상태 점검", "반복문 실행 여부 먼저 확인"]
    },
    {
      "problem": "반복이 너무 일찍 끝나요",
      "possible_causes": ["조건이 너무 쉽게 만족됨", "stop_repeat가 항상 실행됨", "조건 로직 오류"],
      "solutions": ["종료 조건을 더 구체적으로 설정", "조건문 안에 stop_repeat 배치", "조건식 재검토"]
    },
    {
      "problem": "중첩 반복에서 예상과 다르게 작동해요",
      "possible_causes": ["어느 반복이 종료되는지 혼동", "여러 stop_repeat 충돌", "반복 구조 복잡도"],
      "solutions": ["각 반복의 범위 명확히 구분", "플래그 변수로 상태 관리", "반복 구조 단순화"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "비상 정지 버튼",
      "explanation": "기계의 비상 정지 버튼처럼 즉시 작동을 멈추는 것과 같습니다."
    },
    {
      "analogy": "시험 중 펜 놓기",
      "explanation": "시험 시간이 끝나거나 다 풀면 즉시 펜을 놓는 것과 비슷합니다."
    },
    {
      "analogy": "검색 중단",
      "explanation": "찾던 물건을 발견하면 더 이상 찾지 않고 멈추는 것과 같습니다."
    },
    {
      "analogy": "게임 종료",
      "explanation": "게임에서 목표를 달성하거나 게임오버되면 즉시 끝나는 것과 같은 원리입니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "다중 탈출 조건",
      "description": "여러 조건 중 하나라도 만족하면 반복 종료",
      "use_case": "복합 종료 조건, 다양한 탈출 경로"
    },
    {
      "concept": "중첩 반복 탈출",
      "description": "여러 겹의 반복을 한 번에 탈출하는 패턴",
      "use_case": "2차원 탐색 중단, 깊은 중첩 구조 탈출"
    },
    {
      "concept": "조기 최적화",
      "description": "불필요한 처리를 줄이기 위한 전략적 종료",
      "use_case": "검색 알고리즘, 성능 최적화, 조기 종료 조건"
    },
    {
      "concept": "예외 처리 패턴",
      "description": "오류나 특수 상황 발생 시 안전한 종료",
      "use_case": "에러 핸들링, 안전한 종료, 복구 메커니즘"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "stop_repeat 블록을 사용해서 간단한 반복 종료를 구현할 수 있다",
      "example": "값 찾기, 조건 만족 시 종료"
    },
    {
      "level": "중급",
      "criteria": "적절한 종료 조건을 설계하여 효율적인 반복 처리를 구현할 수 있다",
      "example": "사용자 입력 처리, 충돌 감지, 목표 달성 검사"
    },
    {
      "level": "고급",
      "criteria": "복잡한 반복 구조에서 전략적으로 탈출 로직을 구현할 수 있다",
      "example": "다중 조건 탈출, 중첩 반복 제어, 최적화된 탐색 알고리즘"
    }
  ]
}
