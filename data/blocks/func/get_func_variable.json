{
  "id": "get_func_variable",
  "category": "function",
  "name": "함수 매개변수 값",
  "description": "함수 내부에서 전달받은 매개변수의 값을 가져오는 블록입니다. 함수 호출 시 전달된 인자 값에 접근할 때 사용합니다. 매개변수 타입에 관계없이 모든 매개변수 값을 가져올 수 있는 범용 블록입니다.",

  "educational_context": {
    "learning_objectives": [
      "함수 매개변수 값 접근 방법 이해",
      "매개변수와 인자의 관계 학습",
      "함수 내부에서 외부 값 활용 방법",
      "매개변수 스코프와 생명주기 이해",
      "동적 데이터 처리 기법 습득"
    ],
    "key_concepts": [
      {
        "concept": "매개변수 접근",
        "explanation": "함수에 전달된 값을 매개변수 이름을 통해 가져와 사용하는 방법입니다."
      },
      {
        "concept": "값 바인딩",
        "explanation": "함수 호출 시 전달된 인자가 매개변수에 바인딩되어 함수 내부에서 사용 가능해집니다."
      },
      {
        "concept": "지역 스코프",
        "explanation": "매개변수는 해당 함수 내부에서만 유효하며, 함수 밖에서는 접근할 수 없습니다."
      },
      {
        "concept": "타입 독립성",
        "explanation": "이 블록은 매개변수의 타입과 관계없이 모든 종류의 값을 가져올 수 있습니다."
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": ["함수 정의와 매개변수 추가", "함수 호출과 인자 전달", "변수와 값의 개념", "데이터 타입 이해"]
  },

  "usage_examples": [
    {
      "title": "다양한 타입 매개변수 처리",
      "description": "모든 타입의 매개변수 값 가져오기",
      "blocks": [
        "function_create('종합처리',",
        "  [string_param('이름'),",
        "   number_param('점수'),",
        "   boolean_param('합격여부')])",
        "  // 문자열 매개변수 가져오기",
        "  set_variable('학생이름', <get_func_variable('이름')>)",
        "  speak_something('학생: ' + <get_func_variable('이름')>)",
        "  ",
        "  // 숫자 매개변수 가져오기",
        "  set_variable('획득점수', <get_func_variable('점수')>)",
        "  if_condition(<get_func_variable('점수')> >= 80)",
        "    speak_something('높은 점수: ' + <get_func_variable('점수')>)",
        "  ",
        "  // 불린 매개변수 가져오기",
        "  if_condition(<get_func_variable('합격여부')>)",
        "    set_text(<get_func_variable('이름')> + '님 합격!')",
        "    set_color('#00FF00')",
        "  else",
        "    set_text(<get_func_variable('이름')> + '님 재시도 필요')",
        "    set_color('#FF0000')",
        "",
        "when_run_button_click",
        "function_general('종합처리', ['김철수', 85, true])",
        "wait_second(2)",
        "function_general('종합처리', ['이영희', 75, false])"
      ],
      "explanation": "get_func_variable로 모든 타입의 매개변수 값을 가져와 사용합니다."
    },
    {
      "title": "계산 함수",
      "description": "매개변수를 활용한 복잡한 계산",
      "blocks": [
        "function_create('도형계산',",
        "  [string_param('도형'),",
        "   number_param('가로'),",
        "   number_param('세로')])",
        "  ",
        "  if_condition(<get_func_variable('도형')> = '사각형')",
        "    // 사각형 넓이 계산",
        "    set_variable('넓이', <calc_operation(<get_func_variable('가로')>, '*', <get_func_variable('세로')>)>)",
        "    set_variable('둘레', <calc_operation(<calc_operation(<get_func_variable('가로')>, '+', <get_func_variable('세로')>)>, '*', 2)>)",
        "    speak_something('사각형 넓이: ' + <get_variable('넓이')>)",
        "    speak_something('사각형 둘레: ' + <get_variable('둘레')>)",
        "  ",
        "  else_if(<get_func_variable('도형')> = '삼각형')",
        "    // 삼각형 넓이 계산 (직각삼각형 가정)",
        "    set_variable('넓이', <calc_operation(<calc_operation(<get_func_variable('가로')>, '*', <get_func_variable('세로')>)>, '/', 2)>)",
        "    set_variable('빗변', <calc_sqrt(<calc_operation(<calc_operation(<get_func_variable('가로')>, '*', <get_func_variable('가로')>)>, '+', <calc_operation(<get_func_variable('세로')>, '*', <get_func_variable('세로')>)>)>)>)",
        "    speak_something('삼각형 넓이: ' + <get_variable('넓이')>)",
        "    speak_something('빗변 길이: ' + <get_variable('빗변')>)",
        "  ",
        "  return <get_variable('넓이')>",
        "",
        "when_run_button_click",
        "set_variable('결과1', <function_value('도형계산', ['사각형', 10, 5])>)",
        "set_variable('결과2', <function_value('도형계산', ['삼각형', 3, 4])>)"
      ],
      "explanation": "매개변수 값들을 가져와 도형별 계산을 수행합니다."
    },
    {
      "title": "리스트 처리 함수",
      "description": "리스트 매개변수 처리",
      "blocks": [
        "function_create('통계분석',",
        "  [list_param('데이터'),",
        "   string_param('분석유형')])",
        "  ",
        "  set_variable('데이터수', <length_of_list(<get_func_variable('데이터')>)>)",
        "  speak_something('데이터 개수: ' + <get_variable('데이터수')>)",
        "  ",
        "  if_condition(<get_func_variable('분석유형')> = '합계')",
        "    set_variable('결과', 0)",
        "    foreach_list(<get_func_variable('데이터')>, 'num')",
        "      change_variable('결과', <get_variable('num')>)",
        "    speak_something('합계: ' + <get_variable('결과')>)",
        "  ",
        "  else_if(<get_func_variable('분석유형')> = '평균')",
        "    set_variable('합', 0)",
        "    foreach_list(<get_func_variable('데이터')>, 'num')",
        "      change_variable('합', <get_variable('num')>)",
        "    set_variable('결과', <calc_operation(<get_variable('합')>, '/', <get_variable('데이터수')>)>)",
        "    speak_something('평균: ' + <get_variable('결과')>)",
        "  ",
        "  else_if(<get_func_variable('분석유형')> = '최대값')",
        "    set_variable('결과', <get_list_item(<get_func_variable('데이터')>, 1)>)",
        "    foreach_list(<get_func_variable('데이터')>, 'num')",
        "      if_condition(<get_variable('num') > <get_variable('결과')>>)",
        "        set_variable('결과', <get_variable('num')>)",
        "    speak_something('최대값: ' + <get_variable('결과')>)",
        "  ",
        "  return <get_variable('결과')>",
        "",
        "when_run_button_click",
        "set_list('점수들', [75, 82, 90, 68, 95])",
        "function_general('통계분석', [<get_list('점수들')>, '합계'])",
        "function_general('통계분석', [<get_list('점수들')>, '평균'])",
        "function_general('통계분석', [<get_list('점수들')>, '최대값'])"
      ],
      "explanation": "리스트 타입 매개변수를 가져와 다양한 통계 분석을 수행합니다."
    },
    {
      "title": "재귀 함수",
      "description": "매개변수를 활용한 재귀 호출",
      "blocks": [
        "function_create('팩토리얼', [number_param('n')])",
        "  // 종료 조건",
        "  if_condition(<get_func_variable('n')> <= 1)",
        "    return 1",
        "  ",
        "  // 재귀 호출",
        "  set_variable('n_minus_1', <calc_operation(<get_func_variable('n')>, '-', 1)>)",
        "  set_variable('재귀결과', <function_value('팩토리얼', [<get_variable('n_minus_1')>])>)",
        "  return <calc_operation(<get_func_variable('n')>, '*', <get_variable('재귀결과')>)>",
        "",
        "function_create('카운트다운', [number_param('시작')])",
        "  speak_something(<get_func_variable('시작')>)",
        "  wait_second(1)",
        "  ",
        "  if_condition(<get_func_variable('시작')> > 0)",
        "    // 재귀 호출로 카운트다운",
        "    function_general('카운트다운', [<calc_operation(<get_func_variable('시작')>, '-', 1)>])",
        "  else",
        "    speak_something('발사!')",
        "",
        "when_run_button_click",
        "set_variable('5팩토리얼', <function_value('팩토리얼', [5])>)",
        "speak_something('5! = ' + <get_variable('5팩토리얼')>)",
        "wait_second(2)",
        "function_general('카운트다운', [5])"
      ],
      "explanation": "매개변수를 활용하여 재귀 함수를 구현합니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "함수에서 매개변수 값을 사용하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "category",
          "content": "'함수' 카테고리에서 매개변수 관련 블록을 찾아보세요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "'함수 매개변수 값' 블록을 선택하세요"
        },
        {
          "step": 3,
          "hint_type": "concept",
          "content": "드롭다운에서 사용할 매개변수 이름을 선택하세요"
        }
      ]
    },
    {
      "situation": "매개변수 값을 계산에 사용하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "get_func_variable은 값을 반환하므로 계산식에 직접 사용 가능해요"
        },
        {
          "step": 2,
          "hint_type": "category",
          "content": "'계산' 카테고리의 연산 블록과 조합하세요"
        },
        {
          "step": 3,
          "hint_type": "specific_block",
          "content": "calc_operation(<get_func_variable('매개변수')>, 연산자, 값) 형태로 사용하세요"
        }
      ]
    },
    {
      "situation": "타입별로 다른 처리를 하고 싶어요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "get_func_variable은 모든 타입을 처리할 수 있어요"
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "타입에 맞는 처리 블록과 조합하여 사용하세요"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "문자열은 텍스트 블록, 숫자는 계산 블록, 불린은 조건문에 활용하세요"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "함수 외부에서 사용",
      "why_it_happens": "매개변수 스코프를 이해하지 못함",
      "consequence": "매개변수에 접근할 수 없음",
      "solution": "함수 정의 내부에서만 사용",
      "teaching_moment": "매개변수는 해당 함수 내부에서만 유효해요."
    },
    {
      "mistake": "매개변수 이름 혼동",
      "why_it_happens": "여러 매개변수 이름을 헷갈림",
      "consequence": "잘못된 값을 가져옴",
      "solution": "드롭다운에서 정확한 이름 선택",
      "teaching_moment": "매개변수 이름을 명확하게 지정하고 정확히 선택하세요."
    },
    {
      "mistake": "정의되지 않은 매개변수 접근",
      "why_it_happens": "존재하지 않는 매개변수 이름 사용",
      "consequence": "undefined 값이나 오류 발생",
      "solution": "함수 정의의 매개변수 확인",
      "teaching_moment": "함수에 정의된 매개변수만 접근할 수 있어요."
    },
    {
      "mistake": "타입 불일치 처리",
      "why_it_happens": "매개변수 타입을 고려하지 않고 사용",
      "consequence": "예상과 다른 동작이나 오류",
      "solution": "매개변수 타입에 맞는 처리",
      "teaching_moment": "매개변수 타입에 맞는 연산과 처리를 해야 해요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "함수 정의 확인",
      "instruction": "사용할 매개변수가 함수에 정의되어 있는지 확인하세요.",
      "visual_hint": "함수 정의에서 매개변수 목록을 확인합니다."
    },
    {
      "step": 2,
      "title": "매개변수 값 블록 추가",
      "instruction": "'함수' 카테고리에서 '함수 매개변수 값' 블록을 선택하세요.",
      "visual_hint": "값을 반환하는 둥근 모양의 블록입니다."
    },
    {
      "step": 3,
      "title": "매개변수 이름 선택",
      "instruction": "드롭다운 메뉴에서 사용할 매개변수 이름을 선택하세요.",
      "visual_hint": "함수에 정의된 모든 매개변수가 목록에 나타납니다."
    },
    {
      "step": 4,
      "title": "값 활용",
      "instruction": "가져온 값을 변수, 계산, 조건문 등에 사용하세요.",
      "visual_hint": "값이 필요한 모든 곳에서 사용 가능합니다."
    },
    {
      "step": 5,
      "title": "테스트",
      "instruction": "다양한 값으로 함수를 호출하여 올바르게 작동하는지 확인하세요.",
      "visual_hint": "여러 타입과 값으로 테스트합니다."
    }
  ],

  "related_blocks": [
    {
      "block_id": "function_param_string",
      "relationship": "문자열 전용",
      "explanation": "문자열 매개변수 값 가져오기 전용 블록"
    },
    {
      "block_id": "function_param_number",
      "relationship": "숫자 전용",
      "explanation": "숫자 매개변수 값 가져오기 전용 블록"
    },
    {
      "block_id": "function_param_boolean",
      "relationship": "불린 전용",
      "explanation": "불린 매개변수 값 가져오기 전용 블록"
    },
    {
      "block_id": "function_create",
      "relationship": "함수 정의",
      "explanation": "매개변수를 정의하는 함수 블록"
    },
    {
      "block_id": "set_variable",
      "relationship": "값 저장",
      "explanation": "매개변수 값을 변수에 저장"
    },
    {
      "block_id": "calc_operation",
      "relationship": "계산 활용",
      "explanation": "매개변수 값을 계산에 사용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "매개변수 값을 가져올 수 없어요",
      "possible_causes": ["함수 외부에서 사용", "매개변수 이름 오타", "매개변수가 정의되지 않음"],
      "solutions": ["함수 내부에서만 사용", "드롭다운에서 정확한 이름 선택", "함수 정의 확인"]
    },
    {
      "problem": "예상과 다른 값이 나와요",
      "possible_causes": ["잘못된 매개변수 선택", "함수 호출 시 잘못된 값 전달", "타입 불일치"],
      "solutions": ["매개변수 이름 재확인", "함수 호출 인자 확인", "타입별 처리 확인"]
    },
    {
      "problem": "undefined나 null이 반환돼요",
      "possible_causes": ["매개변수에 값이 전달되지 않음", "존재하지 않는 매개변수", "함수 호출 오류"],
      "solutions": ["함수 호출 시 모든 인자 전달", "매개변수 존재 여부 확인", "함수 호출 방식 점검"]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "편지 봉투",
      "explanation": "함수에 전달된 편지(값)를 봉투(매개변수)에서 꺼내 읽는 것과 같습니다."
    },
    {
      "analogy": "택배 상자",
      "explanation": "배송받은 상자(매개변수)를 열어 내용물(값)을 확인하는 것과 비슷합니다."
    },
    {
      "analogy": "변수 그릇",
      "explanation": "그릇(매개변수)에 담긴 내용물(값)을 사용하는 것과 같은 개념입니다."
    },
    {
      "analogy": "입력 양식",
      "explanation": "양식에 입력된 데이터를 읽어서 처리하는 것과 동일합니다."
    }
  ],

  "extensions_and_variations": [
    {
      "concept": "매개변수 기본값",
      "description": "매개변수가 전달되지 않았을 때 기본값 사용",
      "use_case": "선택적 매개변수, 하위 호환성"
    },
    {
      "concept": "매개변수 검증",
      "description": "매개변수 값의 유효성을 확인하고 처리",
      "use_case": "안전한 함수, 오류 방지"
    },
    {
      "concept": "가변 매개변수",
      "description": "개수가 정해지지 않은 매개변수 처리",
      "use_case": "유연한 함수, 다양한 입력 처리"
    },
    {
      "concept": "매개변수 변환",
      "description": "받은 매개변수를 다른 형태로 변환하여 사용",
      "use_case": "타입 변환, 데이터 정규화"
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "get_func_variable로 간단한 매개변수 값을 가져와 사용할 수 있다",
      "example": "단일 매개변수 접근, 기본 출력"
    },
    {
      "level": "중급",
      "criteria": "다양한 타입의 매개변수를 적절히 처리하고 활용할 수 있다",
      "example": "타입별 처리, 계산 활용, 조건문 적용"
    },
    {
      "level": "고급",
      "criteria": "복잡한 매개변수 처리와 고급 패턴을 구현할 수 있다",
      "example": "재귀 함수, 리스트 처리, 매개변수 검증"
    }
  ]
}
