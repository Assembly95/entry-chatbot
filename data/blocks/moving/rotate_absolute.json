{
  "id": "rotate_absolute",
  "category": "move",
  "name": "방향을 [각도]로 정하기",
  "description": "오브젝트가 바라보는 방향(시각적 회전)을 입력한 각도로 직접 설정합니다. 현재 회전 상태와 상관없이 지정한 절대 각도로 오브젝트의 외관을 회전시키며, 이동 방향 속성과는 독립적으로 오브젝트가 보는 방향만 제어합니다.",

  "educational_context": {
    "learning_objectives": [
      "오브젝트가 바라보는 방향과 이동 방향의 차이점 이해",
      "절대 회전과 상대 회전의 차이점 학습",
      "시각적 회전을 정밀하게 제어하는 방법 습득",
      "회전 방향 설정을 통한 정확한 시각적 배치 구현",
      "게임과 애니메이션에서 오브젝트의 외관 제어 활용법 이해"
    ],
    "key_concepts": [
      {
        "concept": "바라보는 방향 vs 이동 방향",
        "explanation": "오브젝트가 시각적으로 바라보는 방향과 실제로 이동할 때 가는 방향은 서로 독립적인 속성으로, 왼쪽을 보고 있어도 오른쪽으로 이동할 수 있음"
      },
      {
        "concept": "절대 회전 (Absolute Rotation)",
        "explanation": "현재 회전 상태와 관계없이 고정된 기준점(0도)에서 측정한 각도로 오브젝트가 바라보는 방향을 직접 설정하는 방식"
      },
      {
        "concept": "시각적 방향 제어",
        "explanation": "오브젝트의 외관이 향하는 방향을 제어하여 시각적 표현과 사용자 인터페이스에서 직관적인 방향성 제공"
      },
      {
        "concept": "회전 초기화 (Rotation Reset)",
        "explanation": "이전 회전 변화를 무시하고 새로운 절대 각도로 완전히 재설정하여 예측 가능한 시각적 방향 만들기"
      }
    ],
    "difficulty_level": "중급",
    "prerequisites": [
      "Entry 기본 인터페이스 사용법",
      "각도와 회전의 기본 개념 이해",
      "상대적 회전 블록 사용 경험",
      "바라보는 방향과 이동 방향의 차이점 이해"
    ]
  },

  "usage_examples": [
    {
      "title": "캐릭터가 특정 방향 바라보기",
      "description": "캐릭터가 항상 오른쪽을 바라보도록 설정",
      "blocks": ["when_run_button_click", "rotate_absolute(0)", "direction_absolute(90)", "move_direction(100)"],
      "explanation": "캐릭터가 오른쪽을 바라보지만(0도) 이동은 위쪽(90도)으로 하여 옆걸음으로 이동하는 효과를 만듭니다."
    },
    {
      "title": "대화할 때 상대방 바라보기",
      "description": "대화 시 상대 캐릭터를 바라보는 효과",
      "blocks": [
        "when_run_button_click",
        "rotate_absolute(180)",
        "dialog('안녕하세요!', 2)",
        "rotate_absolute(0)",
        "dialog('잘 지내세요!', 2)"
      ],
      "explanation": "대화할 때 왼쪽을 바라보며 인사한 후, 오른쪽을 바라보며 작별 인사를 합니다."
    },
    {
      "title": "시계 바늘 만들기",
      "description": "정확한 시간을 나타내는 시계 바늘",
      "blocks": [
        "when_run_button_click",
        "set_variable('시간', get_date('시'))",
        "rotate_absolute(get_variable('시간') * 30 - 90)",
        "wait_second(1)",
        "set_variable('분', get_date('분'))",
        "rotate_absolute(get_variable('분') * 6 - 90)"
      ],
      "explanation": "현재 시간을 가져와서 시침과 분침이 정확한 시간을 가리키도록 각도를 계산하여 회전시킵니다."
    }
  ],

  "progressive_hints": [
    {
      "situation": "오브젝트가 원하는 방향을 바라보지 않아요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "Entry에서 0도는 오른쪽, 90도는 위쪽, 180도는 왼쪽, 270도는 아래쪽을 바라봐요."
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "오브젝트가 대칭적인 모양이면 회전해도 변화가 안 보여요. 화살표나 얼굴이 있는 모양을 사용해보세요."
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "'계산' 카테고리의 '[오브젝트]의 회전방향 값' 블록으로 현재 바라보는 방향을 확인할 수 있어요."
        }
      ]
    },
    {
      "situation": "바라보는 방향과 이동 방향이 헷갈려요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "'회전 방향 정하기'는 오브젝트가 바라보는 방향만 바꿔요. 실제 이동은 '이동 방향'이 결정해요."
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "왼쪽을 바라보고 있어도 이동 방향이 오른쪽이면 '~만큼 움직이기'로 오른쪽으로 갈 수 있어요."
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "각각 따로 테스트해보세요. 먼저 바라보는 방향만 바꾸고, 그 다음에 이동해보세요."
        }
      ]
    },
    {
      "situation": "각도 계산이 어려워요",
      "steps": [
        {
          "step": 1,
          "hint_type": "concept",
          "content": "시계 방향으로 생각해보세요. 3시 방향이 0도, 12시 방향이 90도예요."
        },
        {
          "step": 2,
          "hint_type": "specific_block",
          "content": "기본 방향부터 익혀보세요: 오른쪽(0도), 위(90도), 왼쪽(180도), 아래(270도)"
        },
        {
          "step": 3,
          "hint_type": "category",
          "content": "45도씩 더하면 대각선이에요: 오른쪽 위(45도), 왼쪽 위(135도) 등"
        }
      ]
    }
  ],

  "common_mistakes": [
    {
      "mistake": "바라보는 방향과 이동 방향을 같은 것으로 생각",
      "why_it_happens": "시각적으로 보이는 방향과 실제 이동 방향이 독립적이라는 점을 이해하지 못함",
      "consequence": "오브젝트가 바라보는 방향과 다른 방향으로 이동하여 부자연스러운 움직임",
      "solution": "바라보는 방향은 시각적 효과, 이동 방향은 움직임 속성이라는 차이점을 명확히 구분",
      "teaching_게 moment": "사람이 뒤를 돌아보면서 앞으로 걸어갈 수 있는 것처럼, 바라보는 방향과 이동 방향은 다를 수 있어요."
    },
    {
      "mistake": "대칭적인 모양으로 회전 테스트",
      "why_it_happens": "원형이나 정사각형 등으로 회전 효과를 확인하려고 시도",
      "consequence": "실제로는 회전하고 있지만 시각적으로 변화가 보이지 않아 작동하지 않는다고 오해",
      "solution": "화살표, 얼굴, 삼각형 등 방향성이 명확한 모양을 사용하여 회전 확인",
      "teaching_moment": "둥근 공을 돌려도 돌아가는지 모르지만, 화살표를 돌리면 방향을 쉽게 알 수 있어요."
    },
    {
      "mistake": "상대 회전과 절대 회전을 혼용하여 사용",
      "why_it_happens": "'~만큼 회전하기'와 '회전 방향을 ~로 정하기'의 차이점을 구분하지 못함",
      "consequence": "예측하기 어려운 복잡한 회전 패턴으로 인한 혼란",
      "solution": "절대 회전은 정확한 방향 설정, 상대 회전은 점진적 변화에 사용한다는 특성 이해",
      "teaching_moment": "시계 바늘을 3시 방향으로 맞추기(절대)와 현재에서 90도 더 돌리기(상대)는 다른 방법이에요."
    }
  ],

  "step_by_step_guide": [
    {
      "step": 1,
      "title": "절대 회전 블록 찾기",
      "instruction": "블록 팔레트에서 '움직임' 카테고리를 클릭하세요.",
      "visual_hint": "파란색 화살표 아이콘이 있는 카테고리를 찾아보세요."
    },
    {
      "step": 2,
      "title": "회전 방향 정하기 블록 선택",
      "instruction": "'회전 방향을 [ ]로 정하기' 블록을 작업 영역으로 드래그하세요.",
      "visual_hint": "각도 입력칸과 원형 화살표가 있는 블록을 찾아보세요."
    },
    {
      "step": 3,
      "title": "바라볼 각도 설정",
      "instruction": "각도 입력칸에 오브젝트가 바라볼 방향의 각도를 입력하세요.",
      "visual_hint": "0도(오른쪽), 90도(위쪽), 180도(왼쪽), 270도(아래쪽)를 참고하세요."
    },
    {
      "step": 4,
      "title": "시작 블록과 연결",
      "instruction": "시작 블록이나 다른 실행 블록과 연결하세요.",
      "visual_hint": "방향성이 있는 오브젝트 모양을 사용하면 변화를 쉽게 확인할 수 있어요."
    },
    {
      "step": 5,
      "title": "실행 및 확인",
      "instruction": "프로그램을 실행해서 오브젝트가 원하는 방향을 바라보는지 확인하세요.",
      "visual_hint": "이동 방향과는 별개로 바라보는 방향만 바뀌는 것을 관찰해보세요."
    }
  ],

  "related_blocks": [
    {
      "block_name": "[값]도 만큼 회전하기",
      "relationship": "절대 회전 vs 상대 회전",
      "explanation": "절대적 방향 설정과 상대적 회전 변화의 차이점을 비교하여 각각의 활용법 이해"
    },
    {
      "block_name": "이동 방향을 [각도]로 정하기",
      "relationship": "바라보는 방향 vs 이동 방향",
      "explanation": "시각적으로 바라보는 방향과 실제 이동할 방향을 독립적으로 제어하는 방법 이해"
    },
    {
      "block_name": "[오브젝트/마우스] 쪽으로 회전하기",
      "relationship": "자동 방향 설정",
      "explanation": "각도 계산 없이 특정 대상을 바라보도록 자동으로 회전하는 편리한 방법"
    },
    {
      "block_name": "[오브젝트]의 회전방향 값",
      "relationship": "현재 바라보는 방향 확인",
      "explanation": "현재 오브젝트가 바라보고 있는 방향을 확인하여 조건부 회전이나 각도 계산에 활용"
    }
  ],

  "debugging_tips": [
    {
      "problem": "회전했는데 변화가 보이지 않아요",
      "possible_causes": ["원형이나 대칭적인 모양을 사용", "각도 변화가 너무 작음", "배경색과 비슷한 색의 오브젝트"],
      "solutions": [
        "화살표, 얼굴, 삼각형 등 방향성이 있는 모양으로 변경",
        "90도, 180도 등 큰 각도로 테스트",
        "대비가 뚜렷한 색상의 오브젝트 사용"
      ]
    },
    {
      "problem": "바라보는 방향을 바꿔도 이동 방향이 안 바뀌어요",
      "possible_causes": [
        "바라보는 방향과 이동 방향을 같은 것으로 오해",
        "이동 방향이 별도로 설정되어 있음",
        "두 방향이 독립적이라는 점을 이해하지 못함"
      ],
      "solutions": [
        "바라보는 방향은 시각적 효과만 담당한다는 점 이해",
        "이동하려면 '이동 방향을 ~로 정하기' 블록도 함께 사용",
        "각각 따로 테스트해서 독립성 확인"
      ]
    }
  ],

  "real_world_connections": [
    {
      "analogy": "사람의 시선 방향",
      "explanation": "사람이 고개를 돌려서 특정 방향을 바라보는 것처럼, 오브젝트가 바라보는 방향을 설정합니다."
    },
    {
      "analogy": "자동차의 방향 지시등",
      "explanation": "차가 가는 방향과 별개로 방향 지시등으로 의도를 표시하는 것처럼, 시각적 방향을 나타냅니다."
    },
    {
      "analogy": "건물의 정면",
      "explanation": "건물이 어느 방향을 '정면'으로 하는지 정하는 것처럼, 오브젝트의 기본 방향을 설정합니다."
    },
    {
      "analogy": "시계 바늘의 방향",
      "explanation": "시계 바늘이 정확한 시간을 가리키도록 각도를 맞추는 것처럼, 정밀한 방향 설정을 합니다."
    }
  ],

  "assessment_criteria": [
    {
      "level": "기초",
      "criteria": "회전 방향 정하기 블록을 사용하여 오브젝트가 원하는 방향(상하좌우)을 바라보도록 설정할 수 있다"
    },
    {
      "level": "중급",
      "criteria": "바라보는 방향과 이동 방향의 차이를 이해하고, 각각을 독립적으로 제어하여 원하는 시각적 효과와 움직임을 만들 수 있다"
    },
    {
      "level": "고급",
      "criteria": "절대 회전과 상대 회전을 적절히 조합하고, 계산 블록을 활용하여 동적으로 방향을 제어하는 복합적인 시각적 표현을 구현할 수 있다"
    }
  ]
}
